{"version":3,"sources":["webpack:///./src/app/notifications/notifications.module.ts","webpack:///./src/app/notifications/notifications.page.html","webpack:///./src/app/notifications/notifications.page.scss","webpack:///./src/app/notifications/notifications.page.ts"],"names":[],"mappings":"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","file":"notifications-notifications-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NotificationsPage } from './notifications.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NotificationsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [NotificationsPage]\n})\nexport class NotificationsPageModule {}\n","module.exports = \"<!--<ion-header color=\\\"medium\\\">-->\\n<ion-toolbar color=\\\"medium\\\">\\n    <ion-buttons slot=\\\"start\\\" style=\\\"color: black\\\">\\n        <!-- <ion-back-button text=\\\"\\\" defaultHref=\\\"home\\\" class=\\\"menubutton\\\">\\n        </ion-back-button> -->\\n        <ion-menu-button class=\\\"menubutton\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title align=\\\"center\\\" class=\\\"titleall\\\">Notifications</ion-title>\\n</ion-toolbar>\\n<!--</ion-header>-->\\n\\n<ion-content>\\n    <ion-segment (ionChange)=\\\"tabChanged($event)\\\" scrollable>\\n        <ion-segment-button value=\\\"Unread\\\" checked layout=\\\"icon-end\\\" class=\\\"segmentwidth\\\">\\n            <ion-label style=\\\"text-transform: capitalize;font-size: 14px\\\">Unread</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"Read\\\" class=\\\"segmentwidth\\\">\\n            <ion-label style=\\\"text-transform: capitalize;font-size: 14px\\\">Read</ion-label>\\n        </ion-segment-button>\\n    </ion-segment>\\n\\n    <div *ngIf=\\\"isSelected=='Unread'\\\" align=\\\"center\\\" margin-top=\\\"8px\\\">\\n        <div style=\\\"margin-top: 20px;\\\">\\n            <ion-label *ngIf=\\\"unreadNotificationsList.length == 0 && noDocsNotifications == true\\\"\\n                style=\\\"font-size: 16px; font-weight: bold; margin-top: 10px;\\\">You Don't Have Any Notification\\n                Yet\\n            </ion-label>\\n            <ion-label *ngIf=\\\"unreadNotificationsList.length == 0 && noDocsNotifications == false\\\"\\n                style=\\\"font-size: 16px; font-weight: bold; margin-top: 10px;\\\">No New Notifications</ion-label>\\n        </div>\\n        <ion-card *ngFor=\\\"let notification of unreadNotificationsList\\\">\\n            <div id='num1'>\\n                <ion-row>\\n                    <ion-col size=\\\"3\\\">\\n                        <ion-label class=\\\"notificationTitle\\\">Type: </ion-label>\\n                    </ion-col>\\n                    <ion-col size=\\\"9\\\">\\n                        <ion-label class=\\\"notificationContent\\\">{{notification.type_value}}</ion-label>\\n                    </ion-col>\\n                </ion-row>\\n                <ion-row>\\n                    <ion-col size=\\\"3\\\">\\n                        <ion-label class=\\\"notificationTitle\\\">Date: </ion-label>\\n                    </ion-col>\\n                    <ion-col size=\\\"9\\\">\\n                        <ion-label class=\\\"notificationContent\\\">{{notification.created_on}}</ion-label>\\n                    </ion-col>\\n                </ion-row>\\n                <ion-row>\\n                    <ion-col size=\\\"3\\\">\\n                        <ion-label class=\\\"notificationTitle\\\">From: </ion-label>\\n                    </ion-col>\\n                    <ion-col size=\\\"9\\\">\\n                        <ion-label class=\\\"notificationContent\\\">{{notification.username}}</ion-label>\\n                    </ion-col>\\n                </ion-row>\\n                <ion-row *ngIf=\\\"notification.event_name != null\\\">\\n                    <ion-col size=\\\"3\\\">\\n                        <ion-label class=\\\"notificationTitle\\\">Event: </ion-label>\\n                    </ion-col>\\n                    <ion-col size=\\\"9\\\">\\n                        <ion-label class=\\\"notificationContent\\\">{{notification.event_name}}</ion-label>\\n                    </ion-col>\\n                </ion-row>\\n            </div>\\n            <div id='num2'>\\n                <ion-label class=\\\"notificationDescription\\\">\\n                    {{notification.announcement}}\\n                </ion-label>\\n                <button class=\\\"confirmBtn\\\" align=\\\"center\\\" padding=\\\"2px\\\"\\n                    (click)=\\\"onClickConfirm(notification)\\\">Confirm</button>\\n            </div>\\n        </ion-card>\\n    </div>\\n\\n    <div *ngIf=\\\"isSelected=='Read'\\\" align=\\\"center\\\" margin-top=\\\"8px\\\">\\n        <div style=\\\"margin-top: 20px;\\\">\\n            <ion-label *ngIf=\\\"readNotificationsList.length == 0\\\"\\n                style=\\\"font-size: 16px; font-weight: bold; margin-top: 10px;\\\">No New\\n                Notification</ion-label>\\n        </div>\\n        <ion-card *ngFor=\\\"let notification of readNotificationsList\\\">\\n            <div id='num1'>\\n                <ion-row>\\n                    <ion-col size=\\\"3\\\">\\n                        <ion-label class=\\\"notificationTitle\\\">Type: </ion-label>\\n                    </ion-col>\\n                    <ion-col size=\\\"9\\\">\\n                        <ion-label class=\\\"notificationContent\\\">{{notification.type_value}}</ion-label>\\n                    </ion-col>\\n                </ion-row>\\n                <ion-row>\\n                    <ion-col size=\\\"3\\\">\\n                        <ion-label class=\\\"notificationTitle\\\">Date: </ion-label>\\n                    </ion-col>\\n                    <ion-col size=\\\"9\\\">\\n                        <ion-label class=\\\"notificationContent\\\">{{notification.created_on}}</ion-label>\\n                    </ion-col>\\n                </ion-row>\\n                <ion-row>\\n                    <ion-col size=\\\"3\\\">\\n                        <ion-label class=\\\"notificationTitle\\\">From: </ion-label>\\n                    </ion-col>\\n                    <ion-col size=\\\"9\\\">\\n                        <ion-label class=\\\"notificationContent\\\">{{notification.username}}</ion-label>\\n                    </ion-col>\\n                </ion-row>\\n                <ion-row *ngIf=\\\"notification.event_name != null\\\">\\n                    <ion-col size=\\\"3\\\">\\n                        <ion-label class=\\\"notificationTitle\\\">Event: </ion-label>\\n                    </ion-col>\\n                    <ion-col size=\\\"9\\\">\\n                        <ion-label class=\\\"notificationContent\\\">{{notification.event_name}}</ion-label>\\n                    </ion-col>\\n                </ion-row>\\n            </div>\\n            <div id='num2'>\\n                <ion-label class=\\\"notificationDescription\\\">\\n                    {{notification.announcement}}\\n                </ion-label>\\n                <!-- <button class=\\\"confirmBtn\\\" align=\\\"center\\\" padding=\\\"2px\\\" (click)=\\\"onClickConfirm()\\\">Confirm</button> -->\\n            </div>\\n        </ion-card>\\n    </div>\\n</ion-content>\"","module.exports = \".sc-ion-segment-md-h {\\n  --background: transparent;\\n  --background-hover: rgba(var(--ion-color-primary-rgb,56,128,255),0.1);\\n  --background-activated: rgba(var(--ion-color-primary-rgb,56,128,255),0.16);\\n  --background-checked: #3880ff00;\\n  --color-checked: var(--ion-color-primary-contrast,#fff);\\n  --color-disabled: rgba(var(--ion-color-primary-rgb,56,128,255),0.3);\\n  --color-checked-disabled: rgba(var(--ion-color-primary-contrast-rgb,255,255,255),0.3);\\n  --border-color: transparent;\\n  --indicator-color: black;\\n  background-color: gray;\\n  height: 50px;\\n  --color: #000000; }\\n\\n.segmentwidth {\\n  width: 50%; }\\n\\n#num1 {\\n  min-height: 30px;\\n  background-color: rgba(227, 162, 20, 0.7);\\n  padding: 5px;\\n  margin-bottom: 10px;\\n  text-align: justify; }\\n\\n#num2 {\\n  margin-top: -10px;\\n  min-height: 30px;\\n  background-color: white;\\n  padding: 8px;\\n  text-align: justify; }\\n\\n.confirmBtn {\\n  background-color: #E3A214;\\n  cursor: pointer;\\n  border: none;\\n  width: 100%;\\n  margin-top: 5px;\\n  font-size: 15px;\\n  color: black; }\\n\\n.ion-margin-top, [margin-top] {\\n  margin-top: var(--ion-margin, 0px); }\\n\\n.notificationTitle {\\n  color: black;\\n  font-size: 15px;\\n  font-weight: bold; }\\n\\n.notificationContent {\\n  color: black;\\n  font-size: 15px; }\\n\\n.notificationDescription {\\n  color: black;\\n  font-size: 15px; }\\n\\nion-content {\\n  --ion-background-color:#F0F0F0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbmNhZG1pbi9Eb2N1bWVudHMvZ2l0bGFiL3JsaS1jb21tYW5kZXItYW5kcm9pZC1pb25pYzQvc3JjL2FwcC9ub3RpZmljYXRpb25zL25vdGlmaWNhdGlvbnMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUUseUJBQWE7RUFDYixxRUFBbUI7RUFDbkIsMEVBQXVCO0VBQ3ZCLCtCQUFxQjtFQUVyQix1REFBZ0I7RUFDaEIsbUVBQWlCO0VBQ2pCLHFGQUF5QjtFQUN6QiwyQkFBZTtFQUNmLHdCQUFrQjtFQUNsQixzQkFBc0I7RUFDdEIsWUFBWTtFQUNaLGdCQUFRLEVBQUE7O0FBR1Y7RUFDRSxVQUFVLEVBQUE7O0FBR1o7RUFDRSxnQkFBZ0I7RUFDaEIseUNBQXNDO0VBQ3RDLFlBQVk7RUFDWixtQkFBbUI7RUFDbkIsbUJBQW1CLEVBQUE7O0FBR3JCO0VBQ0UsaUJBQWlCO0VBQ2pCLGdCQUFnQjtFQUNoQix1QkFBdUI7RUFDdkIsWUFBWTtFQUNaLG1CQUFtQixFQUFBOztBQUdyQjtFQUNFLHlCQUF5QjtFQUN6QixlQUFjO0VBQ2QsWUFBWTtFQUNaLFdBQVc7RUFDWCxlQUFlO0VBQ2YsZUFBZTtFQUNmLFlBQVksRUFBQTs7QUFHZDtFQUNFLGtDQUFrQyxFQUFBOztBQUdwQztFQUNFLFlBQVc7RUFDWCxlQUFjO0VBQ2QsaUJBQWdCLEVBQUE7O0FBR2xCO0VBQ0UsWUFBVztFQUNYLGVBQWMsRUFBQTs7QUFHaEI7RUFDRSxZQUFXO0VBQ1gsZUFBYyxFQUFBOztBQUdoQjtFQUNFLDhCQUF1QixFQUFBIiwiZmlsZSI6InNyYy9hcHAvbm90aWZpY2F0aW9ucy9ub3RpZmljYXRpb25zLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zYy1pb24tc2VnbWVudC1tZC1oIHtcbiAgLy8uc2MtaW9uLXNlZ21lbnQtaW9zLWgge1xuICAtLWJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAtLWJhY2tncm91bmQtaG92ZXI6IHJnYmEodmFyKC0taW9uLWNvbG9yLXByaW1hcnktcmdiLDU2LDEyOCwyNTUpLDAuMSk7XG4gIC0tYmFja2dyb3VuZC1hY3RpdmF0ZWQ6IHJnYmEodmFyKC0taW9uLWNvbG9yLXByaW1hcnktcmdiLDU2LDEyOCwyNTUpLDAuMTYpO1xuICAtLWJhY2tncm91bmQtY2hlY2tlZDogIzM4ODBmZjAwO1xuICAvLyAtLWNvbG9yOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSwjMDAwMDAwKSAhaW1wb3J0YW50O1xuICAtLWNvbG9yLWNoZWNrZWQ6IHZhcigtLWlvbi1jb2xvci1wcmltYXJ5LWNvbnRyYXN0LCNmZmYpO1xuICAtLWNvbG9yLWRpc2FibGVkOiByZ2JhKHZhcigtLWlvbi1jb2xvci1wcmltYXJ5LXJnYiw1NiwxMjgsMjU1KSwwLjMpO1xuICAtLWNvbG9yLWNoZWNrZWQtZGlzYWJsZWQ6IHJnYmEodmFyKC0taW9uLWNvbG9yLXByaW1hcnktY29udHJhc3QtcmdiLDI1NSwyNTUsMjU1KSwwLjMpO1xuICAtLWJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIC0taW5kaWNhdG9yLWNvbG9yOiBibGFjaztcbiAgYmFja2dyb3VuZC1jb2xvcjogZ3JheTtcbiAgaGVpZ2h0OiA1MHB4O1xuICAtLWNvbG9yOiAjMDAwMDAwO1xufVxuXG4uc2VnbWVudHdpZHRoe1xuICB3aWR0aDogNTAlO1xufVxuXG4jbnVtMXtcbiAgbWluLWhlaWdodDogMzBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMjcsMTYyLDIwLDAuNyk7XG4gIHBhZGRpbmc6IDVweDtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgdGV4dC1hbGlnbjoganVzdGlmeTtcbn1cblxuI251bTJ7XG4gIG1hcmdpbi10b3A6IC0xMHB4O1xuICBtaW4taGVpZ2h0OiAzMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZzogOHB4O1xuICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xufVxuXG4uY29uZmlybUJ0bntcbiAgYmFja2dyb3VuZC1jb2xvcjogI0UzQTIxNDtcbiAgY3Vyc29yOnBvaW50ZXI7XG4gIGJvcmRlcjogbm9uZTtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi10b3A6IDVweDtcbiAgZm9udC1zaXplOiAxNXB4O1xuICBjb2xvcjogYmxhY2s7XG59XG5cbi5pb24tbWFyZ2luLXRvcCwgW21hcmdpbi10b3BdIHtcbiAgbWFyZ2luLXRvcDogdmFyKC0taW9uLW1hcmdpbiwgMHB4KTtcbn1cblxuLm5vdGlmaWNhdGlvblRpdGxlIHtcbiAgY29sb3I6YmxhY2s7IFxuICBmb250LXNpemU6MTVweDsgXG4gIGZvbnQtd2VpZ2h0OmJvbGQ7XG59XG5cbi5ub3RpZmljYXRpb25Db250ZW50IHtcbiAgY29sb3I6YmxhY2s7IFxuICBmb250LXNpemU6MTVweDsgXG59XG5cbi5ub3RpZmljYXRpb25EZXNjcmlwdGlvbiB7XG4gIGNvbG9yOmJsYWNrOyBcbiAgZm9udC1zaXplOjE1cHg7IFxufVxuXG5pb24tY29udGVudHtcbiAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjojRjBGMEYwO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { LoadingController, AlertController } from '@ionic/angular';\nimport { DataSevicesService } from '../providers/Data-Services/data-sevices.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.page.html',\n  styleUrls: ['./notifications.page.scss'],\n})\nexport class NotificationsPage implements OnInit {\n  isSelected: any = 'Read'\n  resultData: any\n  readNotificationsList = []\n  unreadNotificationsList = []\n  noDocsNotifications = true\n\n  constructor(\n    public loadingController: LoadingController,\n    public dataServices: DataSevicesService,\n    public alertController: AlertController,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  tabChanged(data: any) {\n    if (data.detail.value == 'Unread') {\n      this.isSelected = 'Unread';\n      this.getUnreadNotifications();\n    } else {\n      this.isSelected = 'Read';\n      this.getReadNotifications();\n    }\n  }\n\n  getReadNotifications() {\n    this.presentLoading();\n    this.dataServices.getReadNotificationsApi().then((result) => {\n      this.resultData = result\n      console.log('readNotifications : ' + this.resultData)\n      this.readNotificationsList = []\n      this.readNotificationsList = this.resultData\n      this.loadingController.dismiss();\n    }, error => {\n      if (error.url == null) {\n        // alert('No internet connection.')  \n        this.loadingController.dismiss();\n      }\n      this.loadingController.dismiss();\n      if (error.status == 401) {\n        // this.dataServices.DeleteSqliteDB_Tables()\n        this.displayUnauthoriesdAlert();\n      }\n    })\n  }\n\n  getUnreadNotifications() {\n    this.presentLoading();\n    this.dataServices.getUnreadNotificationsApi().then((result) => {\n      this.resultData = result\n      console.log('unreadNotification : ' + this.resultData)\n      this.unreadNotificationsList = []\n      this.unreadNotificationsList = this.resultData\n      this.noDocsNotifications = false\n      this.loadingController.dismiss();\n    }, error => {\n      if (error.url == null) {\n        // alert('No internet connection.')  \n        this.loadingController.dismiss();\n      }\n      this.loadingController.dismiss();\n      if (error.status == 401) {\n        // this.dataServices.DeleteSqliteDB_Tables()\n        this.displayUnauthoriesdAlert();\n      }\n    })\n  }\n\n  onClickConfirm(notification) {\n    console.log('notification: ' + JSON.stringify(notification) + '\\nannouncement_id: ' + notification.announcement_id)\n    this.postConfirmedUnreadNotifications(notification.announcement_id)\n  }\n\n  postConfirmedUnreadNotifications(notificationID) {\n    this.dataServices.postConfirmedUnreadNotifications(notificationID).then(response => {\n      console.log('response: ' + response)\n      this.getUnreadNotifications()\n    }, error => {\n      if (error.url == null) {\n        // alert('No internet connection.')  \n        this.loadingController.dismiss();\n      }\n      this.loadingController.dismiss();\n      if (error.status == 401) {\n        // this.dataServices.DeleteSqliteDB_Tables()\n        this.displayUnauthoriesdAlert();\n      }\n    })\n  }\n\n  async presentLoading() {\n    const loading = await this.loadingController.create({\n      message: 'Please wait...',\n      spinner: null\n    });\n    await loading.present();\n    setTimeout(() => {\n      loading.dismiss();\n    }, 2000);\n    const { role, data } = await loading.onDidDismiss();\n\n    console.log('Loading dismissed!');\n  }\n\n  async displayUnauthoriesdAlert() {\n    const alert = await this.alertController.create({\n      header: 'Unauthorized',\n      subHeader: '',\n      buttons: [{\n        text: 'ok',\n        handler: () => {\n          this.router.navigate(['/login']);\n        }\n      }]\n    });\n\n    await alert.present();\n  }\n\n}\n"],"sourceRoot":""}