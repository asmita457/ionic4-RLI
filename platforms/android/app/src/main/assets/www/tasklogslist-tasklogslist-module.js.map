{"version":3,"sources":["webpack:///./src/app/tasklogslist/tasklogslist.module.ts","webpack:///./src/app/tasklogslist/tasklogslist.page.html","webpack:///./src/app/tasklogslist/tasklogslist.page.scss","webpack:///./src/app/tasklogslist/tasklogslist.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEU;AAEvD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mEAAgB;KAC5B;CACF,CAAC;AAWF;IAAA;IAAqC,CAAC;IAAzB,sBAAsB;QATlC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,mEAAgB,CAAC;SACjC,CAAC;OACW,sBAAsB,CAAG;IAAD,6BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBnC,idAAid,aAAa,ymBAAymB,0LAA0L,iOAAiO,oHAAoH,gIAAgI,sBAAsB,WAAW,oEAAoE,gBAAgB,2CAA2C,gCAAgC,gJAAgJ,sEAAsE,sBAAsB,gTAAgT,0QAA0Q,sBAAsB,WAAW,oEAAoE,gBAAgB,2CAA2C,gCAAgC,+IAA+I,qEAAqE,sBAAsB,mFAAmF,uN;;;;;;;;;;;ACAzrG,+BAA+B,4BAA4B,oBAAoB,EAAE,2BAA2B,8BAA8B,oBAAoB,iBAAiB,eAAe,EAAE,0BAA0B,8BAA8B,0EAA0E,+EAA+E,oCAAoC,4DAA4D,wEAAwE,0FAA0F,gCAAgC,6BAA6B,2BAA2B,iBAAiB,qBAAqB,EAAE,aAAa,8BAA8B,uBAAuB,gCAAgC,2BAA2B,oBAAoB,sBAAsB,EAAE,cAAc,oBAAoB,EAAE,mBAAmB,eAAe,EAAE,cAAc,gCAAgC,mCAAmC,EAAE,iBAAiB,4BAA4B,EAAE,iBAAiB,4BAA4B,EAAE,gBAAgB,4BAA4B,EAAE,+CAA+C,u8F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhuC;AACT;AACoD;AACR;AACU;AAC/B;AAQhE;IAuBE,0BACU,MAAc,EACf,OAAsB,EACtB,eAAgC,EAChC,YAAgC,EAChC,iBAAoC,EACpC,eAAuC,EACtC,MAAc,EACd,QAAkB;QAPlB,WAAM,GAAN,MAAM,CAAQ;QACf,YAAO,GAAP,OAAO,CAAe;QACtB,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAoB;QAChC,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,oBAAe,GAAf,eAAe,CAAwB;QACtC,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAU;QA7B5B,eAAU,GAAQ,UAAU,CAAC;QAM7B,gBAAW,GAAG,IAAI;QAClB,cAAS,GAAG,IAAI;QAChB,iBAAY,GAAG,EAAE;QACjB,wBAAmB,GAAG,EAAE;QACxB,sBAAiB,GAAG,EAAE;QACtB,MAAC,GAAG,CAAC;QACL,MAAC,GAAG,CAAC;QACL,MAAC,GAAG,CAAC;QACL,+BAA0B,GAAG,EAAE;QAC/B,kCAA6B,GAAG,EAAE;QAClC,oBAAe,GAAW,EAAE;QAE5B,uBAAkB,GAAG,EAAE;QACvB,eAAU,GAAG,CAAC;QAYZ,IAAI,CAAC,UAAU,GAAG,UAAU;QAC5B,IAAI,CAAC,mBAAmB,EAAE;QAE1B,6BAA6B;QAC7B,8CAA8C;QAC9C,8CAA8C;QAC9C,wCAAwC;QACxC,2CAA2C;QAC3C,WAAW;QACX,SAAS;QACT,OAAO;QACP,KAAK;IACP,CAAC;IAED,mCAAQ,GAAR;IACA,CAAC;IAED,sCAAW,GAAX;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;IACzC,CAAC;IAEK,qCAAU,GAAhB,UAAiB,IAAS;;;;gBAExB,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,UAAU,EAAE;oBACnC,IAAI,CAAC,UAAU,GAAG,UAAU;oBAC5B,IAAI,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,WAAC;wBAC1B,KAAI,CAAC,oBAAoB,EAAE,CAAC,IAAI,CAAC,UAAM,CAAC;;gCACtC,qBAAqB;gCACrB,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE;;;6BACjC,CAAC;oBACJ,CAAC,CAAC;iBACH;qBAAM;oBACL,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;oBAC5B,IAAI,CAAC,uBAAuB,GAAG,EAAE;oBACjC,IAAI,CAAC,6BAA6B,GAAG,EAAE;oBACvC,IAAI,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,UAAM,CAAC;;;4BAChC,qBAAqB;4BACrB,IAAI,CAAC,uBAAuB,GAAG,EAAE;4BACjC,IAAI,CAAC,6BAA6B,GAAG,EAAE;4BACvC,IAAI,CAAC,oBAAoB,EAAE,CAAC,IAAI,CAAC,UAAM,CAAC;;oCACtC,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE;;;iCACjC,CAAC;;;yBACH,CAAC;iBACH;;;;KACF;IAEK,8CAAmB,GAAzB;;;;gBACE,wBAAwB;gBACxB,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gBAC7C,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;gBAC/C,IAAI,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,IAAI,QAAQ,EAAE;oBACvD,IAAI,CAAC,cAAc,EAAE;oBACrB,IAAI,CAAC,YAAY,CAAC,sBAAsB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;wBAC9E,IAAI,oBAAoB,GAAQ,MAAM;wBACtC,IAAI,oBAAoB,CAAC,OAAO,EAAE;4BAChC,IAAI,SAAS,GAAG,EAAE;4BAClB,IAAI,oBAAoB,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;wDACpC,CAAC;4DACC,CAAC;wCACR,SAAS,CAAC,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;wCACxE,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC;4CACjB,IAAI,EAAE,cAAc;4CACpB,QAAQ,EAAE,SAAS;yCACpB,CAAC,CAAC,IAAI,CAAC,UAAO,EAAgB;;;4DAC7B,qBAAM,EAAE,CAAC,UAAU,CAAC,+DAA+D,EAAE,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;6DACjQ,IAAI,CAAC,aAAG;4DACP,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC;wDAChC,CAAC,CAAC,CAAC,KAAK,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAd,CAAc,CAAC;;wDAH/B,SAG+B,CAAC;wDAChC,qBAAM,EAAE,CAAC,UAAU,CAAC,wVAAwV,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,EAAE,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,MAAM,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;iEACh2C,IAAI,CAAC,aAAG;gEACP,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC;4DAChC,CAAC,CAAC,CAAC,KAAK,CAAC,WAAC,IAAM,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC;;wDAHnC,SAGmC;;;;6CACpC,CAAC,CAAC,KAAK,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAd,CAAc,CAAC,CAAC;oCAChC,CAAC;oCAfD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE;gDAArE,CAAC;qCAeT;gCACH,CAAC;gCAjBD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,oBAAoB,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE;4CAArD,CAAC;iCAiBT;gCAED,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,SAAS,CAAC;gCACtC,IAAI,MAAM,SAAQ;gCAClB,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;gCACpE,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,MAAM,CAAC;gCACzC,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,eAAe,GAAG,GAAG,GAAG,MAAM;gCAC1D,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,KAAI,CAAC,eAAe,CAAC;6BAC3D;yBACF;wBACD,KAAI,CAAC,sBAAsB,EAAE;oBAC/B,CAAC,EAAE,eAAK;wBACN,IAAI,KAAK,CAAC,GAAG,IAAI,IAAI,EAAE;4BACrB,KAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;4BACjC,mCAAmC;yBACpC;wBACD,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC;wBAC9B,KAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;wBACjC,IAAI,KAAK,CAAC,MAAM,IAAI,GAAG,EAAE;4BACvB,4CAA4C;4BAC5C,KAAI,CAAC,wBAAwB,EAAE,CAAC;yBACjC;oBACH,CAAC,CAAC;iBACH;qBAAM;oBACL,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;oBACjC,mCAAmC;iBACpC;;;;KACF;IAEK,iDAAsB,GAA5B;;;;gBACE,IAAI,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,IAAI,QAAQ,EAAE;oBACvD,IAAI,CAAC,YAAY,CAAC,sBAAsB,EAAE,CAAC,IAAI,CAAC,kBAAQ;wBACtD,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC;wBACpC,IAAI,uBAAuB,GAAQ,QAAQ;wBAC3C,IAAI,SAAS,GAAG,EAAE;wBAClB,IAAI,uBAAuB,CAAC,MAAM,GAAG,CAAC,EAAE;oDAC7B,CAAC;wDACC,CAAC;oCACR,SAAS,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;oCACjE,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC;wCACjB,IAAI,EAAE,cAAc;wCACpB,QAAQ,EAAE,SAAS;qCACpB,CAAC,CAAC,IAAI,CAAC,UAAO,EAAgB;;;wDAC7B,qBAAM,EAAE,CAAC,UAAU,CAAC,+DAA+D,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;yDAC1O,IAAI,CAAC,aAAG;wDACP,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC;oDAChC,CAAC,CAAC,CAAC,KAAK,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAd,CAAc,CAAC;;oDAH/B,SAG+B,CAAC;oDAChC,qBAAM,EAAE,CAAC,UAAU,CAAC,wVAAwV,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,MAAM,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;6DACn8C,IAAI,CAAC,aAAG;4DACP,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC;wDAChC,CAAC,CAAC,CAAC,KAAK,CAAC,WAAC,IAAM,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC;wDACnC,sNAAsN;sDADnL;;oDAHnC,SAGmC;;;;yCAEpC,CAAC,CAAC,KAAK,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAd,CAAc,CAAC,CAAC;gCAChC,CAAC;gCAhBD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,uBAAuB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE;4CAA9D,CAAC;iCAgBT;4BACH,CAAC;4BAlBD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,uBAAuB,CAAC,MAAM,EAAE,CAAC,EAAE;wCAA9C,CAAC;6BAkBT;4BAED,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,SAAS,CAAC;4BACtC,IAAI,MAAM,SAAQ;4BAClB,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;4BAEpE,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,MAAM,CAAC;4BAC5C,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,eAAe,GAAG,GAAG,GAAG,MAAM;4BAC1D,OAAO,CAAC,GAAG,CAAC,yBAAyB,GAAG,KAAI,CAAC,eAAe,CAAC;yBAE9D;wBACD,KAAI,CAAC,YAAY,EAAE;oBACrB,CAAC,EAAE,eAAK;wBACN,KAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;wBACjC,IAAI,KAAK,CAAC,MAAM,IAAI,GAAG,EAAE;4BACvB,4CAA4C;4BAC5C,KAAI,CAAC,wBAAwB,EAAE,CAAC;yBACjC;oBACH,CAAC,CAAC;iBACH;qBAAM;oBACL,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;oBACjC,mCAAmC;iBACpC;;;;KACF;IAED,0CAAe,GAAf,UAAgB,OAAO,EAAE,KAAK;QAC5B,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/H,CAAC;IAED,yCAAc,GAAd,UAAe,OAAO,EAAE,KAAK;QAC3B,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAChI,CAAC;IAEK,yCAAc,GAApB;;;;;4BACkB,qBAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;4BAClD,OAAO,EAAE,gBAAgB;4BACzB,OAAO,EAAE,IAAI;yBACd,CAAC;;wBAHI,OAAO,GAAG,SAGd;wBACF,UAAU,CAAC;4BACT,OAAO,CAAC,OAAO,EAAE,CAAC;wBACpB,CAAC,EAAE,KAAK,CAAC,CAAC;wBACV,qBAAM,OAAO,CAAC,OAAO,EAAE;;wBAAvB,SAAuB,CAAC;wBACD,qBAAM,OAAO,CAAC,YAAY,EAAE;;wBAA7C,KAAiB,SAA4B,EAA3C,IAAI,YAAE,IAAI;wBAElB,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;;;;;KACnC;IAEK,mDAAwB,GAA9B;;;;;;4BACgB,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;4BAC9C,MAAM,EAAE,cAAc;4BACtB,SAAS,EAAE,EAAE;4BACb,OAAO,EAAE,CAAC;oCACR,IAAI,EAAE,IAAI;oCACV,OAAO,EAAE;wCACP,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oCACnC,CAAC;iCACF,CAAC;yBACH,CAAC;;wBATI,KAAK,GAAG,SASZ;wBACF,qBAAM,KAAK,CAAC,OAAO,EAAE;;wBAArB,SAAqB,CAAC;;;;;KACvB;IAEK,uCAAY,GAAlB;;;;;4BACgB,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;4BAC9C,MAAM,EAAE,EAAE;4BACV,SAAS,EAAE,EAAE;4BACb,OAAO,EAAE,kWAAkW;4BAC3W,OAAO,EAAE,CAAC,IAAI,CAAC;yBAChB,CAAC;;wBALI,KAAK,GAAG,SAKZ;wBACF,qBAAM,KAAK,CAAC,OAAO,EAAE;;wBAArB,SAAqB,CAAC;;;;;KACvB;IAED,mCAAQ,GAAR;QACE,OAAO,IAAI,CAAC;IACd,CAAC;IAEK,uCAAY,GAAlB;;;;gBACE,IAAI,CAAC,YAAY,GAAG,EAAE;gBACtB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;oBACjB,IAAI,EAAE,cAAc;oBACpB,QAAQ,EAAE,SAAS;iBACpB,CAAC,CAAC,IAAI,CAAC,UAAC,EAAgB;oBACvB,EAAE,CAAC,UAAU,CAAC,0CAA0C,EAAE,EAAE,CAAC;yBAC1D,IAAI,CAAC,aAAG;wBACP,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;wBAC9C,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBACjE,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;4BACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gCACxC,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;6BAC1C;yBACF;wBACD,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,KAAI,CAAC,YAAY,CAAC,CAAC;wBAC/C,IAAI,KAAI,CAAC,YAAY,CAAC,MAAM,IAAI,CAAC,EAAE;4BACjC,KAAI,CAAC,CAAC,GAAG,CAAC;4BACV,KAAI,CAAC,6BAA6B,CAAC,KAAI,CAAC,YAAY,CAAC,KAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;yBACnE;oBACH,CAAC,CAAC;yBACD,KAAK,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAd,CAAc,CAAC,CAAC;gBAChC,CAAC,CAAC,CAAC,KAAK,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAd,CAAc,CAAC,CAAC;;;;KAC/B;IAEK,wDAA6B,GAAnC,UAAoC,IAAY;;;;gBAC9C,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,EAAE;oBACrC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;wBACjB,IAAI,EAAE,cAAc;wBACpB,QAAQ,EAAE,SAAS;qBACpB,CAAC,CAAC,IAAI,CAAC,UAAC,EAAgB;wBACvB,KAAI,CAAC,mBAAmB,GAAG,EAAE;wBAC7B,EAAE,CAAC,UAAU,CAAC,sDAAsD,EAAE,CAAC,IAAI,CAAC,CAAC;6BAC1E,IAAI,CAAC,aAAG;4BACP,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;4BAC1C,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;4BAC7D,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gCACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oCACxC,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;iCACjD;6BACF;4BACD,OAAO,CAAC,GAAG,CAAC,8CAA8C,EAAE,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;4BACtG,KAAI,CAAC,gBAAgB,EAAE;wBACzB,CAAC,CAAC;6BACD,KAAK,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAd,CAAc,CAAC,CAAC;oBAChC,CAAC,CAAC,CAAC,KAAK,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAd,CAAc,CAAC,CAAC;iBAE/B;qBAAM;oBACL,IAAI,CAAC,YAAY,EAAE;iBACpB;;;;KAEF;IAED,2CAAgB,GAAhB;QACE,OAAO,CAAC,GAAG,CAAC,yDAAyD,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAChH,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACjD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACxD,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,SAAS,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,IAAI,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,SAAS,IAAI,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE;oBACtkB,wbAAwb;oBACxb,8DAA8D;oBAC9D,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;oBACpD,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;oBAC9B,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,CAAC,EAAE;wBACjC,MAAK;qBACN;iBACF;aACF;SACF;QACD,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,IAAI,CAAC,EAAE;YACtC,IAAI,CAAC,CAAC,GAAG,CAAC;YACV,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;YAChF,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,IAAI,CAAC,EAAE;gBACvC,IAAI,CAAC,UAAU,GAAG,CAAC;gBACnB,IAAI,CAAC,sBAAsB,EAAE;aAC9B;SACF;aAAM;YACL,IAAI,CAAC,CAAC,GAAG,CAAC;YACV,IAAI,CAAC,6BAA6B,EAAE;SACrC;IACH,CAAC;IAED,iDAAsB,GAAtB;QAAA,iBAaC;QAZC,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;aAC9W,IAAI,CAAC,gBAAM;YACV,OAAO,CAAC,GAAG,CAAC,+CAA+C,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACrF,IAAI,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE;gBACpD,KAAI,CAAC,UAAU,IAAG,CAAC;gBACnB,KAAI,CAAC,sBAAsB,EAAE;aAC9B;iBAAM;gBACL,YAAY,CAAC,UAAU,CAAC,oBAAoB,CAAC;aAC9C;QACH,CAAC,EAAE,eAAK;YACN,OAAO,CAAC,GAAG,CAAC,0BAA0B,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACjE,CAAC,CAAC;IACN,CAAC;IAEK,wDAA6B,GAAnC;;;;gBACE,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,EAAE;oBAC1C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;wBACjB,IAAI,EAAE,cAAc;wBACpB,QAAQ,EAAE,SAAS;qBACpB,CAAC,CAAC,IAAI,CAAC,UAAC,EAAgB;wBACvB,EAAE,CAAC,UAAU,CAAC,iCAAiC,EAAE,CAAC,KAAI,CAAC,iBAAiB,CAAC,KAAI,CAAC,CAAC,CAAC,CAAC,CAAC;6BAC/E,IAAI,CAAC,aAAG;4BACP,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;4BACrD,KAAI,CAAC,CAAC,EAAE;4BACR,KAAI,CAAC,6BAA6B,EAAE;wBACtC,CAAC,CAAC;6BACD,KAAK,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAd,CAAc,CAAC,CAAC;oBAChC,CAAC,CAAC,CAAC,KAAK,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAd,CAAc,CAAC,CAAC;iBAC/B;qBAAM;oBACL,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,EAAE;wBACrC,qCAAqC;wBACrC,8BAA8B;wBAC9B,sEAAsE;wBACtE,SAAS;wBACT,IAAI,CAAC,CAAC,EAAE;wBACR,IAAI,CAAC,iBAAiB,GAAG,EAAE;wBAC3B,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;wBACtE,IAAI;qBAEL;yBAAM;wBACL,IAAI,CAAC,YAAY,GAAG,EAAE;wBACtB,IAAI,CAAC,YAAY,EAAE;qBACpB;oBAED,gCAAgC;oBAChC,0BAA0B;oBAC1B,sBAAsB;iBACvB;;;;KAEF;IAED,sCAAW,GAAX;QAAA,iBA4CC;QA3CC,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,EAAE;YACrC,IAAI,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,IAAI,QAAQ,EAAE;gBACvD,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAO,MAAW;;;;gCAC3lB,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,MAAM,CAAC;gCACtC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,OAAO,CAAC;qCACxC,OAAM,CAAC,OAAO,IAAI,IAAI,GAAtB,wBAAsB;gCACxB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;oCACjB,IAAI,EAAE,cAAc;oCACpB,QAAQ,EAAE,SAAS;iCACpB,CAAC,CAAC,IAAI,CAAC,UAAC,EAAgB;oCACvB,EAAE,CAAC,UAAU,CAAC,8CAA8C,EAAE,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;yCAC/F,IAAI,CAAC,aAAG;wCACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oCACnB,CAAC,CAAC,CAAC,KAAK,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAd,CAAc,CAAC,CAAC;gCAClC,CAAC,CAAC,CAAC,KAAK,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAd,CAAc,CAAC,CAAC;gCAC9B,IAAI,CAAC,CAAC,EAAE;qCACJ,KAAI,CAAC,YAAY,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,GAAlC,wBAAkC;gCACpC,IAAI,CAAC,YAAY,GAAG,EAAE;gCACtB,mDAAmD;gCACnD,IAAI,CAAC,uBAAuB,GAAG,EAAE;gCACjC,IAAI,CAAC,6BAA6B,GAAG,EAAE;gCACvC,qBAAM,IAAI,CAAC,oBAAoB,EAAE;;gCAAjC,SAAiC;;;gCAEjC,IAAI,CAAC,WAAW,EAAE;;;;gCAGpB,IAAI,CAAC,CAAC,EAAE;qCACJ,KAAI,CAAC,YAAY,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,GAAlC,wBAAkC;gCACpC,IAAI,CAAC,YAAY,GAAG,EAAE;gCACtB,IAAI,CAAC,uBAAuB,GAAG,EAAE;gCACjC,IAAI,CAAC,6BAA6B,GAAG,EAAE;gCACvC,qBAAM,IAAI,CAAC,oBAAoB,EAAE;oCACjC,mDAAmD;kCADlB;;gCAAjC,SAAiC;;;gCAGjC,IAAI,CAAC,WAAW,EAAE;;;;;qBAGvB,CAAC,CAAC;aACJ;iBAAM;gBACL,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE;gBAChC,mCAAmC;aACpC;SACF;IACH,CAAC;IAEK,+CAAoB,GAA1B;;;;gBACE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;oBACjB,IAAI,EAAE,cAAc;oBACpB,QAAQ,EAAE,SAAS;iBACpB,CAAC,CAAC,IAAI,CAAC,UAAO,EAAgB;;;;;4BAC7B,6DAA6D;4BAC7D,0BAA0B;4BAC1B,IAAI;4BACJ,qBAAM,EAAE,CAAC,UAAU,CAAC,yDAAyD,EAAE,EAAE,CAAC;qCAC/E,IAAI,CAAC,UAAM,GAAG;;;;;;gDACb,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;gDAC9C,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qDAC7D,IAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAnB,wBAAmB;gDACrB,IAAI,CAAC,0BAA0B,GAAG,EAAE;gDACpC,IAAI,CAAC,6BAA6B,GAAG,EAAE;oEAC9B,CAAC;;;;gEACR,UAAU;gEACV,EAAE,CAAC,UAAU,CAAC,+DAA+D,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,cAAI;oEAC/G,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC;oEACpC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;wEACxB,IAAI,UAAU,GAAG,EAAE;wEACnB,IAAI,QAAQ,GAAG,GAAG;wEAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4EACzC,IAAI,cAAc,SAAK;4EACvB,cAAc,GAAG;gFACf,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG;gFAC/B,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU;gFAC1C,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;gFACrC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG;gFAC5B,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS;gFACzC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW;gFAC5C,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS;gFACzC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO;gFACtC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK;gFAChC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK;gFAChC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO;gFACrC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ;gFACvC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM;6EAQnC;4EACD,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC;4EAC/B,QAAQ,IAAI,UAAU,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,EAAC,yBAAyB;yEAC9F;wEACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,UAAU,CAAC,MAAM,GAAG,aAAa,GAAG,QAAQ,CAAC;wEACxF,IAAI,OAAO,SAAK;wEAChB,OAAO,GAAG;4EACR,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;4EAC7B,UAAU,EAAE,QAAQ;4EACpB,cAAc,EAAE,UAAU;yEAC3B;wEACD,KAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,OAAO,CAAC;qEAC9C;oEACD,OAAO,CAAC,GAAG,CAAC,8BAA8B,GAAG,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,0BAA0B,CAAC,CAAC;oEAC7F,KAAI,CAAC,oBAAoB,GAAG,KAAI,CAAC,0BAA0B;oEAC3D,IAAI,KAAI,CAAC,oBAAoB,CAAC,MAAM,GAAG,CAAC,EAAE;wEACxC,KAAI,CAAC,SAAS,GAAG,KAAK;qEACvB;yEAAM;wEACL,KAAI,CAAC,SAAS,GAAG,IAAI;qEACtB;gEACH,CAAC,CAAC,CAAC,KAAK,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,CAAC,CAAC,EAArC,CAAqC,CAAC,CAAC;gEAErD,4EAA4E;gEAC5E,qBAAM,EAAE,CAAC,UAAU,CAAC,mGAAmG,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,cAAI;wEACzJ,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;4EACxB,IAAI,UAAU,GAAG,EAAE;4EACnB,IAAI,QAAQ,GAAG,GAAG;4EAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gFACzC,IAAI,cAAc,SAAK;gFACvB,cAAc,GAAG;oFACf,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG;oFAC/B,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU;oFAC1C,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;oFACrC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG;oFAC5B,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS;oFACzC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW;oFAC5C,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS;oFACzC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO;oFACtC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK;oFAChC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK;oFAChC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO;oFACrC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ;oFACvC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM;iFAQnC;gFACD,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC;gFAC/B,QAAQ,IAAI,UAAU,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,EAAC,yBAAyB;6EAC9F;4EACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,UAAU,CAAC,MAAM,GAAG,aAAa,GAAG,QAAQ,CAAC;4EACxF,IAAI,OAAO,SAAK;4EAChB,OAAO,GAAG;gFACR,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;gFAC7B,UAAU,EAAE,QAAQ;gFACpB,cAAc,EAAE,UAAU;6EAC3B;4EACD,KAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,OAAO,CAAC;yEACjD;wEACD,OAAO,CAAC,GAAG,CAAC,iCAAiC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,6BAA6B,CAAC,CAAC;wEACnG,KAAI,CAAC,uBAAuB,GAAG,KAAI,CAAC,6BAA6B;wEACjE,IAAI,KAAI,CAAC,uBAAuB,CAAC,MAAM,GAAG,CAAC,EAAE;4EAC3C,KAAI,CAAC,WAAW,GAAG,KAAK;yEACzB;6EAAM;4EACL,KAAI,CAAC,WAAW,GAAG,IAAI;yEACxB;oEAEH,CAAC,CAAC,CAAC,KAAK,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,CAAC,CAAC,EAArC,CAAqC,CAAC;;gEAjDpD,4EAA4E;gEAC5E,SAgDoD,CAAC;;;;;gDArG9C,CAAC,GAAG,CAAC;;;qDAAE,EAAC,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM;8EAA1B,CAAC;;;;;gDAA2B,CAAC,EAAE;;;;;qCAwG3C,CAAC,CAAC,KAAK,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAd,CAAc,CAAC;;gCAlH/B,6DAA6D;gCAC7D,0BAA0B;gCAC1B,IAAI;gCACJ,SA+G+B,CAAC;;;;qBACjC,CAAC,CAAC,KAAK,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAd,CAAc,CAAC,CAAC;;;;KAC/B;IA7hBU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,8GAAuC;;SAExC,CAAC;yCAyBkB,sDAAM;YACN,4DAAa;YACL,8DAAe;YAClB,gGAAkB;YACb,gEAAiB;YACnB,0GAAsB;YAC9B,+DAAM;YACJ,uDAAQ;OA/BjB,gBAAgB,CA8hB5B;IAAD,uBAAC;CAAA;AA9hB4B","file":"tasklogslist-tasklogslist-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TasklogslistPage } from './tasklogslist.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TasklogslistPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [TasklogslistPage]\n})\nexport class TasklogslistPageModule {}\n","module.exports = \"<!--<ion-header class=\\\"app-page-home\\\" color=\\\"medium\\\">-->\\n<ion-toolbar color=\\\"medium\\\">\\n    <ion-item lines=\\\"none\\\" color=\\\"medium\\\">\\n  <ion-buttons>\\n    <ion-back-button text=\\\"\\\" defaultHref=\\\"home\\\" class=\\\"menubutton\\\">\\n    </ion-back-button>\\n    <ion-menu-button class=\\\"menubuttonspace\\\"></ion-menu-button>\\n  </ion-buttons>\\n  <ion-title align=\\\"center\\\" class=\\\"titleall\\\">Task Logs</ion-title>\\n  <ion-icon style=\\\"width: 30px;height: 30px;color: black\\\" slot=\\\"end\\\" name=\\\"help-circle-outline\\\"\\n    (click)=\\\"presentAlert()\\\"></ion-icon>\\n    </ion-item>\\n</ion-toolbar>\\n<!--</ion-header>-->\\n\\n\\n<ion-content align=\\\"center\\\">\\n\\n  <button align=\\\"center\\\" style=\\\"margin-top: 10px\\\" class=\\\"receipts-buttonclass\\\" (click)=\\\"newtasklogs()\\\" padding=\\\"10px\\\"\\n    type=\\\"submit\\\">ADD TASK LOGS</button>\\n\\n  <br>\\n\\n  <ion-segment style=\\\"margin-top: 5px\\\" (ionChange)=\\\"tabChanged($event)\\\" scrollable>\\n    <ion-segment-button value=\\\"Approved\\\" checked layout=\\\"icon-end\\\" class=\\\"segmentwidth\\\">\\n      <ion-label style=\\\"text-transform: capitalize;font-size: 14px\\\">Approved</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"Request\\\" class=\\\"segmentwidth\\\">\\n      <ion-label style=\\\"text-transform: capitalize;font-size: 14px\\\">Audit Req/Declined</ion-label>\\n    </ion-segment-button>\\n  </ion-segment>\\n\\n  <div *ngIf=\\\"isSelected=='Approved'\\\" style=\\\"margin-top: 15px\\\">\\n    <ion-label *ngIf=\\\"AuditData\\\" style=\\\"font-size: 16px;font-weight: bold\\\">No Approved Task Log\\n    </ion-label>\\n    <ion-list *ngFor=\\\"let item of ApprovedTaskLogsData; let j = index\\\">\\n      <ion-list-header class=\\\"headerlist\\\" padding-end=\\\"5px\\\">\\n        <ion-label style=\\\"font-size: 15px;font-weight: bold\\\">{{item.date}}</ion-label>\\n        <ion-label style=\\\"text-transform: capitalize;font-size: 13px;font-weight: bold\\\">Total\\n          Hrs:{{item.totalHrs | number:'1.2-2'}}\\n        </ion-label>\\n      </ion-list-header>\\n      <ion-item (click)=\\\"approvedTaskLog(j, i)\\\" *ngFor=\\\"let eventName of item.taskLogArray; let i = index\\\">\\n        <ion-label class=\\\"h4-text\\\">\\n          {{eventName.labor_code}}\\n        </ion-label>\\n        <ion-icon (click)=\\\"approvedTaskLog(j, i)\\\" slot=\\\"end\\\" name=\\\"arrow-dropright\\\"></ion-icon>\\n      </ion-item>\\n    </ion-list>\\n  </div>\\n\\n  <div *ngIf=\\\"isSelected=='Request'\\\" style=\\\"margin-top: 15px\\\">\\n    <ion-label *ngIf=\\\"noAuditData\\\" style=\\\"font-size: 16px;font-weight: bold\\\">No Audit Required or Declined Task Log\\n    </ion-label>\\n\\n    <ion-list *ngFor=\\\"let item of nonApprovedTaskLogsData let j = index\\\">\\n      <ion-list-header class=\\\"headerlist\\\" padding-end=\\\"5px\\\">\\n        <ion-label style=\\\"font-size: 15px;font-weight: bold\\\">{{item.date}}</ion-label>\\n        <ion-label style=\\\"text-transform: capitalize;font-size: 13px;font-weight: bold\\\">Total\\n          Hrs:{{item.totalHrs | number:'1.2-2'}}\\n        </ion-label>\\n      </ion-list-header>\\n      <ion-item (click)=\\\"declinetasklog(j,i)\\\" *ngFor=\\\"let eventName of item.taskLogArray ;let i = index\\\">\\n        <ion-label class=\\\"h4-text\\\">\\n          {{eventName.labor_code}}\\n          <span *ngIf=\\\"eventName.status=='Audit Completed'\\\" style=\\\"color: red;float:right\\\">Declined</span>\\n        </ion-label>\\n        <ion-icon (click)=\\\"declinetasklog(j,i)\\\" slot=\\\"end\\\" name=\\\"arrow-dropright\\\"></ion-icon>\\n      </ion-item>\\n    </ion-list>\\n  </div>\\n</ion-content>\"","module.exports = \".menubutton {\\n  color: black !important;\\n  alignment: left; }\\n\\n.receipts-buttonclass {\\n  background-color: #E3A214;\\n  cursor: pointer;\\n  border: none;\\n  width: 60%; }\\n\\n.sc-ion-segment-md-h {\\n  --background: transparent;\\n  --background-hover: rgba(var(--ion-color-primary-rgb,56,128,255),0.1);\\n  --background-activated: rgba(var(--ion-color-primary-rgb,56,128,255),0.16);\\n  --background-checked: #3880ff00;\\n  --color-checked: var(--ion-color-primary-contrast,#fff);\\n  --color-disabled: rgba(var(--ion-color-primary-rgb,56,128,255),0.3);\\n  --color-checked-disabled: rgba(var(--ion-color-primary-contrast-rgb,255,255,255),0.3);\\n  --border-color: transparent;\\n  --indicator-color: black;\\n  background-color: gray;\\n  height: 50px;\\n  --color: #000000; }\\n\\n.border {\\n  border: 0.5px solid black;\\n  border-radius: 1px;\\n  min-height: 40px !important;\\n  width: 100% !important;\\n  margin-top: 5px;\\n  alignment: center; }\\n\\n.h4-text {\\n  font-size: 15px; }\\n\\n.segmentwidth {\\n  width: 50%; }\\n\\n.list-md {\\n  padding-top: 0px !important;\\n  padding-bottom: 0px !important; }\\n\\n.menubutton {\\n  color: black !important; }\\n\\n.titleclass {\\n  color: black !important; }\\n\\n.Helpclass {\\n  color: black !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbmNhZG1pbi9Eb2N1bWVudHMvZ2l0bGFiL3JsaS1jb21tYW5kZXItYW5kcm9pZC1pb25pYzQvc3JjL2FwcC90YXNrbG9nc2xpc3QvdGFza2xvZ3NsaXN0LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNFLHVCQUF1QjtFQUN2QixlQUFlLEVBQUE7O0FBRWpCO0VBQ0UseUJBQXlCO0VBQ3pCLGVBQWM7RUFDZCxZQUFZO0VBRVosVUFBVSxFQUFBOztBQVNaO0VBRUUseUJBQWE7RUFDYixxRUFBbUI7RUFDbkIsMEVBQXVCO0VBQ3ZCLCtCQUFxQjtFQUVyQix1REFBZ0I7RUFDaEIsbUVBQWlCO0VBQ2pCLHFGQUF5QjtFQUN6QiwyQkFBZTtFQUNmLHdCQUFrQjtFQUNsQixzQkFBc0I7RUFDdEIsWUFBWTtFQUNaLGdCQUFRLEVBQUE7O0FBR1Y7RUFDRSx5QkFBeUI7RUFDekIsa0JBQWtCO0VBQ2xCLDJCQUEyQjtFQUczQixzQkFBcUI7RUFDckIsZUFBZTtFQUVmLGlCQUFpQixFQUFBOztBQUluQjtFQUNFLGVBQWUsRUFBQTs7QUFHakI7RUFDRSxVQUFVLEVBQUE7O0FBR1o7RUFDRSwyQkFBMkI7RUFDM0IsOEJBQThCLEVBQUE7O0FBR2hDO0VBQ0UsdUJBQXVCLEVBQUE7O0FBRXZCO0VBQ0EsdUJBQXVCLEVBQUE7O0FBRXZCO0VBQ0EsdUJBQXVCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC90YXNrbG9nc2xpc3QvdGFza2xvZ3NsaXN0LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLm1lbnVidXR0b257XG4gIGNvbG9yOiBibGFjayAhaW1wb3J0YW50O1xuICBhbGlnbm1lbnQ6IGxlZnQ7XG59XG4ucmVjZWlwdHMtYnV0dG9uY2xhc3N7XG4gIGJhY2tncm91bmQtY29sb3I6ICNFM0EyMTQ7XG4gIGN1cnNvcjpwb2ludGVyO1xuICBib3JkZXI6IG5vbmU7XG5cbiAgd2lkdGg6IDYwJTtcbn1cbi8vLnRpdGxlYWxse1xuLy8gIGNvbG9yOiBibGFjaztcbi8vICBtYXJnaW4tdG9wOiA3cHg7XG4vLyAgLy9mb250LXNpemU6IDE1cHg7XG4vLyAgLy9hbGlnbi1jb250ZW50OiBzdGFydDtcbi8vfVxuXG4uc2MtaW9uLXNlZ21lbnQtbWQtaCB7XG4gIC8vLnNjLWlvbi1zZWdtZW50LWlvcy1oIHtcbiAgLS1iYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgLS1iYWNrZ3JvdW5kLWhvdmVyOiByZ2JhKHZhcigtLWlvbi1jb2xvci1wcmltYXJ5LXJnYiw1NiwxMjgsMjU1KSwwLjEpO1xuICAtLWJhY2tncm91bmQtYWN0aXZhdGVkOiByZ2JhKHZhcigtLWlvbi1jb2xvci1wcmltYXJ5LXJnYiw1NiwxMjgsMjU1KSwwLjE2KTtcbiAgLS1iYWNrZ3JvdW5kLWNoZWNrZWQ6ICMzODgwZmYwMDtcbiAgLy8gLS1jb2xvcjogdmFyKC0taW9uLWNvbG9yLXByaW1hcnksIzAwMDAwMCkgIWltcG9ydGFudDtcbiAgLS1jb2xvci1jaGVja2VkOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeS1jb250cmFzdCwjZmZmKTtcbiAgLS1jb2xvci1kaXNhYmxlZDogcmdiYSh2YXIoLS1pb24tY29sb3ItcHJpbWFyeS1yZ2IsNTYsMTI4LDI1NSksMC4zKTtcbiAgLS1jb2xvci1jaGVja2VkLWRpc2FibGVkOiByZ2JhKHZhcigtLWlvbi1jb2xvci1wcmltYXJ5LWNvbnRyYXN0LXJnYiwyNTUsMjU1LDI1NSksMC4zKTtcbiAgLS1ib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAtLWluZGljYXRvci1jb2xvcjogYmxhY2s7XG4gIGJhY2tncm91bmQtY29sb3I6IGdyYXk7XG4gIGhlaWdodDogNTBweDtcbiAgLS1jb2xvcjogIzAwMDAwMDtcbn1cblxuLmJvcmRlcntcbiAgYm9yZGVyOiAwLjVweCBzb2xpZCBibGFjaztcbiAgYm9yZGVyLXJhZGl1czogMXB4O1xuICBtaW4taGVpZ2h0OiA0MHB4ICFpbXBvcnRhbnQ7XG4gIC8vbWFyZ2luLXJpZ2h0OiA1cHghaW1wb3J0YW50O1xuICAvL21hcmdpbi1sZWZ0OiA1cHghaW1wb3J0YW50O1xuICB3aWR0aDogMTAwJSFpbXBvcnRhbnQ7XG4gIG1hcmdpbi10b3A6IDVweDtcbiAgLy9tYXJnaW4tYm90dG9tOiA1cHg7XG4gIGFsaWdubWVudDogY2VudGVyO1xufVxuXG5cbi5oNC10ZXh0e1xuICBmb250LXNpemU6IDE1cHg7XG5cbn1cbi5zZWdtZW50d2lkdGh7XG4gIHdpZHRoOiA1MCU7XG59XG5cbi5saXN0LW1kIHtcbiAgcGFkZGluZy10b3A6IDBweCAhaW1wb3J0YW50O1xuICBwYWRkaW5nLWJvdHRvbTogMHB4ICFpbXBvcnRhbnQ7XG59XG5cbi5tZW51YnV0dG9ue1xuICBjb2xvcjogYmxhY2sgIWltcG9ydGFudDtcbiAgfVxuICAudGl0bGVjbGFzc3tcbiAgY29sb3I6IGJsYWNrICFpbXBvcnRhbnQ7XG4gIH1cbiAgLkhlbHBjbGFzc3tcbiAgY29sb3I6IGJsYWNrICFpbXBvcnRhbnQ7XG4gIH0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AlertController, NavController, LoadingController, Platform } from '@ionic/angular';\nimport { DataSevicesService } from '../providers/Data-Services/data-sevices.service';\nimport { NetworkProviderService } from '../providers/NetworkProvider/network-provider.service';\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite/ngx';\nimport { delay } from 'q';\n\n@Component({\n  selector: 'app-tasklogslist',\n  templateUrl: './tasklogslist.page.html',\n  styleUrls: ['./tasklogslist.page.scss'],\n})\nexport class TasklogslistPage implements OnInit {\n\n  isSelected: any = 'Approved';\n  userId: any\n  eventId: any\n  resultData: any\n  ApprovedTaskLogsData: any\n  nonApprovedTaskLogsData: any\n  noAuditData = true\n  AuditData = true\n  taskLogsInDB = []\n  conflictTasklogData = []\n  conflictTasklogID = []\n  i = 0\n  j = 0\n  k = 0\n  approvedTaskLogsDataFromDB = []\n  nonApprovedTaskLogsDataFromDB = []\n  serverIdsString: string = ''\n\n  taskLogGeoLocation = []\n  geoCounter = 0\n\n  constructor(\n    private router: Router,\n    public navCtrl: NavController,\n    public alertController: AlertController,\n    public dataServices: DataSevicesService,\n    public loadingController: LoadingController,\n    public networkProvider: NetworkProviderService,\n    private sqlite: SQLite,\n    private platform: Platform,\n  ) {\n    this.isSelected = 'Approved'\n    this.getApprovedTaskLogs()\n\n    // this.getApprovedTaskLogs()\n    //   this.getNonApprovedTaskLogs().then(_ => {\n    //     this.displayTaskLogFromDB().then(_ => {\n    //       this.syncTaskLogs().then(_ => {\n    //         this.loadingController.dismiss()\n    //       })\n    //     })\n    //   })\n    // })\n  }\n\n  ngOnInit() {\n  }\n\n  newtasklogs() {\n    this.router.navigate(['/addtasklogs']);\n  }\n\n  async tabChanged(data: any) {\n\n    if (data.detail.value == 'Approved') {\n      this.isSelected = 'Approved'\n      this.presentLoading().then(_ => {\n        this.displayTaskLogFromDB().then(async _ => {\n          // await delay(5000);\n          this.loadingController.dismiss()\n        })\n      })\n    } else {\n      this.isSelected = 'Request';\n      this.nonApprovedTaskLogsData = []\n      this.nonApprovedTaskLogsDataFromDB = []\n      this.presentLoading().then(async _ => {\n        // await delay(5000);\n        this.nonApprovedTaskLogsData = []\n        this.nonApprovedTaskLogsDataFromDB = []\n        this.displayTaskLogFromDB().then(async _ => {\n          this.loadingController.dismiss()\n        })\n      })\n    }\n  }\n\n  async getApprovedTaskLogs() {\n    // this.presentLoading()\n    this.userId = localStorage.getItem('UserID');\n    this.eventId = localStorage.getItem('EventId');\n    if (this.networkProvider.getNetworkStatus() == 'Online') {\n      this.presentLoading()\n      this.dataServices.getApprovedTaskLogsApi(this.userId, this.eventId).then((result) => {\n        let approvedTaskLogsData: any = result\n        if (approvedTaskLogsData.success) {\n          let serverIds = []\n          if (approvedTaskLogsData.dateArray.length > 0) {\n            for (let i = 0; i < approvedTaskLogsData.dateArray.length; i++) {\n              for (let j = 0; j < approvedTaskLogsData.dateArray[i].taskLogArray.length; j++) {\n                serverIds.push(approvedTaskLogsData.dateArray[i].taskLogArray[j].log_id)\n                this.sqlite.create({\n                  name: 'Commander.db',\n                  location: 'default'\n                }).then(async (db: SQLiteObject) => {\n                  await db.executeSql('UPDATE tasklogs SET auditStatus=?, status=? WHERE server_id=?', [approvedTaskLogsData.dateArray[i].taskLogArray[j].status, approvedTaskLogsData.dateArray[i].taskLogArray[j].status, approvedTaskLogsData.dateArray[i].taskLogArray[j].log_id])\n                    .then(res => {\n                      console.log('Update: ' + res);\n                    }).catch(e => console.log(e));\n                  await db.executeSql('INSERT INTO tasklogs (userID, eventTitle, eventID, date, LOG, ticket, laborCode, laborCodeID, startTime, endTime, hours, state, stateName, yardID, yardName, comment, transactionId, auditStatus, auditDate, status , reason, server_id) Select ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,? WHERE NOT EXISTS(SELECT * FROM tasklogs WHERE server_id=?)', [localStorage.getItem('UserID'), approvedTaskLogsData.dateArray[i].taskLogArray[j].event_name, '', approvedTaskLogsData.dateArray[i].taskLogArray[j].taskLogDate, approvedTaskLogsData.dateArray[i].taskLogArray[j].log, 'None', approvedTaskLogsData.dateArray[i].taskLogArray[j].labor_code, approvedTaskLogsData.dateArray[i].taskLogArray[j].laborCodeID, approvedTaskLogsData.dateArray[i].taskLogArray[j].start_time, approvedTaskLogsData.dateArray[i].taskLogArray[j].stop_time, approvedTaskLogsData.dateArray[i].taskLogArray[j].hours, approvedTaskLogsData.dateArray[i].taskLogArray[j].state, approvedTaskLogsData.dateArray[i].taskLogArray[j].state, '', approvedTaskLogsData.dateArray[i].taskLogArray[j].yard_name, approvedTaskLogsData.dateArray[i].taskLogArray[j].comments, '', approvedTaskLogsData.dateArray[i].taskLogArray[j].status, '', approvedTaskLogsData.dateArray[i].taskLogArray[j].status, '', approvedTaskLogsData.dateArray[i].taskLogArray[j].log_id, approvedTaskLogsData.dateArray[i].taskLogArray[j].log_id])\n                    .then(res => {\n                      console.log('Insert: ' + res);\n                    }).catch(e => { console.log(e) })\n                }).catch(e => console.log(e));\n              }\n            }\n\n            console.log('serverIds: ' + serverIds)\n            let string: string\n            string = JSON.stringify(serverIds).replace('[', '').replace(']', '')\n            console.log('String approved: ' + string)\n            this.serverIdsString = this.serverIdsString + ',' + string\n            console.log('String in Approved: ' + this.serverIdsString)\n          }\n        }\n        this.getNonApprovedTaskLogs()\n      }, error => {\n        if (error.url == null) {\n          this.loadingController.dismiss();\n          // alert('No internet connection.')\n        }\n        console.log('error: ' + error)\n        this.loadingController.dismiss();\n        if (error.status == 401) {\n          // this.dataServices.DeleteSqliteDB_Tables()\n          this.displayUnauthoriesdAlert();\n        }\n      })\n    } else {\n      this.loadingController.dismiss();\n      // alert('No internet connection.')\n    }\n  }\n\n  async getNonApprovedTaskLogs() {\n    if (this.networkProvider.getNetworkStatus() == 'Online') {\n      this.dataServices.getNonApprovedTaskLogs().then(response => {\n        console.log('response: ' + response)\n        let nonApprovedTaskLogsData: any = response\n        let serverIds = []\n        if (nonApprovedTaskLogsData.length > 0) {\n          for (let i = 0; i < nonApprovedTaskLogsData.length; i++) {\n            for (let j = 0; j < nonApprovedTaskLogsData[i].taskLogArray.length; j++) {\n              serverIds.push(nonApprovedTaskLogsData[i].taskLogArray[j].log_id)\n              this.sqlite.create({\n                name: 'Commander.db',\n                location: 'default'\n              }).then(async (db: SQLiteObject) => {\n                await db.executeSql('UPDATE tasklogs SET auditStatus=?, status=? WHERE server_id=?', [nonApprovedTaskLogsData[i].taskLogArray[j].audit, nonApprovedTaskLogsData[i].taskLogArray[j].audit, nonApprovedTaskLogsData[i].taskLogArray[j].log_id])\n                  .then(res => {\n                    console.log('Update: ' + res);\n                  }).catch(e => console.log(e));\n                await db.executeSql('INSERT INTO tasklogs (userID, eventTitle, eventID, date, LOG, ticket, laborCode, laborCodeID, startTime, endTime, hours, state, stateName, yardID, yardName, comment, transactionId, auditStatus, auditDate, status , reason, server_id) Select ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,? WHERE NOT EXISTS(SELECT * FROM tasklogs WHERE server_id=?)', [nonApprovedTaskLogsData[i].taskLogArray[j].user_id, nonApprovedTaskLogsData[i].taskLogArray[j].event_name, nonApprovedTaskLogsData[i].taskLogArray[j].event_id, nonApprovedTaskLogsData[i].taskLogArray[j].taskLogDate, nonApprovedTaskLogsData[i].taskLogArray[j].log, 'None', nonApprovedTaskLogsData[i].taskLogArray[j].labor_code, nonApprovedTaskLogsData[i].taskLogArray[j].laborCodeID, nonApprovedTaskLogsData[i].taskLogArray[j].start_time, nonApprovedTaskLogsData[i].taskLogArray[j].stop_time, nonApprovedTaskLogsData[i].taskLogArray[j].hours, nonApprovedTaskLogsData[i].taskLogArray[j].state, nonApprovedTaskLogsData[i].taskLogArray[j].stateName, nonApprovedTaskLogsData[i].taskLogArray[j].yard_id, nonApprovedTaskLogsData[i].taskLogArray[j].yard_name, nonApprovedTaskLogsData[i].taskLogArray[j].comments, '', nonApprovedTaskLogsData[i].taskLogArray[j].audit, nonApprovedTaskLogsData[i].taskLogArray[j].date, nonApprovedTaskLogsData[i].taskLogArray[j].audit, nonApprovedTaskLogsData[i].taskLogArray[j].reason, nonApprovedTaskLogsData[i].taskLogArray[j].log_id, nonApprovedTaskLogsData[i].taskLogArray[j].log_id])\n                  .then(res => {\n                    console.log('Insert: ' + res);\n                  }).catch(e => { console.log(e) })\n                // 'userID, eventTitle, eventID, date, LOG, ticket, laborCode, laborCodeID, startTime, endTime, hours, state, stateName, yardID, yardName, comment, transactionId, auditStatus, auditDate, status , reason, server_id'\n              }).catch(e => console.log(e));\n            }\n          }\n\n          console.log('serverIds: ' + serverIds)\n          let string: string\n          string = JSON.stringify(serverIds).replace('[', '').replace(']', '')\n\n          console.log('String nonApproved: ' + string)\n          this.serverIdsString = this.serverIdsString + ',' + string\n          console.log('String in nonApproved: ' + this.serverIdsString)\n\n        }\n        this.syncTaskLogs()\n      }, error => {\n        this.loadingController.dismiss();\n        if (error.status == 401) {\n          // this.dataServices.DeleteSqliteDB_Tables()\n          this.displayUnauthoriesdAlert();\n        }\n      })\n    } else {\n      this.loadingController.dismiss();\n      // alert('No internet connection.')\n    }\n  }\n\n  approvedTaskLog(section, index) {\n    console.log('Section', section)\n    console.log('Index', index)\n    this.router.navigate(['approved-tasklog', { item: JSON.stringify(this.ApprovedTaskLogsData[section].taskLogArray[index]) }]);\n  }\n\n  declinetasklog(section, index) {\n    console.log('Section', section)\n    console.log('Index', index)\n    this.router.navigate(['declinetasklog', { item: JSON.stringify(this.nonApprovedTaskLogsData[section].taskLogArray[index]) }]);\n  }\n\n  async presentLoading() {\n    const loading = await this.loadingController.create({\n      message: 'Please wait...',\n      spinner: null\n    });\n    setTimeout(() => {\n      loading.dismiss();\n    }, 20000);\n    await loading.present();\n    const { role, data } = await loading.onDidDismiss();\n\n    console.log('Loading dismissed!');\n  }\n\n  async displayUnauthoriesdAlert() {\n    const alert = await this.alertController.create({\n      header: 'Unauthorized',\n      subHeader: '',\n      buttons: [{\n        text: 'ok',\n        handler: () => {\n          this.router.navigate(['/login']);\n        }\n      }]\n    });\n    await alert.present();\n  }\n\n  async presentAlert() {\n    const alert = await this.alertController.create({\n      header: '',\n      subHeader: '',\n      message: 'Only task logs for your active event are shown.  Note that each client during a deployment is considered to be a separate event. To see other events, go to your portal using this app.  Task logs must be approved by the Finance/Admin Section for you to be paid. Review declined task logs and resubmit as you will not be paid for declined task log hours.',\n      buttons: ['OK']\n    });\n    await alert.present();\n  }\n\n  readonly() {\n    return true;\n  }\n\n  async syncTaskLogs() {\n    this.taskLogsInDB = []\n    this.sqlite.create({\n      name: 'Commander.db',\n      location: 'default'\n    }).then((db: SQLiteObject) => {\n      db.executeSql('SELECT * FROM tasklogs WHERE server_id=0', [])\n        .then(res => {\n          console.log(\"Task log:-\", JSON.stringify(res))\n          console.log(\"Task log length:-\", JSON.stringify(res.rows.length))\n          if (res.rows.length > 0) {\n            for (let i = 0; i < res.rows.length; i++) {\n              this.taskLogsInDB.push(res.rows.item(i));\n            }\n          }\n          console.log(\"DATA ARRAY:-\", this.taskLogsInDB);\n          if (this.taskLogsInDB.length != 0) {\n            this.k = 0\n            this.detectConflictInPreviousTasks(this.taskLogsInDB[this.k].date)\n          }\n        })\n        .catch(e => console.log(e));\n    }).catch(e => console.log(e));\n  }\n\n  async detectConflictInPreviousTasks(Date: string) {\n    if (this.taskLogsInDB.length > this.k) {\n      this.sqlite.create({\n        name: 'Commander.db',\n        location: 'default'\n      }).then((db: SQLiteObject) => {\n        this.conflictTasklogData = []\n        db.executeSql('SELECT * FROM tasklogs WHERE date=? AND server_id!=0', [Date])\n          .then(res => {\n            console.log(\"DATA:-\", JSON.stringify(res))\n            console.log(\"Actual DATA:-\", JSON.stringify(res.rows.length))\n            if (res.rows.length > 0) {\n              for (let i = 0; i < res.rows.length; i++) {\n                this.conflictTasklogData.push(res.rows.item(i));\n              }\n            }\n            console.log(\"Detected conflict TasLog DATA ARRAY INSIDE:-\", JSON.stringify(this.conflictTasklogData));\n            this.validateConflict()\n          })\n          .catch(e => console.log(e));\n      }).catch(e => console.log(e));\n\n    } else {\n      this.syncTaskLogs()\n    }\n\n  }\n\n  validateConflict() {\n    console.log(\"Detected conflict TasLog DATA ARRAY VALIDATE CONFLICT:-\", JSON.stringify(this.conflictTasklogData))\n    for (let j = 0; j < this.taskLogsInDB.length; j++) {\n      for (let i = 0; i < this.conflictTasklogData.length; i++) {\n        if (this.taskLogsInDB[j].startTime > this.conflictTasklogData[i].startTime && this.taskLogsInDB[j].startTime < this.conflictTasklogData[i].endTime || this.taskLogsInDB[j].endTime < this.conflictTasklogData[i].endTime && this.taskLogsInDB[j].endTime > this.conflictTasklogData[i].startTime || (this.taskLogsInDB[j].startTime <= this.conflictTasklogData[i].startTime && this.conflictTasklogData[i].startTime < this.taskLogsInDB[j].endTime) && (this.taskLogsInDB[j].startTime < this.conflictTasklogData[i].endTime && this.conflictTasklogData[i].endTime <= this.taskLogsInDB[j].endTime)) {\n          // if (this.taskLogsInDB[j].startTime == this.conflictTasklogData[i].startTime || this.taskLogsInDB[j].startTime > this.conflictTasklogData[i].startTime && this.taskLogsInDB[j].startTime < this.conflictTasklogData[i].endTime || this.taskLogsInDB[j].endTime < this.conflictTasklogData[i].endTime && this.taskLogsInDB[j].endTime > this.conflictTasklogData[i].startTime || this.taskLogsInDB[j].endTime == this.conflictTasklogData[i].endTime) {\n          // this.deleteConflictOfflineTaskLogs(this.taskLogsInDB[j].ID)\n          this.conflictTasklogID.push(this.taskLogsInDB[j].ID)\n          this.taskLogsInDB.splice(j, 1)\n          if (this.taskLogsInDB.length == 0) {\n            break\n          }\n        }\n      }\n    }\n    if (this.conflictTasklogID.length == 0) {\n      this.i = 0\n      this.postTaskLog()\n      this.taskLogGeoLocation = JSON.parse(localStorage.getItem('taskLogGeoLocation'))\n      if (this.taskLogGeoLocation.length != 0) {\n        this.geoCounter = 0\n        this.postTaskLogGeoLocation()\n      }\n    } else {\n      this.j = 0\n      this.deleteConflictOfflineTaskLogs()\n    }\n  }\n\n  postTaskLogGeoLocation() {\n    this.dataServices.postGeoLocation(this.taskLogGeoLocation[this.geoCounter].split(',')[0], this.taskLogGeoLocation[this.geoCounter].split(',')[1], this.taskLogGeoLocation[this.geoCounter].split(',')[2], this.taskLogGeoLocation[this.geoCounter].split(',')[3], this.taskLogGeoLocation[this.geoCounter].split(',')[4], this.taskLogGeoLocation[this.geoCounter].split(',')[5])\n      .then(result => {\n        console.log('Location post successfully on add task logs: ' + JSON.stringify(result))\n        if (this.geoCounter < this.taskLogGeoLocation.length) {\n          this.geoCounter +=1\n          this.postTaskLogGeoLocation()\n        } else {\n          localStorage.removeItem('taskLogGeoLocation')\n        }\n      }, error => {\n        console.log('Error in post location: ' + JSON.stringify(error))\n      })\n  }\n\n  async deleteConflictOfflineTaskLogs() {\n    if (this.conflictTasklogID.length > this.j) {\n      this.sqlite.create({\n        name: 'Commander.db',\n        location: 'default'\n      }).then((db: SQLiteObject) => {\n        db.executeSql('DELETE FROM tasklogs WHERE ID=?', [this.conflictTasklogID[this.j]])\n          .then(res => {\n            console.log(\"Delete Response:-\", JSON.stringify(res))\n            this.j++\n            this.deleteConflictOfflineTaskLogs()\n          })\n          .catch(e => console.log(e));\n      }).catch(e => console.log(e));\n    } else {\n      if (this.taskLogsInDB.length > this.k) {\n        // if(this.taskLogsInDB.length == 1){\n        // this.conflictTasklogID = []\n        // this.detectConflictInPreviousTasks(this.taskLogsInDB[this.k].date) \n        // }else{\n        this.k++\n        this.conflictTasklogID = []\n        this.detectConflictInPreviousTasks(this.taskLogsInDB[this.k - 1].date)\n        // }\n\n      } else {\n        this.taskLogsInDB = []\n        this.syncTaskLogs()\n      }\n\n      // this.conflictTasklogData = []\n      // this.validateConflict()\n      // this.syncTaskLogs()\n    }\n\n  }\n\n  postTaskLog() {\n    if (this.taskLogsInDB.length > this.i) {\n      if (this.networkProvider.getNetworkStatus() == 'Online') {\n        this.dataServices.postTaskLog(this.taskLogsInDB[this.i].ID, this.taskLogsInDB[this.i].eventID, this.taskLogsInDB[this.i].userID, this.taskLogsInDB[this.i].yardID, this.taskLogsInDB[this.i].laborCodeID, this.taskLogsInDB[this.i].ticket, this.taskLogsInDB[this.i].date, this.taskLogsInDB[this.i].LOG, this.taskLogsInDB[this.i].startTime, this.taskLogsInDB[this.i].endTime, this.taskLogsInDB[this.i].hours, this.taskLogsInDB[this.i].state, this.taskLogsInDB[this.i].comment, this.taskLogsInDB[this.i].auditDate, this.taskLogsInDB[this.i].auditStatus, this.taskLogsInDB[this.i].reason).then(async (result: any) => {\n          console.log(\"Sucess Status: \", result)\n          console.log(\"Response Data\", result.success)\n          if (result.success == true) {\n            this.sqlite.create({\n              name: 'Commander.db',\n              location: 'default'\n            }).then((db: SQLiteObject) => {\n              db.executeSql('UPDATE tasklogs SET server_id= ? WHERE ID= ?', [result.server_id, result.local_id])\n                .then(res => {\n                  console.log(res);\n                }).catch(e => console.log(e));\n            }).catch(e => console.log(e));\n            this.i++\n            if (this.taskLogsInDB.length == this.i) {\n              this.taskLogsInDB = []\n              // this.TaskLogSaved(\"Task Log Saved Successfully\")\n              this.nonApprovedTaskLogsData = []\n              this.nonApprovedTaskLogsDataFromDB = []\n              await this.displayTaskLogFromDB()\n            } else {\n              this.postTaskLog()\n            }\n          } else {\n            this.i++\n            if (this.taskLogsInDB.length == this.i) {\n              this.taskLogsInDB = []\n              this.nonApprovedTaskLogsData = []\n              this.nonApprovedTaskLogsDataFromDB = []\n              await this.displayTaskLogFromDB()\n              // this.taskLogSaved(\"Task Log Saved Successfully\")\n            } else {\n              this.postTaskLog()\n            }\n          }\n        });\n      } else {\n        this.loadingController.dismiss()\n        // alert('No internet connection.')\n      }\n    }\n  }\n\n  async displayTaskLogFromDB() {\n    this.sqlite.create({\n      name: 'Commander.db',\n      location: 'default'\n    }).then(async (db: SQLiteObject) => {\n      // if (this.networkProvider.getNetworkStatus() == 'Online') {\n      //   this.presentLoading()\n      // }\n      await db.executeSql('SELECT * FROM tasklogs GROUP BY date ORDER BY date DESC', [])\n        .then(async res => {\n          console.log(\"Task log:-\", JSON.stringify(res))\n          console.log(\"Task log length:-\", JSON.stringify(res.rows.length))\n          if (res.rows.length > 0) {\n            this.approvedTaskLogsDataFromDB = []\n            this.nonApprovedTaskLogsDataFromDB = []\n            for (let i = 0; i < res.rows.length; i++) {\n              //Approved\n              db.executeSql('SELECT * FROM tasklogs WHERE date = ? AND status = \"Approved\"', [res.rows.item(i).date]).then(res1 => {\n                console.log('Data of Date: ' + res1)\n                if (res1.rows.length > 0) {\n                  let taskLogArr = []\n                  let totalHrs = 0.0\n                  for (let j = 0; j < res1.rows.length; j++) {\n                    let taskLogDataObj: any\n                    taskLogDataObj = {\n                      \"log_id\": res1.rows.item(j).LOG,\n                      \"event_name\": res1.rows.item(j).eventTitle,\n                      \"taskLogDate\": res1.rows.item(j).date,\n                      \"log\": res1.rows.item(j).LOG,\n                      \"labor_code\": res1.rows.item(j).laborCode,\n                      \"laborCodeID\": res1.rows.item(j).laborCodeID,\n                      \"start_time\": res1.rows.item(j).startTime,\n                      \"stop_time\": res1.rows.item(j).endTime,\n                      \"hours\": res1.rows.item(j).hours,\n                      \"state\": res1.rows.item(j).state,\n                      \"comments\": res1.rows.item(j).comment,\n                      \"yard_name\": res1.rows.item(j).yardName,\n                      \"status\": res1.rows.item(j).status,\n                      // \"user_id\": \"234\",\n                      // \"event_id\": \"IIB\",\n                      // \"stateName\": \"Alaska\",\n                      // \"audit\": \"Audit Required\",\n                      // \"date\": \"00-00-0000\",\n                      // \"reason\": \"\",\n                      // \"yard_id\": \"HEAH38\"\n                    }\n                    taskLogArr.push(taskLogDataObj)\n                    totalHrs += parseFloat((res1.rows.item(j).hours).replace(':', '.')) //res1.rows.item(j).hours\n                  }\n                  console.log(res.rows.item(i).date + ': ' + taskLogArr.length + ' totalHrs: ' + totalHrs)\n                  let taskLog: any\n                  taskLog = {\n                    \"date\": res.rows.item(i).date,\n                    \"totalHrs\": totalHrs,\n                    \"taskLogArray\": taskLogArr\n                  }\n                  this.approvedTaskLogsDataFromDB.push(taskLog)\n                }\n                console.log('approvedTaskLogsDataFromDB: ' + JSON.stringify(this.approvedTaskLogsDataFromDB))\n                this.ApprovedTaskLogsData = this.approvedTaskLogsDataFromDB\n                if (this.ApprovedTaskLogsData.length > 0) {\n                  this.AuditData = false\n                } else {\n                  this.AuditData = true\n                }\n              }).catch(e => console.log('Error in Date DB: ' + e));\n\n              //Audit Required AND status = \"Audit Required\" OR status = \"Audit Completed\"\n              await db.executeSql('SELECT * FROM tasklogs WHERE date = ? AND status = \"Audit Required\" OR status = \"Audit Completed\"', [res.rows.item(i).date]).then(res1 => {\n                if (res1.rows.length > 0) {\n                  let taskLogArr = []\n                  let totalHrs = 0.0\n                  for (let j = 0; j < res1.rows.length; j++) {\n                    let taskLogDataObj: any\n                    taskLogDataObj = {\n                      \"log_id\": res1.rows.item(j).LOG,\n                      \"event_name\": res1.rows.item(j).eventTitle,\n                      \"taskLogDate\": res1.rows.item(j).date,\n                      \"log\": res1.rows.item(j).LOG,\n                      \"labor_code\": res1.rows.item(j).laborCode,\n                      \"laborCodeID\": res1.rows.item(j).laborCodeID,\n                      \"start_time\": res1.rows.item(j).startTime,\n                      \"stop_time\": res1.rows.item(j).endTime,\n                      \"hours\": res1.rows.item(j).hours,\n                      \"state\": res1.rows.item(j).state,\n                      \"comments\": res1.rows.item(j).comment,\n                      \"yard_name\": res1.rows.item(j).yardName,\n                      \"status\": res1.rows.item(j).status,\n                      // \"user_id\": \"234\",\n                      // \"event_id\": \"IIB\",\n                      // \"stateName\": \"Alaska\",\n                      // \"audit\": \"Audit Required\",\n                      // \"date\": \"00-00-0000\",\n                      // \"reason\": \"\",\n                      // \"yard_id\": \"HEAH38\"\n                    }\n                    taskLogArr.push(taskLogDataObj)\n                    totalHrs += parseFloat((res1.rows.item(j).hours).replace(':', '.')) //res1.rows.item(j).hours\n                  }\n                  console.log(res.rows.item(i).date + ': ' + taskLogArr.length + ' totalHrs: ' + totalHrs)\n                  let taskLog: any\n                  taskLog = {\n                    \"date\": res.rows.item(i).date,\n                    \"totalHrs\": totalHrs,\n                    \"taskLogArray\": taskLogArr\n                  }\n                  this.nonApprovedTaskLogsDataFromDB.push(taskLog)\n                }\n                console.log('nonApprovedTaskLogsDataFromDB: ' + JSON.stringify(this.nonApprovedTaskLogsDataFromDB))\n                this.nonApprovedTaskLogsData = this.nonApprovedTaskLogsDataFromDB\n                if (this.nonApprovedTaskLogsData.length > 0) {\n                  this.noAuditData = false\n                } else {\n                  this.noAuditData = true\n                }\n\n              }).catch(e => console.log('Error in Date DB: ' + e));\n            }\n          }\n        }).catch(e => console.log(e));\n    }).catch(e => console.log(e));\n  }\n}\n"],"sourceRoot":""}