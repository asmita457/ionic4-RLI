{"version":3,"sources":["webpack:///./node_modules/q/q.js","webpack:///./src/app/receipts/receipts.module.ts","webpack:///./src/app/receipts/receipts.page.html","webpack:///./src/app/receipts/receipts.page.scss","webpack:///./src/app/receipts/receipts.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK,UAAU,IAAyD;AACxE;;AAEA;AACA,KAAK,MAAM,0BA+BN;;AAEL,CAAC;AACD;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,cAAc,gBAAgB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,KAAK;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,+BAA+B;AAC/B;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB,kBAAkB;AAClB,wBAAwB;AACxB,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,mBAAmB,YAAY;AAC/B,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,8CAA8C,SAAS;AACvD;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,cAAc,EAAE;AAClD;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC,cAAc,EAAE;AAClD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,gBAAgB;AAChB,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL,gBAAgB;AAChB,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,yCAAyC,gCAAgC;AACzE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM,sCAAsC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;AC//DwC;AACM;AACF;AACU;AAEV;AAEE;AAC/C,mEAAmE;AAEnE,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAY;KACxB;CACF,CAAC;AAWF;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QAT9B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,2DAAY,CAAC;SAC7B,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH;;;;;;;;;;;;AC1B/B,scAAsc,aAAa,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","file":"receipts-receipts-module.js","sourcesContent":["// vim:ts=4:sts=4:sw=4:\n/*!\n *\n * Copyright 2009-2012 Kris Kowal under the terms of the MIT\n * license found at http://github.com/kriskowal/q/raw/master/LICENSE\n *\n * With parts by Tyler Close\n * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found\n * at http://www.opensource.org/licenses/mit-license.html\n * Forked at ref_send.js version: 2009-05-11\n *\n * With parts by Mark Miller\n * Copyright (C) 2011 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n(function (definition) {\n    \"use strict\";\n\n    // This file will function properly as a <script> tag, or a module\n    // using CommonJS and NodeJS or RequireJS module formats.  In\n    // Common/Node/RequireJS, the module exports the Q API and when\n    // executed as a simple <script>, it creates a Q global instead.\n\n    // Montage Require\n    if (typeof bootstrap === \"function\") {\n        bootstrap(\"promise\", definition);\n\n    // CommonJS\n    } else if (typeof exports === \"object\" && typeof module === \"object\") {\n        module.exports = definition();\n\n    // RequireJS\n    } else if (typeof define === \"function\" && define.amd) {\n        define(definition);\n\n    // SES (Secure EcmaScript)\n    } else if (typeof ses !== \"undefined\") {\n        if (!ses.ok()) {\n            return;\n        } else {\n            ses.makeQ = definition;\n        }\n\n    // <script>\n    } else if (typeof window !== \"undefined\" || typeof self !== \"undefined\") {\n        // Prefer window over self for add-on scripts. Use self for\n        // non-windowed contexts.\n        var global = typeof window !== \"undefined\" ? window : self;\n\n        // Get the `window` object, save the previous Q global\n        // and initialize Q as a global.\n        var previousQ = global.Q;\n        global.Q = definition();\n\n        // Add a noConflict function so Q can be removed from the\n        // global namespace.\n        global.Q.noConflict = function () {\n            global.Q = previousQ;\n            return this;\n        };\n\n    } else {\n        throw new Error(\"This environment was not anticipated by Q. Please file a bug.\");\n    }\n\n})(function () {\n\"use strict\";\n\nvar hasStacks = false;\ntry {\n    throw new Error();\n} catch (e) {\n    hasStacks = !!e.stack;\n}\n\n// All code after this point will be filtered from stack traces reported\n// by Q.\nvar qStartingLine = captureLine();\nvar qFileName;\n\n// shims\n\n// used for fallback in \"allResolved\"\nvar noop = function () {};\n\n// Use the fastest possible means to execute a task in a future turn\n// of the event loop.\nvar nextTick =(function () {\n    // linked list of tasks (single, with head node)\n    var head = {task: void 0, next: null};\n    var tail = head;\n    var flushing = false;\n    var requestTick = void 0;\n    var isNodeJS = false;\n    // queue for late tasks, used by unhandled rejection tracking\n    var laterQueue = [];\n\n    function flush() {\n        /* jshint loopfunc: true */\n        var task, domain;\n\n        while (head.next) {\n            head = head.next;\n            task = head.task;\n            head.task = void 0;\n            domain = head.domain;\n\n            if (domain) {\n                head.domain = void 0;\n                domain.enter();\n            }\n            runSingle(task, domain);\n\n        }\n        while (laterQueue.length) {\n            task = laterQueue.pop();\n            runSingle(task);\n        }\n        flushing = false;\n    }\n    // runs a single function in the async queue\n    function runSingle(task, domain) {\n        try {\n            task();\n\n        } catch (e) {\n            if (isNodeJS) {\n                // In node, uncaught exceptions are considered fatal errors.\n                // Re-throw them synchronously to interrupt flushing!\n\n                // Ensure continuation if the uncaught exception is suppressed\n                // listening \"uncaughtException\" events (as domains does).\n                // Continue in next event to avoid tick recursion.\n                if (domain) {\n                    domain.exit();\n                }\n                setTimeout(flush, 0);\n                if (domain) {\n                    domain.enter();\n                }\n\n                throw e;\n\n            } else {\n                // In browsers, uncaught exceptions are not fatal.\n                // Re-throw them asynchronously to avoid slow-downs.\n                setTimeout(function () {\n                    throw e;\n                }, 0);\n            }\n        }\n\n        if (domain) {\n            domain.exit();\n        }\n    }\n\n    nextTick = function (task) {\n        tail = tail.next = {\n            task: task,\n            domain: isNodeJS && process.domain,\n            next: null\n        };\n\n        if (!flushing) {\n            flushing = true;\n            requestTick();\n        }\n    };\n\n    if (typeof process === \"object\" &&\n        process.toString() === \"[object process]\" && process.nextTick) {\n        // Ensure Q is in a real Node environment, with a `process.nextTick`.\n        // To see through fake Node environments:\n        // * Mocha test runner - exposes a `process` global without a `nextTick`\n        // * Browserify - exposes a `process.nexTick` function that uses\n        //   `setTimeout`. In this case `setImmediate` is preferred because\n        //    it is faster. Browserify's `process.toString()` yields\n        //   \"[object Object]\", while in a real Node environment\n        //   `process.nextTick()` yields \"[object process]\".\n        isNodeJS = true;\n\n        requestTick = function () {\n            process.nextTick(flush);\n        };\n\n    } else if (typeof setImmediate === \"function\") {\n        // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate\n        if (typeof window !== \"undefined\") {\n            requestTick = setImmediate.bind(window, flush);\n        } else {\n            requestTick = function () {\n                setImmediate(flush);\n            };\n        }\n\n    } else if (typeof MessageChannel !== \"undefined\") {\n        // modern browsers\n        // http://www.nonblocking.io/2011/06/windownexttick.html\n        var channel = new MessageChannel();\n        // At least Safari Version 6.0.5 (8536.30.1) intermittently cannot create\n        // working message ports the first time a page loads.\n        channel.port1.onmessage = function () {\n            requestTick = requestPortTick;\n            channel.port1.onmessage = flush;\n            flush();\n        };\n        var requestPortTick = function () {\n            // Opera requires us to provide a message payload, regardless of\n            // whether we use it.\n            channel.port2.postMessage(0);\n        };\n        requestTick = function () {\n            setTimeout(flush, 0);\n            requestPortTick();\n        };\n\n    } else {\n        // old browsers\n        requestTick = function () {\n            setTimeout(flush, 0);\n        };\n    }\n    // runs a task after all other tasks have been run\n    // this is useful for unhandled rejection tracking that needs to happen\n    // after all `then`d tasks have been run.\n    nextTick.runAfter = function (task) {\n        laterQueue.push(task);\n        if (!flushing) {\n            flushing = true;\n            requestTick();\n        }\n    };\n    return nextTick;\n})();\n\n// Attempt to make generics safe in the face of downstream\n// modifications.\n// There is no situation where this is necessary.\n// If you need a security guarantee, these primordials need to be\n// deeply frozen anyway, and if you don’t need a security guarantee,\n// this is just plain paranoid.\n// However, this **might** have the nice side-effect of reducing the size of\n// the minified code by reducing x.call() to merely x()\n// See Mark Miller’s explanation of what this does.\n// http://wiki.ecmascript.org/doku.php?id=conventions:safe_meta_programming\nvar call = Function.call;\nfunction uncurryThis(f) {\n    return function () {\n        return call.apply(f, arguments);\n    };\n}\n// This is equivalent, but slower:\n// uncurryThis = Function_bind.bind(Function_bind.call);\n// http://jsperf.com/uncurrythis\n\nvar array_slice = uncurryThis(Array.prototype.slice);\n\nvar array_reduce = uncurryThis(\n    Array.prototype.reduce || function (callback, basis) {\n        var index = 0,\n            length = this.length;\n        // concerning the initial value, if one is not provided\n        if (arguments.length === 1) {\n            // seek to the first value in the array, accounting\n            // for the possibility that is is a sparse array\n            do {\n                if (index in this) {\n                    basis = this[index++];\n                    break;\n                }\n                if (++index >= length) {\n                    throw new TypeError();\n                }\n            } while (1);\n        }\n        // reduce\n        for (; index < length; index++) {\n            // account for the possibility that the array is sparse\n            if (index in this) {\n                basis = callback(basis, this[index], index);\n            }\n        }\n        return basis;\n    }\n);\n\nvar array_indexOf = uncurryThis(\n    Array.prototype.indexOf || function (value) {\n        // not a very good shim, but good enough for our one use of it\n        for (var i = 0; i < this.length; i++) {\n            if (this[i] === value) {\n                return i;\n            }\n        }\n        return -1;\n    }\n);\n\nvar array_map = uncurryThis(\n    Array.prototype.map || function (callback, thisp) {\n        var self = this;\n        var collect = [];\n        array_reduce(self, function (undefined, value, index) {\n            collect.push(callback.call(thisp, value, index, self));\n        }, void 0);\n        return collect;\n    }\n);\n\nvar object_create = Object.create || function (prototype) {\n    function Type() { }\n    Type.prototype = prototype;\n    return new Type();\n};\n\nvar object_hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\n\nvar object_keys = Object.keys || function (object) {\n    var keys = [];\n    for (var key in object) {\n        if (object_hasOwnProperty(object, key)) {\n            keys.push(key);\n        }\n    }\n    return keys;\n};\n\nvar object_toString = uncurryThis(Object.prototype.toString);\n\nfunction isObject(value) {\n    return value === Object(value);\n}\n\n// generator related shims\n\n// FIXME: Remove this function once ES6 generators are in SpiderMonkey.\nfunction isStopIteration(exception) {\n    return (\n        object_toString(exception) === \"[object StopIteration]\" ||\n        exception instanceof QReturnValue\n    );\n}\n\n// FIXME: Remove this helper and Q.return once ES6 generators are in\n// SpiderMonkey.\nvar QReturnValue;\nif (typeof ReturnValue !== \"undefined\") {\n    QReturnValue = ReturnValue;\n} else {\n    QReturnValue = function (value) {\n        this.value = value;\n    };\n}\n\n// long stack traces\n\nvar STACK_JUMP_SEPARATOR = \"From previous event:\";\n\nfunction makeStackTraceLong(error, promise) {\n    // If possible, transform the error stack trace by removing Node and Q\n    // cruft, then concatenating with the stack trace of `promise`. See #57.\n    if (hasStacks &&\n        promise.stack &&\n        typeof error === \"object\" &&\n        error !== null &&\n        error.stack &&\n        error.stack.indexOf(STACK_JUMP_SEPARATOR) === -1\n    ) {\n        var stacks = [];\n        for (var p = promise; !!p; p = p.source) {\n            if (p.stack) {\n                stacks.unshift(p.stack);\n            }\n        }\n        stacks.unshift(error.stack);\n\n        var concatedStacks = stacks.join(\"\\n\" + STACK_JUMP_SEPARATOR + \"\\n\");\n        error.stack = filterStackString(concatedStacks);\n    }\n}\n\nfunction filterStackString(stackString) {\n    var lines = stackString.split(\"\\n\");\n    var desiredLines = [];\n    for (var i = 0; i < lines.length; ++i) {\n        var line = lines[i];\n\n        if (!isInternalFrame(line) && !isNodeFrame(line) && line) {\n            desiredLines.push(line);\n        }\n    }\n    return desiredLines.join(\"\\n\");\n}\n\nfunction isNodeFrame(stackLine) {\n    return stackLine.indexOf(\"(module.js:\") !== -1 ||\n           stackLine.indexOf(\"(node.js:\") !== -1;\n}\n\nfunction getFileNameAndLineNumber(stackLine) {\n    // Named functions: \"at functionName (filename:lineNumber:columnNumber)\"\n    // In IE10 function name can have spaces (\"Anonymous function\") O_o\n    var attempt1 = /at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(stackLine);\n    if (attempt1) {\n        return [attempt1[1], Number(attempt1[2])];\n    }\n\n    // Anonymous functions: \"at filename:lineNumber:columnNumber\"\n    var attempt2 = /at ([^ ]+):(\\d+):(?:\\d+)$/.exec(stackLine);\n    if (attempt2) {\n        return [attempt2[1], Number(attempt2[2])];\n    }\n\n    // Firefox style: \"function@filename:lineNumber or @filename:lineNumber\"\n    var attempt3 = /.*@(.+):(\\d+)$/.exec(stackLine);\n    if (attempt3) {\n        return [attempt3[1], Number(attempt3[2])];\n    }\n}\n\nfunction isInternalFrame(stackLine) {\n    var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);\n\n    if (!fileNameAndLineNumber) {\n        return false;\n    }\n\n    var fileName = fileNameAndLineNumber[0];\n    var lineNumber = fileNameAndLineNumber[1];\n\n    return fileName === qFileName &&\n        lineNumber >= qStartingLine &&\n        lineNumber <= qEndingLine;\n}\n\n// discover own file name and line number range for filtering stack\n// traces\nfunction captureLine() {\n    if (!hasStacks) {\n        return;\n    }\n\n    try {\n        throw new Error();\n    } catch (e) {\n        var lines = e.stack.split(\"\\n\");\n        var firstLine = lines[0].indexOf(\"@\") > 0 ? lines[1] : lines[2];\n        var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);\n        if (!fileNameAndLineNumber) {\n            return;\n        }\n\n        qFileName = fileNameAndLineNumber[0];\n        return fileNameAndLineNumber[1];\n    }\n}\n\nfunction deprecate(callback, name, alternative) {\n    return function () {\n        if (typeof console !== \"undefined\" &&\n            typeof console.warn === \"function\") {\n            console.warn(name + \" is deprecated, use \" + alternative +\n                         \" instead.\", new Error(\"\").stack);\n        }\n        return callback.apply(callback, arguments);\n    };\n}\n\n// end of shims\n// beginning of real work\n\n/**\n * Constructs a promise for an immediate reference, passes promises through, or\n * coerces promises from different systems.\n * @param value immediate reference or promise\n */\nfunction Q(value) {\n    // If the object is already a Promise, return it directly.  This enables\n    // the resolve function to both be used to created references from objects,\n    // but to tolerably coerce non-promises to promises.\n    if (value instanceof Promise) {\n        return value;\n    }\n\n    // assimilate thenables\n    if (isPromiseAlike(value)) {\n        return coerce(value);\n    } else {\n        return fulfill(value);\n    }\n}\nQ.resolve = Q;\n\n/**\n * Performs a task in a future turn of the event loop.\n * @param {Function} task\n */\nQ.nextTick = nextTick;\n\n/**\n * Controls whether or not long stack traces will be on\n */\nQ.longStackSupport = false;\n\n// enable long stacks if Q_DEBUG is set\nif (typeof process === \"object\" && process && process.env && process.env.Q_DEBUG) {\n    Q.longStackSupport = true;\n}\n\n/**\n * Constructs a {promise, resolve, reject} object.\n *\n * `resolve` is a callback to invoke with a more resolved value for the\n * promise. To fulfill the promise, invoke `resolve` with any value that is\n * not a thenable. To reject the promise, invoke `resolve` with a rejected\n * thenable, or invoke `reject` with the reason directly. To resolve the\n * promise to another thenable, thus putting it in the same state, invoke\n * `resolve` with that other thenable.\n */\nQ.defer = defer;\nfunction defer() {\n    // if \"messages\" is an \"Array\", that indicates that the promise has not yet\n    // been resolved.  If it is \"undefined\", it has been resolved.  Each\n    // element of the messages array is itself an array of complete arguments to\n    // forward to the resolved promise.  We coerce the resolution value to a\n    // promise using the `resolve` function because it handles both fully\n    // non-thenable values and other thenables gracefully.\n    var messages = [], progressListeners = [], resolvedPromise;\n\n    var deferred = object_create(defer.prototype);\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, operands) {\n        var args = array_slice(arguments);\n        if (messages) {\n            messages.push(args);\n            if (op === \"when\" && operands[1]) { // progress operand\n                progressListeners.push(operands[1]);\n            }\n        } else {\n            Q.nextTick(function () {\n                resolvedPromise.promiseDispatch.apply(resolvedPromise, args);\n            });\n        }\n    };\n\n    // XXX deprecated\n    promise.valueOf = function () {\n        if (messages) {\n            return promise;\n        }\n        var nearerValue = nearer(resolvedPromise);\n        if (isPromise(nearerValue)) {\n            resolvedPromise = nearerValue; // shorten chain\n        }\n        return nearerValue;\n    };\n\n    promise.inspect = function () {\n        if (!resolvedPromise) {\n            return { state: \"pending\" };\n        }\n        return resolvedPromise.inspect();\n    };\n\n    if (Q.longStackSupport && hasStacks) {\n        try {\n            throw new Error();\n        } catch (e) {\n            // NOTE: don't try to use `Error.captureStackTrace` or transfer the\n            // accessor around; that causes memory leaks as per GH-111. Just\n            // reify the stack trace as a string ASAP.\n            //\n            // At the same time, cut off the first line; it's always just\n            // \"[object Promise]\\n\", as per the `toString`.\n            promise.stack = e.stack.substring(e.stack.indexOf(\"\\n\") + 1);\n        }\n    }\n\n    // NOTE: we do the checks for `resolvedPromise` in each method, instead of\n    // consolidating them into `become`, since otherwise we'd create new\n    // promises with the lines `become(whatever(value))`. See e.g. GH-252.\n\n    function become(newPromise) {\n        resolvedPromise = newPromise;\n        promise.source = newPromise;\n\n        array_reduce(messages, function (undefined, message) {\n            Q.nextTick(function () {\n                newPromise.promiseDispatch.apply(newPromise, message);\n            });\n        }, void 0);\n\n        messages = void 0;\n        progressListeners = void 0;\n    }\n\n    deferred.promise = promise;\n    deferred.resolve = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(Q(value));\n    };\n\n    deferred.fulfill = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(fulfill(value));\n    };\n    deferred.reject = function (reason) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(reject(reason));\n    };\n    deferred.notify = function (progress) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        array_reduce(progressListeners, function (undefined, progressListener) {\n            Q.nextTick(function () {\n                progressListener(progress);\n            });\n        }, void 0);\n    };\n\n    return deferred;\n}\n\n/**\n * Creates a Node-style callback that will resolve or reject the deferred\n * promise.\n * @returns a nodeback\n */\ndefer.prototype.makeNodeResolver = function () {\n    var self = this;\n    return function (error, value) {\n        if (error) {\n            self.reject(error);\n        } else if (arguments.length > 2) {\n            self.resolve(array_slice(arguments, 1));\n        } else {\n            self.resolve(value);\n        }\n    };\n};\n\n/**\n * @param resolver {Function} a function that returns nothing and accepts\n * the resolve, reject, and notify functions for a deferred.\n * @returns a promise that may be resolved with the given resolve and reject\n * functions, or rejected by a thrown exception in resolver\n */\nQ.Promise = promise; // ES6\nQ.promise = promise;\nfunction promise(resolver) {\n    if (typeof resolver !== \"function\") {\n        throw new TypeError(\"resolver must be a function.\");\n    }\n    var deferred = defer();\n    try {\n        resolver(deferred.resolve, deferred.reject, deferred.notify);\n    } catch (reason) {\n        deferred.reject(reason);\n    }\n    return deferred.promise;\n}\n\npromise.race = race; // ES6\npromise.all = all; // ES6\npromise.reject = reject; // ES6\npromise.resolve = Q; // ES6\n\n// XXX experimental.  This method is a way to denote that a local value is\n// serializable and should be immediately dispatched to a remote upon request,\n// instead of passing a reference.\nQ.passByCopy = function (object) {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return object;\n};\n\nPromise.prototype.passByCopy = function () {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return this;\n};\n\n/**\n * If two promises eventually fulfill to the same value, promises that value,\n * but otherwise rejects.\n * @param x {Any*}\n * @param y {Any*}\n * @returns {Any*} a promise for x and y if they are the same, but a rejection\n * otherwise.\n *\n */\nQ.join = function (x, y) {\n    return Q(x).join(y);\n};\n\nPromise.prototype.join = function (that) {\n    return Q([this, that]).spread(function (x, y) {\n        if (x === y) {\n            // TODO: \"===\" should be Object.is or equiv\n            return x;\n        } else {\n            throw new Error(\"Can't join: not the same: \" + x + \" \" + y);\n        }\n    });\n};\n\n/**\n * Returns a promise for the first of an array of promises to become settled.\n * @param answers {Array[Any*]} promises to race\n * @returns {Any*} the first promise to be settled\n */\nQ.race = race;\nfunction race(answerPs) {\n    return promise(function (resolve, reject) {\n        // Switch to this once we can assume at least ES5\n        // answerPs.forEach(function (answerP) {\n        //     Q(answerP).then(resolve, reject);\n        // });\n        // Use this in the meantime\n        for (var i = 0, len = answerPs.length; i < len; i++) {\n            Q(answerPs[i]).then(resolve, reject);\n        }\n    });\n}\n\nPromise.prototype.race = function () {\n    return this.then(Q.race);\n};\n\n/**\n * Constructs a Promise with a promise descriptor object and optional fallback\n * function.  The descriptor contains methods like when(rejected), get(name),\n * set(name, value), post(name, args), and delete(name), which all\n * return either a value, a promise for a value, or a rejection.  The fallback\n * accepts the operation name, a resolver, and any further arguments that would\n * have been forwarded to the appropriate method above had a method been\n * provided with the proper name.  The API makes no guarantees about the nature\n * of the returned object, apart from that it is usable whereever promises are\n * bought and sold.\n */\nQ.makePromise = Promise;\nfunction Promise(descriptor, fallback, inspect) {\n    if (fallback === void 0) {\n        fallback = function (op) {\n            return reject(new Error(\n                \"Promise does not support operation: \" + op\n            ));\n        };\n    }\n    if (inspect === void 0) {\n        inspect = function () {\n            return {state: \"unknown\"};\n        };\n    }\n\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, args) {\n        var result;\n        try {\n            if (descriptor[op]) {\n                result = descriptor[op].apply(promise, args);\n            } else {\n                result = fallback.call(promise, op, args);\n            }\n        } catch (exception) {\n            result = reject(exception);\n        }\n        if (resolve) {\n            resolve(result);\n        }\n    };\n\n    promise.inspect = inspect;\n\n    // XXX deprecated `valueOf` and `exception` support\n    if (inspect) {\n        var inspected = inspect();\n        if (inspected.state === \"rejected\") {\n            promise.exception = inspected.reason;\n        }\n\n        promise.valueOf = function () {\n            var inspected = inspect();\n            if (inspected.state === \"pending\" ||\n                inspected.state === \"rejected\") {\n                return promise;\n            }\n            return inspected.value;\n        };\n    }\n\n    return promise;\n}\n\nPromise.prototype.toString = function () {\n    return \"[object Promise]\";\n};\n\nPromise.prototype.then = function (fulfilled, rejected, progressed) {\n    var self = this;\n    var deferred = defer();\n    var done = false;   // ensure the untrusted promise makes at most a\n                        // single call to one of the callbacks\n\n    function _fulfilled(value) {\n        try {\n            return typeof fulfilled === \"function\" ? fulfilled(value) : value;\n        } catch (exception) {\n            return reject(exception);\n        }\n    }\n\n    function _rejected(exception) {\n        if (typeof rejected === \"function\") {\n            makeStackTraceLong(exception, self);\n            try {\n                return rejected(exception);\n            } catch (newException) {\n                return reject(newException);\n            }\n        }\n        return reject(exception);\n    }\n\n    function _progressed(value) {\n        return typeof progressed === \"function\" ? progressed(value) : value;\n    }\n\n    Q.nextTick(function () {\n        self.promiseDispatch(function (value) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_fulfilled(value));\n        }, \"when\", [function (exception) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_rejected(exception));\n        }]);\n    });\n\n    // Progress propagator need to be attached in the current tick.\n    self.promiseDispatch(void 0, \"when\", [void 0, function (value) {\n        var newValue;\n        var threw = false;\n        try {\n            newValue = _progressed(value);\n        } catch (e) {\n            threw = true;\n            if (Q.onerror) {\n                Q.onerror(e);\n            } else {\n                throw e;\n            }\n        }\n\n        if (!threw) {\n            deferred.notify(newValue);\n        }\n    }]);\n\n    return deferred.promise;\n};\n\nQ.tap = function (promise, callback) {\n    return Q(promise).tap(callback);\n};\n\n/**\n * Works almost like \"finally\", but not called for rejections.\n * Original resolution value is passed through callback unaffected.\n * Callback may return a promise that will be awaited for.\n * @param {Function} callback\n * @returns {Q.Promise}\n * @example\n * doSomething()\n *   .then(...)\n *   .tap(console.log)\n *   .then(...);\n */\nPromise.prototype.tap = function (callback) {\n    callback = Q(callback);\n\n    return this.then(function (value) {\n        return callback.fcall(value).thenResolve(value);\n    });\n};\n\n/**\n * Registers an observer on a promise.\n *\n * Guarantees:\n *\n * 1. that fulfilled and rejected will be called only once.\n * 2. that either the fulfilled callback or the rejected callback will be\n *    called, but not both.\n * 3. that fulfilled and rejected will not be called in this turn.\n *\n * @param value      promise or immediate reference to observe\n * @param fulfilled  function to be called with the fulfilled value\n * @param rejected   function to be called with the rejection exception\n * @param progressed function to be called on any progress notifications\n * @return promise for the return value from the invoked callback\n */\nQ.when = when;\nfunction when(value, fulfilled, rejected, progressed) {\n    return Q(value).then(fulfilled, rejected, progressed);\n}\n\nPromise.prototype.thenResolve = function (value) {\n    return this.then(function () { return value; });\n};\n\nQ.thenResolve = function (promise, value) {\n    return Q(promise).thenResolve(value);\n};\n\nPromise.prototype.thenReject = function (reason) {\n    return this.then(function () { throw reason; });\n};\n\nQ.thenReject = function (promise, reason) {\n    return Q(promise).thenReject(reason);\n};\n\n/**\n * If an object is not a promise, it is as \"near\" as possible.\n * If a promise is rejected, it is as \"near\" as possible too.\n * If it’s a fulfilled promise, the fulfillment value is nearer.\n * If it’s a deferred promise and the deferred has been resolved, the\n * resolution is \"nearer\".\n * @param object\n * @returns most resolved (nearest) form of the object\n */\n\n// XXX should we re-do this?\nQ.nearer = nearer;\nfunction nearer(value) {\n    if (isPromise(value)) {\n        var inspected = value.inspect();\n        if (inspected.state === \"fulfilled\") {\n            return inspected.value;\n        }\n    }\n    return value;\n}\n\n/**\n * @returns whether the given object is a promise.\n * Otherwise it is a fulfilled value.\n */\nQ.isPromise = isPromise;\nfunction isPromise(object) {\n    return object instanceof Promise;\n}\n\nQ.isPromiseAlike = isPromiseAlike;\nfunction isPromiseAlike(object) {\n    return isObject(object) && typeof object.then === \"function\";\n}\n\n/**\n * @returns whether the given object is a pending promise, meaning not\n * fulfilled or rejected.\n */\nQ.isPending = isPending;\nfunction isPending(object) {\n    return isPromise(object) && object.inspect().state === \"pending\";\n}\n\nPromise.prototype.isPending = function () {\n    return this.inspect().state === \"pending\";\n};\n\n/**\n * @returns whether the given object is a value or fulfilled\n * promise.\n */\nQ.isFulfilled = isFulfilled;\nfunction isFulfilled(object) {\n    return !isPromise(object) || object.inspect().state === \"fulfilled\";\n}\n\nPromise.prototype.isFulfilled = function () {\n    return this.inspect().state === \"fulfilled\";\n};\n\n/**\n * @returns whether the given object is a rejected promise.\n */\nQ.isRejected = isRejected;\nfunction isRejected(object) {\n    return isPromise(object) && object.inspect().state === \"rejected\";\n}\n\nPromise.prototype.isRejected = function () {\n    return this.inspect().state === \"rejected\";\n};\n\n//// BEGIN UNHANDLED REJECTION TRACKING\n\n// This promise library consumes exceptions thrown in handlers so they can be\n// handled by a subsequent promise.  The exceptions get added to this array when\n// they are created, and removed when they are handled.  Note that in ES6 or\n// shimmed environments, this would naturally be a `Set`.\nvar unhandledReasons = [];\nvar unhandledRejections = [];\nvar reportedUnhandledRejections = [];\nvar trackUnhandledRejections = true;\n\nfunction resetUnhandledRejections() {\n    unhandledReasons.length = 0;\n    unhandledRejections.length = 0;\n\n    if (!trackUnhandledRejections) {\n        trackUnhandledRejections = true;\n    }\n}\n\nfunction trackRejection(promise, reason) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n    if (typeof process === \"object\" && typeof process.emit === \"function\") {\n        Q.nextTick.runAfter(function () {\n            if (array_indexOf(unhandledRejections, promise) !== -1) {\n                process.emit(\"unhandledRejection\", reason, promise);\n                reportedUnhandledRejections.push(promise);\n            }\n        });\n    }\n\n    unhandledRejections.push(promise);\n    if (reason && typeof reason.stack !== \"undefined\") {\n        unhandledReasons.push(reason.stack);\n    } else {\n        unhandledReasons.push(\"(no stack) \" + reason);\n    }\n}\n\nfunction untrackRejection(promise) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n\n    var at = array_indexOf(unhandledRejections, promise);\n    if (at !== -1) {\n        if (typeof process === \"object\" && typeof process.emit === \"function\") {\n            Q.nextTick.runAfter(function () {\n                var atReport = array_indexOf(reportedUnhandledRejections, promise);\n                if (atReport !== -1) {\n                    process.emit(\"rejectionHandled\", unhandledReasons[at], promise);\n                    reportedUnhandledRejections.splice(atReport, 1);\n                }\n            });\n        }\n        unhandledRejections.splice(at, 1);\n        unhandledReasons.splice(at, 1);\n    }\n}\n\nQ.resetUnhandledRejections = resetUnhandledRejections;\n\nQ.getUnhandledReasons = function () {\n    // Make a copy so that consumers can't interfere with our internal state.\n    return unhandledReasons.slice();\n};\n\nQ.stopUnhandledRejectionTracking = function () {\n    resetUnhandledRejections();\n    trackUnhandledRejections = false;\n};\n\nresetUnhandledRejections();\n\n//// END UNHANDLED REJECTION TRACKING\n\n/**\n * Constructs a rejected promise.\n * @param reason value describing the failure\n */\nQ.reject = reject;\nfunction reject(reason) {\n    var rejection = Promise({\n        \"when\": function (rejected) {\n            // note that the error has been handled\n            if (rejected) {\n                untrackRejection(this);\n            }\n            return rejected ? rejected(reason) : this;\n        }\n    }, function fallback() {\n        return this;\n    }, function inspect() {\n        return { state: \"rejected\", reason: reason };\n    });\n\n    // Note that the reason has not been handled.\n    trackRejection(rejection, reason);\n\n    return rejection;\n}\n\n/**\n * Constructs a fulfilled promise for an immediate reference.\n * @param value immediate reference\n */\nQ.fulfill = fulfill;\nfunction fulfill(value) {\n    return Promise({\n        \"when\": function () {\n            return value;\n        },\n        \"get\": function (name) {\n            return value[name];\n        },\n        \"set\": function (name, rhs) {\n            value[name] = rhs;\n        },\n        \"delete\": function (name) {\n            delete value[name];\n        },\n        \"post\": function (name, args) {\n            // Mark Miller proposes that post with no name should apply a\n            // promised function.\n            if (name === null || name === void 0) {\n                return value.apply(void 0, args);\n            } else {\n                return value[name].apply(value, args);\n            }\n        },\n        \"apply\": function (thisp, args) {\n            return value.apply(thisp, args);\n        },\n        \"keys\": function () {\n            return object_keys(value);\n        }\n    }, void 0, function inspect() {\n        return { state: \"fulfilled\", value: value };\n    });\n}\n\n/**\n * Converts thenables to Q promises.\n * @param promise thenable promise\n * @returns a Q promise\n */\nfunction coerce(promise) {\n    var deferred = defer();\n    Q.nextTick(function () {\n        try {\n            promise.then(deferred.resolve, deferred.reject, deferred.notify);\n        } catch (exception) {\n            deferred.reject(exception);\n        }\n    });\n    return deferred.promise;\n}\n\n/**\n * Annotates an object such that it will never be\n * transferred away from this process over any promise\n * communication channel.\n * @param object\n * @returns promise a wrapping of that object that\n * additionally responds to the \"isDef\" message\n * without a rejection.\n */\nQ.master = master;\nfunction master(object) {\n    return Promise({\n        \"isDef\": function () {}\n    }, function fallback(op, args) {\n        return dispatch(object, op, args);\n    }, function () {\n        return Q(object).inspect();\n    });\n}\n\n/**\n * Spreads the values of a promised array of arguments into the\n * fulfillment callback.\n * @param fulfilled callback that receives variadic arguments from the\n * promised array\n * @param rejected callback that receives the exception if the promise\n * is rejected.\n * @returns a promise for the return value or thrown exception of\n * either callback.\n */\nQ.spread = spread;\nfunction spread(value, fulfilled, rejected) {\n    return Q(value).spread(fulfilled, rejected);\n}\n\nPromise.prototype.spread = function (fulfilled, rejected) {\n    return this.all().then(function (array) {\n        return fulfilled.apply(void 0, array);\n    }, rejected);\n};\n\n/**\n * The async function is a decorator for generator functions, turning\n * them into asynchronous generators.  Although generators are only part\n * of the newest ECMAScript 6 drafts, this code does not cause syntax\n * errors in older engines.  This code should continue to work and will\n * in fact improve over time as the language improves.\n *\n * ES6 generators are currently part of V8 version 3.19 with the\n * --harmony-generators runtime flag enabled.  SpiderMonkey has had them\n * for longer, but under an older Python-inspired form.  This function\n * works on both kinds of generators.\n *\n * Decorates a generator function such that:\n *  - it may yield promises\n *  - execution will continue when that promise is fulfilled\n *  - the value of the yield expression will be the fulfilled value\n *  - it returns a promise for the return value (when the generator\n *    stops iterating)\n *  - the decorated function returns a promise for the return value\n *    of the generator or the first rejected promise among those\n *    yielded.\n *  - if an error is thrown in the generator, it propagates through\n *    every following yield until it is caught, or until it escapes\n *    the generator function altogether, and is translated into a\n *    rejection for the promise returned by the decorated generator.\n */\nQ.async = async;\nfunction async(makeGenerator) {\n    return function () {\n        // when verb is \"send\", arg is a value\n        // when verb is \"throw\", arg is an exception\n        function continuer(verb, arg) {\n            var result;\n\n            // Until V8 3.19 / Chromium 29 is released, SpiderMonkey is the only\n            // engine that has a deployed base of browsers that support generators.\n            // However, SM's generators use the Python-inspired semantics of\n            // outdated ES6 drafts.  We would like to support ES6, but we'd also\n            // like to make it possible to use generators in deployed browsers, so\n            // we also support Python-style generators.  At some point we can remove\n            // this block.\n\n            if (typeof StopIteration === \"undefined\") {\n                // ES6 Generators\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    return reject(exception);\n                }\n                if (result.done) {\n                    return Q(result.value);\n                } else {\n                    return when(result.value, callback, errback);\n                }\n            } else {\n                // SpiderMonkey Generators\n                // FIXME: Remove this case when SM does ES6 generators.\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    if (isStopIteration(exception)) {\n                        return Q(exception.value);\n                    } else {\n                        return reject(exception);\n                    }\n                }\n                return when(result, callback, errback);\n            }\n        }\n        var generator = makeGenerator.apply(this, arguments);\n        var callback = continuer.bind(continuer, \"next\");\n        var errback = continuer.bind(continuer, \"throw\");\n        return callback();\n    };\n}\n\n/**\n * The spawn function is a small wrapper around async that immediately\n * calls the generator and also ends the promise chain, so that any\n * unhandled errors are thrown instead of forwarded to the error\n * handler. This is useful because it's extremely common to run\n * generators at the top-level to work with libraries.\n */\nQ.spawn = spawn;\nfunction spawn(makeGenerator) {\n    Q.done(Q.async(makeGenerator)());\n}\n\n// FIXME: Remove this interface once ES6 generators are in SpiderMonkey.\n/**\n * Throws a ReturnValue exception to stop an asynchronous generator.\n *\n * This interface is a stop-gap measure to support generator return\n * values in older Firefox/SpiderMonkey.  In browsers that support ES6\n * generators like Chromium 29, just use \"return\" in your generator\n * functions.\n *\n * @param value the return value for the surrounding generator\n * @throws ReturnValue exception with the value.\n * @example\n * // ES6 style\n * Q.async(function* () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      return foo + bar;\n * })\n * // Older SpiderMonkey style\n * Q.async(function () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      Q.return(foo + bar);\n * })\n */\nQ[\"return\"] = _return;\nfunction _return(value) {\n    throw new QReturnValue(value);\n}\n\n/**\n * The promised function decorator ensures that any promise arguments\n * are settled and passed as values (`this` is also settled and passed\n * as a value).  It will also ensure that the result of a function is\n * always a promise.\n *\n * @example\n * var add = Q.promised(function (a, b) {\n *     return a + b;\n * });\n * add(Q(a), Q(B));\n *\n * @param {function} callback The function to decorate\n * @returns {function} a function that has been decorated.\n */\nQ.promised = promised;\nfunction promised(callback) {\n    return function () {\n        return spread([this, all(arguments)], function (self, args) {\n            return callback.apply(self, args);\n        });\n    };\n}\n\n/**\n * sends a message to a value in a future turn\n * @param object* the recipient\n * @param op the name of the message operation, e.g., \"when\",\n * @param args further arguments to be forwarded to the operation\n * @returns result {Promise} a promise for the result of the operation\n */\nQ.dispatch = dispatch;\nfunction dispatch(object, op, args) {\n    return Q(object).dispatch(op, args);\n}\n\nPromise.prototype.dispatch = function (op, args) {\n    var self = this;\n    var deferred = defer();\n    Q.nextTick(function () {\n        self.promiseDispatch(deferred.resolve, op, args);\n    });\n    return deferred.promise;\n};\n\n/**\n * Gets the value of a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to get\n * @return promise for the property value\n */\nQ.get = function (object, key) {\n    return Q(object).dispatch(\"get\", [key]);\n};\n\nPromise.prototype.get = function (key) {\n    return this.dispatch(\"get\", [key]);\n};\n\n/**\n * Sets the value of a property in a future turn.\n * @param object    promise or immediate reference for object object\n * @param name      name of property to set\n * @param value     new value of property\n * @return promise for the return value\n */\nQ.set = function (object, key, value) {\n    return Q(object).dispatch(\"set\", [key, value]);\n};\n\nPromise.prototype.set = function (key, value) {\n    return this.dispatch(\"set\", [key, value]);\n};\n\n/**\n * Deletes a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to delete\n * @return promise for the return value\n */\nQ.del = // XXX legacy\nQ[\"delete\"] = function (object, key) {\n    return Q(object).dispatch(\"delete\", [key]);\n};\n\nPromise.prototype.del = // XXX legacy\nPromise.prototype[\"delete\"] = function (key) {\n    return this.dispatch(\"delete\", [key]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param value     a value to post, typically an array of\n *                  invocation arguments for promises that\n *                  are ultimately backed with `resolve` values,\n *                  as opposed to those backed with URLs\n *                  wherein the posted value can be any\n *                  JSON serializable object.\n * @return promise for the return value\n */\n// bound locally because it is used by other methods\nQ.mapply = // XXX As proposed by \"Redsandro\"\nQ.post = function (object, name, args) {\n    return Q(object).dispatch(\"post\", [name, args]);\n};\n\nPromise.prototype.mapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.post = function (name, args) {\n    return this.dispatch(\"post\", [name, args]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param ...args   array of invocation arguments\n * @return promise for the return value\n */\nQ.send = // XXX Mark Miller's proposed parlance\nQ.mcall = // XXX As proposed by \"Redsandro\"\nQ.invoke = function (object, name /*...args*/) {\n    return Q(object).dispatch(\"post\", [name, array_slice(arguments, 2)]);\n};\n\nPromise.prototype.send = // XXX Mark Miller's proposed parlance\nPromise.prototype.mcall = // XXX As proposed by \"Redsandro\"\nPromise.prototype.invoke = function (name /*...args*/) {\n    return this.dispatch(\"post\", [name, array_slice(arguments, 1)]);\n};\n\n/**\n * Applies the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param args      array of application arguments\n */\nQ.fapply = function (object, args) {\n    return Q(object).dispatch(\"apply\", [void 0, args]);\n};\n\nPromise.prototype.fapply = function (args) {\n    return this.dispatch(\"apply\", [void 0, args]);\n};\n\n/**\n * Calls the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ[\"try\"] =\nQ.fcall = function (object /* ...args*/) {\n    return Q(object).dispatch(\"apply\", [void 0, array_slice(arguments, 1)]);\n};\n\nPromise.prototype.fcall = function (/*...args*/) {\n    return this.dispatch(\"apply\", [void 0, array_slice(arguments)]);\n};\n\n/**\n * Binds the promised function, transforming return values into a fulfilled\n * promise and thrown errors into a rejected one.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ.fbind = function (object /*...args*/) {\n    var promise = Q(object);\n    var args = array_slice(arguments, 1);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\nPromise.prototype.fbind = function (/*...args*/) {\n    var promise = this;\n    var args = array_slice(arguments);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\n\n/**\n * Requests the names of the owned properties of a promised\n * object in a future turn.\n * @param object    promise or immediate reference for target object\n * @return promise for the keys of the eventually settled object\n */\nQ.keys = function (object) {\n    return Q(object).dispatch(\"keys\", []);\n};\n\nPromise.prototype.keys = function () {\n    return this.dispatch(\"keys\", []);\n};\n\n/**\n * Turns an array of promises into a promise for an array.  If any of\n * the promises gets rejected, the whole array is rejected immediately.\n * @param {Array*} an array (or promise for an array) of values (or\n * promises for values)\n * @returns a promise for an array of the corresponding values\n */\n// By Mark Miller\n// http://wiki.ecmascript.org/doku.php?id=strawman:concurrency&rev=1308776521#allfulfilled\nQ.all = all;\nfunction all(promises) {\n    return when(promises, function (promises) {\n        var pendingCount = 0;\n        var deferred = defer();\n        array_reduce(promises, function (undefined, promise, index) {\n            var snapshot;\n            if (\n                isPromise(promise) &&\n                (snapshot = promise.inspect()).state === \"fulfilled\"\n            ) {\n                promises[index] = snapshot.value;\n            } else {\n                ++pendingCount;\n                when(\n                    promise,\n                    function (value) {\n                        promises[index] = value;\n                        if (--pendingCount === 0) {\n                            deferred.resolve(promises);\n                        }\n                    },\n                    deferred.reject,\n                    function (progress) {\n                        deferred.notify({ index: index, value: progress });\n                    }\n                );\n            }\n        }, void 0);\n        if (pendingCount === 0) {\n            deferred.resolve(promises);\n        }\n        return deferred.promise;\n    });\n}\n\nPromise.prototype.all = function () {\n    return all(this);\n};\n\n/**\n * Returns the first resolved promise of an array. Prior rejected promises are\n * ignored.  Rejects only if all promises are rejected.\n * @param {Array*} an array containing values or promises for values\n * @returns a promise fulfilled with the value of the first resolved promise,\n * or a rejected promise if all promises are rejected.\n */\nQ.any = any;\n\nfunction any(promises) {\n    if (promises.length === 0) {\n        return Q.resolve();\n    }\n\n    var deferred = Q.defer();\n    var pendingCount = 0;\n    array_reduce(promises, function (prev, current, index) {\n        var promise = promises[index];\n\n        pendingCount++;\n\n        when(promise, onFulfilled, onRejected, onProgress);\n        function onFulfilled(result) {\n            deferred.resolve(result);\n        }\n        function onRejected() {\n            pendingCount--;\n            if (pendingCount === 0) {\n                deferred.reject(new Error(\n                    \"Can't get fulfillment value from any promise, all \" +\n                    \"promises were rejected.\"\n                ));\n            }\n        }\n        function onProgress(progress) {\n            deferred.notify({\n                index: index,\n                value: progress\n            });\n        }\n    }, undefined);\n\n    return deferred.promise;\n}\n\nPromise.prototype.any = function () {\n    return any(this);\n};\n\n/**\n * Waits for all promises to be settled, either fulfilled or\n * rejected.  This is distinct from `all` since that would stop\n * waiting at the first rejection.  The promise returned by\n * `allResolved` will never be rejected.\n * @param promises a promise for an array (or an array) of promises\n * (or values)\n * @return a promise for an array of promises\n */\nQ.allResolved = deprecate(allResolved, \"allResolved\", \"allSettled\");\nfunction allResolved(promises) {\n    return when(promises, function (promises) {\n        promises = array_map(promises, Q);\n        return when(all(array_map(promises, function (promise) {\n            return when(promise, noop, noop);\n        })), function () {\n            return promises;\n        });\n    });\n}\n\nPromise.prototype.allResolved = function () {\n    return allResolved(this);\n};\n\n/**\n * @see Promise#allSettled\n */\nQ.allSettled = allSettled;\nfunction allSettled(promises) {\n    return Q(promises).allSettled();\n}\n\n/**\n * Turns an array of promises into a promise for an array of their states (as\n * returned by `inspect`) when they have all settled.\n * @param {Array[Any*]} values an array (or promise for an array) of values (or\n * promises for values)\n * @returns {Array[State]} an array of states for the respective values.\n */\nPromise.prototype.allSettled = function () {\n    return this.then(function (promises) {\n        return all(array_map(promises, function (promise) {\n            promise = Q(promise);\n            function regardless() {\n                return promise.inspect();\n            }\n            return promise.then(regardless, regardless);\n        }));\n    });\n};\n\n/**\n * Captures the failure of a promise, giving an oportunity to recover\n * with a callback.  If the given promise is fulfilled, the returned\n * promise is fulfilled.\n * @param {Any*} promise for something\n * @param {Function} callback to fulfill the returned promise if the\n * given promise is rejected\n * @returns a promise for the return value of the callback\n */\nQ.fail = // XXX legacy\nQ[\"catch\"] = function (object, rejected) {\n    return Q(object).then(void 0, rejected);\n};\n\nPromise.prototype.fail = // XXX legacy\nPromise.prototype[\"catch\"] = function (rejected) {\n    return this.then(void 0, rejected);\n};\n\n/**\n * Attaches a listener that can respond to progress notifications from a\n * promise's originating deferred. This listener receives the exact arguments\n * passed to ``deferred.notify``.\n * @param {Any*} promise for something\n * @param {Function} callback to receive any progress notifications\n * @returns the given promise, unchanged\n */\nQ.progress = progress;\nfunction progress(object, progressed) {\n    return Q(object).then(void 0, void 0, progressed);\n}\n\nPromise.prototype.progress = function (progressed) {\n    return this.then(void 0, void 0, progressed);\n};\n\n/**\n * Provides an opportunity to observe the settling of a promise,\n * regardless of whether the promise is fulfilled or rejected.  Forwards\n * the resolution to the returned promise when the callback is done.\n * The callback can return a promise to defer completion.\n * @param {Any*} promise\n * @param {Function} callback to observe the resolution of the given\n * promise, takes no arguments.\n * @returns a promise for the resolution of the given promise when\n * ``fin`` is done.\n */\nQ.fin = // XXX legacy\nQ[\"finally\"] = function (object, callback) {\n    return Q(object)[\"finally\"](callback);\n};\n\nPromise.prototype.fin = // XXX legacy\nPromise.prototype[\"finally\"] = function (callback) {\n    callback = Q(callback);\n    return this.then(function (value) {\n        return callback.fcall().then(function () {\n            return value;\n        });\n    }, function (reason) {\n        // TODO attempt to recycle the rejection with \"this\".\n        return callback.fcall().then(function () {\n            throw reason;\n        });\n    });\n};\n\n/**\n * Terminates a chain of promises, forcing rejections to be\n * thrown as exceptions.\n * @param {Any*} promise at the end of a chain of promises\n * @returns nothing\n */\nQ.done = function (object, fulfilled, rejected, progress) {\n    return Q(object).done(fulfilled, rejected, progress);\n};\n\nPromise.prototype.done = function (fulfilled, rejected, progress) {\n    var onUnhandledError = function (error) {\n        // forward to a future turn so that ``when``\n        // does not catch it and turn it into a rejection.\n        Q.nextTick(function () {\n            makeStackTraceLong(error, promise);\n            if (Q.onerror) {\n                Q.onerror(error);\n            } else {\n                throw error;\n            }\n        });\n    };\n\n    // Avoid unnecessary `nextTick`ing via an unnecessary `when`.\n    var promise = fulfilled || rejected || progress ?\n        this.then(fulfilled, rejected, progress) :\n        this;\n\n    if (typeof process === \"object\" && process && process.domain) {\n        onUnhandledError = process.domain.bind(onUnhandledError);\n    }\n\n    promise.then(void 0, onUnhandledError);\n};\n\n/**\n * Causes a promise to be rejected if it does not get fulfilled before\n * some milliseconds time out.\n * @param {Any*} promise\n * @param {Number} milliseconds timeout\n * @param {Any*} custom error message or Error object (optional)\n * @returns a promise for the resolution of the given promise if it is\n * fulfilled before the timeout, otherwise rejected.\n */\nQ.timeout = function (object, ms, error) {\n    return Q(object).timeout(ms, error);\n};\n\nPromise.prototype.timeout = function (ms, error) {\n    var deferred = defer();\n    var timeoutId = setTimeout(function () {\n        if (!error || \"string\" === typeof error) {\n            error = new Error(error || \"Timed out after \" + ms + \" ms\");\n            error.code = \"ETIMEDOUT\";\n        }\n        deferred.reject(error);\n    }, ms);\n\n    this.then(function (value) {\n        clearTimeout(timeoutId);\n        deferred.resolve(value);\n    }, function (exception) {\n        clearTimeout(timeoutId);\n        deferred.reject(exception);\n    }, deferred.notify);\n\n    return deferred.promise;\n};\n\n/**\n * Returns a promise for the given value (or promised value), some\n * milliseconds after it resolved. Passes rejections immediately.\n * @param {Any*} promise\n * @param {Number} milliseconds\n * @returns a promise for the resolution of the given promise after milliseconds\n * time has elapsed since the resolution of the given promise.\n * If the given promise rejects, that is passed immediately.\n */\nQ.delay = function (object, timeout) {\n    if (timeout === void 0) {\n        timeout = object;\n        object = void 0;\n    }\n    return Q(object).delay(timeout);\n};\n\nPromise.prototype.delay = function (timeout) {\n    return this.then(function (value) {\n        var deferred = defer();\n        setTimeout(function () {\n            deferred.resolve(value);\n        }, timeout);\n        return deferred.promise;\n    });\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided as an array, and returns a promise.\n *\n *      Q.nfapply(FS.readFile, [__filename])\n *      .then(function (content) {\n *      })\n *\n */\nQ.nfapply = function (callback, args) {\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfapply = function (args) {\n    var deferred = defer();\n    var nodeArgs = array_slice(args);\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided individually, and returns a promise.\n * @example\n * Q.nfcall(FS.readFile, __filename)\n * .then(function (content) {\n * })\n *\n */\nQ.nfcall = function (callback /*...args*/) {\n    var args = array_slice(arguments, 1);\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfcall = function (/*...args*/) {\n    var nodeArgs = array_slice(arguments);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Wraps a NodeJS continuation passing function and returns an equivalent\n * version that returns a promise.\n * @example\n * Q.nfbind(FS.readFile, __filename)(\"utf-8\")\n * .then(console.log)\n * .done()\n */\nQ.nfbind =\nQ.denodeify = function (callback /*...args*/) {\n    var baseArgs = array_slice(arguments, 1);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        Q(callback).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nfbind =\nPromise.prototype.denodeify = function (/*...args*/) {\n    var args = array_slice(arguments);\n    args.unshift(this);\n    return Q.denodeify.apply(void 0, args);\n};\n\nQ.nbind = function (callback, thisp /*...args*/) {\n    var baseArgs = array_slice(arguments, 2);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        function bound() {\n            return callback.apply(thisp, arguments);\n        }\n        Q(bound).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nbind = function (/*thisp, ...args*/) {\n    var args = array_slice(arguments, 0);\n    args.unshift(this);\n    return Q.nbind.apply(void 0, args);\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback with a given array of arguments, plus a provided callback.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param {Array} args arguments to pass to the method; the callback\n * will be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nmapply = // XXX As proposed by \"Redsandro\"\nQ.npost = function (object, name, args) {\n    return Q(object).npost(name, args);\n};\n\nPromise.prototype.nmapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.npost = function (name, args) {\n    var nodeArgs = array_slice(args || []);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback, forwarding the given variadic arguments, plus a provided\n * callback argument.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param ...args arguments to pass to the method; the callback will\n * be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nsend = // XXX Based on Mark Miller's proposed \"send\"\nQ.nmcall = // XXX Based on \"Redsandro's\" proposal\nQ.ninvoke = function (object, name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 2);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    Q(object).dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\nPromise.prototype.nsend = // XXX Based on Mark Miller's proposed \"send\"\nPromise.prototype.nmcall = // XXX Based on \"Redsandro's\" proposal\nPromise.prototype.ninvoke = function (name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 1);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * If a function would like to support both Node continuation-passing-style and\n * promise-returning-style, it can end its internal promise chain with\n * `nodeify(nodeback)`, forwarding the optional nodeback argument.  If the user\n * elects to use a nodeback, the result will be sent there.  If they do not\n * pass a nodeback, they will receive the result promise.\n * @param object a result (or a promise for a result)\n * @param {Function} nodeback a Node.js-style callback\n * @returns either the promise or nothing\n */\nQ.nodeify = nodeify;\nfunction nodeify(object, nodeback) {\n    return Q(object).nodeify(nodeback);\n}\n\nPromise.prototype.nodeify = function (nodeback) {\n    if (nodeback) {\n        this.then(function (value) {\n            Q.nextTick(function () {\n                nodeback(null, value);\n            });\n        }, function (error) {\n            Q.nextTick(function () {\n                nodeback(error);\n            });\n        });\n    } else {\n        return this;\n    }\n};\n\nQ.noConflict = function() {\n    throw new Error(\"Q.noConflict only works when Q is used as a global\");\n};\n\n// All code before this point will be filtered from stack traces.\nvar qEndingLine = captureLine();\n\nreturn Q;\n\n});\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ReceiptsPage } from './receipts.page';\n// import {ReceiptsRouterModules} from './receipts.router.modules';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ReceiptsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ReceiptsPage]\n})\nexport class ReceiptsPageModule {}\n","module.exports = \"<!--<ion-header class=\\\"app-page-home\\\" color=\\\"medium\\\">-->\\n<ion-toolbar color=\\\"medium\\\">\\n  <ion-buttons slot=\\\"start\\\" style=\\\"color: black\\\">\\n    <ion-back-button text=\\\"\\\" defaultHref=\\\"home\\\" class=\\\"menubutton\\\">\\n    </ion-back-button>\\n    <ion-menu-button class=\\\"menubuttonspace\\\"></ion-menu-button>\\n  </ion-buttons>\\n  <ion-title align=\\\"center\\\" class=\\\"titleall\\\">Receipts</ion-title>\\n  <ion-icon style=\\\"width: 30px;height: 30px;color: black\\\" slot=\\\"end\\\" name=\\\"help-circle-outline\\\"\\n    (click)=\\\"presentAlert()\\\"></ion-icon>\\n</ion-toolbar>\\n<!--</ion-header>-->\\n<ion-content align=\\\"center\\\">\\n\\n  <button align=\\\"center\\\" style=\\\"margin-top: 10px\\\" class=\\\"receipts-buttonclass\\\" (click)=\\\"newReceipt()\\\" type=\\\"submit\\\">ADD\\n    RECEIPTS</button>\\n\\n  <br>\\n\\n  <ion-segment style=\\\"margin-top: 5px\\\" (ionChange)=\\\"tabChanged($event)\\\" scrollable>\\n    <ion-segment-button value=\\\"Approved\\\" checked layout=\\\"icon-end\\\" class=\\\"segmentwidth\\\">\\n      <ion-label style=\\\"text-transform: capitalize;font-size: 14px\\\">Approved</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"Request\\\" class=\\\"segmentwidth\\\">\\n      <ion-label style=\\\"text-transform: capitalize;font-size: 14px\\\">Audit Req/Declined</ion-label>\\n    </ion-segment-button>\\n  </ion-segment>\\n\\n  <div *ngIf=\\\"isSelected=='Approved'\\\" style=\\\"margin-top: 15px\\\">\\n    <div *ngIf=\\\"isApprovedDataBlank=='Data'\\\" style=\\\"margin-top: 15px; margin-bottom: 10px\\\">\\n      <ion-label style=\\\"font-size: 16px;font-weight: bold;margin: 10px\\\">Below details only for current active event\\n        \\\"{{activeEvent}}\\\"</ion-label>\\n    </div>\\n    <div *ngIf=\\\"isApprovedDataBlank=='Blank'\\\" style=\\\"margin-top: 15px; padding: 10px\\\">\\n      <ion-label style=\\\"font-size: 16px;font-weight: bold\\\">No Approved Receipts</ion-label>\\n    </div>\\n    <ion-list *ngFor=\\\"let item of approvedReceiptData let j = index\\\">\\n      <ion-list-header class=\\\"headerlist\\\" padding-end=\\\"5px\\\">\\n        <ion-label style=\\\"font-size: 14px; font-weight: bold;\\\">{{item.date}}</ion-label>\\n        <!-- <ion-label style=\\\"font-size: 13px\\\">Total Hrs:1.47</ion-label> -->\\n      </ion-list-header>\\n      <ion-item (click)=\\\"acceptReceipt(j,i)\\\" *ngFor=\\\"let data of item.receiptListArray; let i = index\\\">\\n        <ion-label class=\\\"h4-text\\\">\\n          {{data.category_name}}: ${{data.amount}}\\n        </ion-label>\\n        <ion-icon (click)=\\\"acceptReceipt(j,i)\\\" slot=\\\"end\\\" name=\\\"arrow-dropright\\\"></ion-icon>\\n      </ion-item>\\n      <ion-item (click)=\\\"payoutClicked(j)\\\">\\n        <ion-label class=\\\"payout\\\">\\n          Payout: $({{item.payout}})\\n        </ion-label>\\n        <ion-icon (click)=\\\"payoutClicked(j)\\\" slot=\\\"end\\\" name=\\\"arrow-dropright\\\"></ion-icon>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label class=\\\"receiptTotal\\\">\\n          Receipt Total: ${{item.total}}\\n        </ion-label>\\n      </ion-item>\\n    </ion-list>\\n  </div>\\n\\n  <div *ngIf=\\\"isSelected=='Request'\\\" style=\\\"margin-top: 15px\\\">\\n    <div *ngIf=\\\"isAuditdataBlank=='Data'\\\" style=\\\"margin-top: 15px; margin-bottom: 10px\\\">\\n      <ion-label style=\\\"font-size: 16px;font-weight: bold;margin: 10px\\\">Below details only for current active event\\n        \\\"{{activeEvent}}\\\"</ion-label>\\n    </div>\\n    <div *ngIf=\\\"isAuditdataBlank=='Blank'\\\" style=\\\"margin-top: 15px; padding: 10px\\\">\\n      <ion-label style=\\\"font-size: 16px;font-weight: bold\\\">No Audit Required or Declined Receipts</ion-label>\\n    </div>\\n\\n    <ion-list *ngFor=\\\"let item of auditReceiptData let j = index\\\">\\n      <ion-list-header class=\\\"headerlist\\\" padding-end=\\\"5px\\\">\\n        <ion-label style=\\\"font-size: 14px; font-weight: bold\\\">{{item.date}}</ion-label>\\n        <!--<ion-label style=\\\"font-size: 13px\\\">Total Hrs:1.47</ion-label>-->\\n      </ion-list-header>\\n      <ion-item (click)=\\\"declineReceipt(j,i)\\\" *ngFor=\\\"let data of item.data; let i = index\\\">\\n        <ion-label class=\\\"h4-text\\\">\\n          {{data.category_name}}: ${{data.amount}}\\n          <span *ngIf=\\\"data.rliOfficeUpdateArray.audit_status!='Audit Required'\\\" style=\\\"color: red;float:right\\\">Declined</span>\\n        </ion-label>\\n        <ion-icon (click)=\\\"declineReceipt(j,i)\\\" slot=\\\"end\\\" name=\\\"arrow-dropright\\\"></ion-icon>\\n      </ion-item>\\n    </ion-list>\\n  </div>\\n</ion-content>\\n<ion-footer class=\\\"footer-bg\\\">\\n  <ion-label align=\\\"bottom\\\" style=\\\"font-size: 16px;font-weight: bold\\\">Balance:${{balanceData}}</ion-label>\\n</ion-footer>\"","module.exports = \".receipts-buttonclass {\\n  background-color: #E3A214;\\n  cursor: pointer;\\n  border: none;\\n  width: 60%;\\n  height: 35px;\\n  padding: 5px; }\\n\\n.footer-bg {\\n  height: 5%;\\n  padding: 5px;\\n  background-color: #9AB7BC; }\\n\\n.menubutton {\\n  color: black !important; }\\n\\n.sc-ion-segment-md-h {\\n  --background: transparent;\\n  --background-hover: rgba(var(--ion-color-primary-rgb,56,128,255),0.1);\\n  --background-activated: rgba(var(--ion-color-primary-rgb,56,128,255),0.16);\\n  --background-checked: #3880ff00;\\n  --color-checked: var(--ion-color-primary-contrast,#fff);\\n  --color-disabled: rgba(var(--ion-color-primary-rgb,56,128,255),0.3);\\n  --color-checked-disabled: rgba(var(--ion-color-primary-contrast-rgb,255,255,255),0.3);\\n  --border-color: transparent;\\n  --indicator-color: black;\\n  background-color: gray;\\n  height: 50px;\\n  --color: #000000; }\\n\\n.border {\\n  border: 0.5px solid black;\\n  border-radius: 1px;\\n  min-height: 40px !important;\\n  width: 100% !important;\\n  margin-top: 5px;\\n  alignment: center; }\\n\\n.headerlist {\\n  background-color: #DCDCDC;\\n  color: black;\\n  height: 10px !important;\\n  width: 100%; }\\n\\n.h4-text {\\n  font-size: 15px; }\\n\\n.payout {\\n  font-size: 15px;\\n  color: red; }\\n\\n.receiptTotal {\\n  font-size: 15px;\\n  text-align: end;\\n  font-weight: bold; }\\n\\n.segmentwidth {\\n  width: 50%; }\\n\\n.list-md {\\n  padding-top: 0px !important;\\n  padding-bottom: 0px !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbmNhZG1pbi9Eb2N1bWVudHMvZ2l0bGFiL3JsaS1jb21tYW5kZXItYW5kcm9pZC1pb25pYzQvc3JjL2FwcC9yZWNlaXB0cy9yZWNlaXB0cy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5QkFBeUI7RUFDekIsZUFBYztFQUNkLFlBQVk7RUFDWixVQUFVO0VBQ1YsWUFBWTtFQUNaLFlBQVksRUFBQTs7QUFFZDtFQUNFLFVBQVU7RUFDVixZQUFZO0VBQ1oseUJBQXlCLEVBQUE7O0FBRzNCO0VBQ0UsdUJBQXVCLEVBQUE7O0FBUXpCO0VBRUUseUJBQWE7RUFDYixxRUFBbUI7RUFDbkIsMEVBQXVCO0VBQ3ZCLCtCQUFxQjtFQUVyQix1REFBZ0I7RUFDaEIsbUVBQWlCO0VBQ2pCLHFGQUF5QjtFQUN6QiwyQkFBZTtFQUNmLHdCQUFrQjtFQUNsQixzQkFBc0I7RUFDdEIsWUFBWTtFQUNaLGdCQUFRLEVBQUE7O0FBR1Y7RUFDRSx5QkFBeUI7RUFDekIsa0JBQWtCO0VBQ2xCLDJCQUEyQjtFQUczQixzQkFBcUI7RUFDckIsZUFBZTtFQUVmLGlCQUFpQixFQUFBOztBQUduQjtFQUNFLHlCQUF5QjtFQUN6QixZQUFZO0VBQ1osdUJBQXNCO0VBQ3RCLFdBQVcsRUFBQTs7QUFHYjtFQUNFLGVBQWUsRUFBQTs7QUFHakI7RUFDRSxlQUFlO0VBQ2YsVUFBVSxFQUFBOztBQUdaO0VBQ0UsZUFBZTtFQUNmLGVBQWU7RUFDZixpQkFBaUIsRUFBQTs7QUFNbkI7RUFDRSxVQUFVLEVBQUE7O0FBR1o7RUFDRSwyQkFBMkI7RUFDM0IsOEJBQThCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9yZWNlaXB0cy9yZWNlaXB0cy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucmVjZWlwdHMtYnV0dG9uY2xhc3N7XG4gIGJhY2tncm91bmQtY29sb3I6ICNFM0EyMTQ7XG4gIGN1cnNvcjpwb2ludGVyO1xuICBib3JkZXI6IG5vbmU7XG4gIHdpZHRoOiA2MCU7XG4gIGhlaWdodDogMzVweDtcbiAgcGFkZGluZzogNXB4O1xufVxuLmZvb3Rlci1iZ3tcbiAgaGVpZ2h0OiA1JTtcbiAgcGFkZGluZzogNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjOUFCN0JDO1xufVxuXG4ubWVudWJ1dHRvbntcbiAgY29sb3I6IGJsYWNrICFpbXBvcnRhbnQ7XG59XG4vLy50aXRsZWFsbHtcbi8vICBtYXJnaW4tdG9wOiA3cHg7XG4vLyAgLy9mb250LXNpemU6IDE1cHg7XG4vLyAgLy9hbGlnbi1jb250ZW50OiBzdGFydDtcbi8vfVxuXG4uc2MtaW9uLXNlZ21lbnQtbWQtaCB7XG4vLy5zYy1pb24tc2VnbWVudC1pb3MtaCB7XG4gIC0tYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIC0tYmFja2dyb3VuZC1ob3ZlcjogcmdiYSh2YXIoLS1pb24tY29sb3ItcHJpbWFyeS1yZ2IsNTYsMTI4LDI1NSksMC4xKTtcbiAgLS1iYWNrZ3JvdW5kLWFjdGl2YXRlZDogcmdiYSh2YXIoLS1pb24tY29sb3ItcHJpbWFyeS1yZ2IsNTYsMTI4LDI1NSksMC4xNik7XG4gIC0tYmFja2dyb3VuZC1jaGVja2VkOiAjMzg4MGZmMDA7XG4gIC8vIC0tY29sb3I6IHZhcigtLWlvbi1jb2xvci1wcmltYXJ5LCMwMDAwMDApICFpbXBvcnRhbnQ7XG4gIC0tY29sb3ItY2hlY2tlZDogdmFyKC0taW9uLWNvbG9yLXByaW1hcnktY29udHJhc3QsI2ZmZik7XG4gIC0tY29sb3ItZGlzYWJsZWQ6IHJnYmEodmFyKC0taW9uLWNvbG9yLXByaW1hcnktcmdiLDU2LDEyOCwyNTUpLDAuMyk7XG4gIC0tY29sb3ItY2hlY2tlZC1kaXNhYmxlZDogcmdiYSh2YXIoLS1pb24tY29sb3ItcHJpbWFyeS1jb250cmFzdC1yZ2IsMjU1LDI1NSwyNTUpLDAuMyk7XG4gIC0tYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgLS1pbmRpY2F0b3ItY29sb3I6IGJsYWNrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBncmF5O1xuICBoZWlnaHQ6IDUwcHg7XG4gIC0tY29sb3I6ICMwMDAwMDA7XG59XG5cbi5ib3JkZXJ7XG4gIGJvcmRlcjogMC41cHggc29saWQgYmxhY2s7XG4gIGJvcmRlci1yYWRpdXM6IDFweDtcbiAgbWluLWhlaWdodDogNDBweCAhaW1wb3J0YW50O1xuICAvL21hcmdpbi1yaWdodDogNXB4IWltcG9ydGFudDtcbiAgLy9tYXJnaW4tbGVmdDogNXB4IWltcG9ydGFudDtcbiAgd2lkdGg6IDEwMCUhaW1wb3J0YW50O1xuICBtYXJnaW4tdG9wOiA1cHg7XG4gIC8vbWFyZ2luLWJvdHRvbTogNXB4O1xuICBhbGlnbm1lbnQ6IGNlbnRlcjtcbn1cblxuLmhlYWRlcmxpc3R7XG4gIGJhY2tncm91bmQtY29sb3I6ICNEQ0RDREM7XG4gIGNvbG9yOiBibGFjaztcbiAgaGVpZ2h0OiAxMHB4IWltcG9ydGFudDtcbiAgd2lkdGg6IDEwMCU7XG4gIH1cblxuLmg0LXRleHR7XG4gIGZvbnQtc2l6ZTogMTVweDtcbn1cblxuLnBheW91dHtcbiAgZm9udC1zaXplOiAxNXB4O1xuICBjb2xvcjogcmVkO1xufVxuXG4ucmVjZWlwdFRvdGFsIHtcbiAgZm9udC1zaXplOiAxNXB4OyBcbiAgdGV4dC1hbGlnbjogZW5kOyBcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4vL1xuLy86aG9zdCguYWN0aXZhdGVkKSwgOmhvc3QoLnNlZ21lbnQtYnV0dG9uLWNoZWNrZWQpIHtcbi8vICB3aWR0aDogNTAlO1xuLy99XG4uc2VnbWVudHdpZHRoe1xuICB3aWR0aDogNTAlO1xufVxuXG4ubGlzdC1tZCB7XG4gIHBhZGRpbmctdG9wOiAwcHggIWltcG9ydGFudDtcbiAgcGFkZGluZy1ib3R0b206IDBweCAhaW1wb3J0YW50O1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AlertController, NavController, LoadingController, Platform } from '@ionic/angular';\nimport { DataSevicesService } from '../providers/Data-Services/data-sevices.service';\nimport { NetworkProviderService } from '../providers/NetworkProvider/network-provider.service';\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite/ngx';\nimport { delay } from 'q';\n\n@Component({\n  selector: 'app-receipts',\n  templateUrl: './receipts.page.html',\n  styleUrls: ['./receipts.page.scss'],\n})\nexport class ReceiptsPage implements OnInit {\n\n  isSelected: any = 'Approved';\n\n  uId: any\n  eventId: any\n  isAuditdataBlank: any = 'Blank';\n  isApprovedDataBlank: any = 'Blank';\n  activeEvent: any\n  receiptsInDB = []\n  i = 0\n  receiptsofflineInDB = []\n  responseData: any\n  approvedReceiptData: any\n  auditReceiptData: any\n  balanceData: any = 0.00\n  approvedReceiptDataFromDB = []\n  nonApprovedReceiptDataFromDB = []\n  serverIdsString: string = ''\n\n  receiptGeoLocation = []\n  geoCounter = 0\n\n  constructor(\n    private router: Router,\n    public navCtrl: NavController,\n    public alertController: AlertController,\n    public dataServices: DataSevicesService,\n    public loadingController: LoadingController,\n    public networkProvider: NetworkProviderService,\n    private sqlite: SQLite,\n    private platform: Platform,\n  ) {\n    this.isAuditdataBlank = 'Blank';\n    this.isApprovedDataBlank = 'Blank';\n    this.platform.ready().then(() => {\n      delay(_ => {\n        this.displayReceiptFromDB()\n      }, 5000)\n    })\n  }\n\n  ngOnInit() {\n    this.activeEvent = localStorage.getItem('EventName');\n    this.syncReceipts()\n    this.getBalanceFromReceipt()\n    this.getApprovedReceiptsData()\n    this.getAuditReceiptListData()\n  }\n\n  newReceipt() {\n    this.router.navigate(['/newreceipts']);\n  }\n\n  tabChanged(data: any) {\n    console.log('tab: ' + data.detail.value);\n    if (data.detail.value == 'Approved') {\n      console.log('Approved.');\n      this.getApprovedReceiptsData()\n      this.isSelected = 'Approved';\n      // this.displayReceiptFromDB()\n    } else {\n      console.log('Request.');\n      // this.getAuditReceiptListData()\n      this.isSelected = 'Request';\n      this.displayReceiptFromDB()\n    }\n  }\n\n  async getApprovedReceiptsData() {\n    if (this.networkProvider.getNetworkStatus() == 'Online') {\n      let eventid = localStorage.getItem('EventId')\n      let contractorid = localStorage.getItem('UserID')\n      this.dataServices.getApprovedReceiptList(eventid, contractorid).then((result: any) => {\n        this.approvedReceiptData = result.dateArray\n        console.log(\"Approved Receipt DATA:-\", this.approvedReceiptData)\n        localStorage.setItem('approvedReceipt', JSON.stringify(this.approvedReceiptData))\n        if (this.approvedReceiptData.length > 0) {\n          this.isApprovedDataBlank = 'Data'\n        } else {\n          this.isApprovedDataBlank = 'Blank';\n        }\n      }, error => {\n        if (error.url == null) {\n          this.loadingController.dismiss();\n          // alert('No internet connection.')  \n        }\n        this.loadingController.dismiss();\n        if (error.status == 401) {\n          // this.dataServices.DeleteSqliteDB_Tables()\n          this.displayUnauthoriesdAlert();\n        }\n      })\n    } else {\n      this.approvedReceiptData = JSON.parse(localStorage.getItem('approvedReceipt'))\n      console.log('Offline receipt: ' + this.approvedReceiptData)\n      if (this.approvedReceiptData.length > 0) {\n        this.isApprovedDataBlank = 'Data'\n      } else {\n        this.isApprovedDataBlank = 'Blank';\n      }\n      this.loadingController.dismiss();\n      // alert('No internet connection.')\n    }\n  }\n\n  async getAuditReceiptListData() {\n    if (this.networkProvider.getNetworkStatus() == 'Online') {\n      // this.presentLoading()\n      this.dataServices.getAuditReceiptList().then((response) => {\n        // this.auditReceiptData = result\n        // console.log(\"Audit Receipt DATA:-\", this.auditReceiptData)\n        // this.isAuditdataBlank = 'Data'\n        let nonApprovedReceiptData: any = []\n        nonApprovedReceiptData = response\n        let serverIds = []\n        if (nonApprovedReceiptData.length > 0) {\n          for (let i = 0; i < nonApprovedReceiptData.length; i++) {\n            for (let j = 0; j < nonApprovedReceiptData[i].data.length; j++) {\n              // serverIds.push(nonApprovedReceiptData[i].data[j].log_id)\n              this.sqlite.create({\n                name: 'Commander.db',\n                location: 'default'\n              }).then((db: SQLiteObject) => {\n                db.executeSql('UPDATE receipts SET transactionID=?, auditStatus=?, status=?, reason=? WHERE server_id=?', [nonApprovedReceiptData[i].data[j].transaction_id, nonApprovedReceiptData[i].data[j].rliOfficeUpdateArray.audit_status, nonApprovedReceiptData[i].data[j].rliOfficeUpdateArray.status, nonApprovedReceiptData[i].data[j].rliOfficeUpdateArray.reason, nonApprovedReceiptData[i].data[j].transaction_id])\n                  .then(res => {\n                    console.log('Update: ' + res);\n                  }).catch(e => console.log(e));\n                let receiptInsertQuery = 'INSERT INTO receipts (userID,  receiptID,   eventTitle, eventID, workorder, date, amount,   category, categoryID, comment, transactionID, auditStatus, auditDate, status,  reason, RLICardinfo, yardID, yardName, image, imageName, server_id) Select ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,? WHERE NOT EXISTS(SELECT * FROM receipts WHERE server_id=?)'\n                db.executeSql(receiptInsertQuery, [nonApprovedReceiptData[i].data[j].userId, nonApprovedReceiptData[i].data[j].transaction_id, '', nonApprovedReceiptData[i].data[j].event_id, '', nonApprovedReceiptData[i].data[j].receiptDate, nonApprovedReceiptData[i].data[j].amount.toString(), nonApprovedReceiptData[i].data[j].category_name, nonApprovedReceiptData[i].data[j].category_id, nonApprovedReceiptData[i].data[j].comments, nonApprovedReceiptData[i].data[j].transaction_id, nonApprovedReceiptData[i].data[j].rliOfficeUpdateArray.audit_status, nonApprovedReceiptData[i].data[j].rliOfficeUpdateArray.date, nonApprovedReceiptData[i].data[j].rliOfficeUpdateArray.status, nonApprovedReceiptData[i].data[j].rliOfficeUpdateArray.reason, '', nonApprovedReceiptData[i].data[j].yard_id, nonApprovedReceiptData[i].data[j].yard_name, nonApprovedReceiptData[i].data[j].receiptFile, '', nonApprovedReceiptData[i].data[j].transaction_id, nonApprovedReceiptData[i].data[j].transaction_id])\n                  .then(res => {\n                    console.log('Insert: ' + res);\n                  }).catch(e => { console.log(e) })\n                //                                                                                                                                                                                                                                                                                                                                                                                            'userID,                                      eventTitle,                           eventID,                                                            date,                                     LOG,                                 ticket,                          laborCode,                                        laborCodeID,                                              startTime,                                                endTime,                                              hours,                                            state,                                          stateName,                                          yardID,                                                yardName,                                       comment,                     transactionId,                      auditStatus,                                auditDate,                                      status ,                                              reason,                                     server_id'\n              }).catch(e => console.log(e));\n            }\n          }\n          console.log('serverIds: ' + serverIds)\n          let string: string\n          string = JSON.stringify(serverIds).replace('[', '').replace(']', '')\n\n          console.log('String nonApproved: ' + string)\n          this.serverIdsString = this.serverIdsString + ',' + string\n          console.log('String in nonApproved: ' + this.serverIdsString)\n        }\n        this.loadingController.dismiss()\n      }, error => {\n        this.loadingController.dismiss();\n        if (error.status == 401) {\n          // this.dataServices.DeleteSqliteDB_Tables()\n          this.displayUnauthoriesdAlert();\n        }\n      })\n    } else {\n      this.loadingController.dismiss();\n      // alert('No internet connection.')\n    }\n  }\n\n  async getBalanceFromReceipt() {\n    if (this.networkProvider.getNetworkStatus() == 'Online') {\n      // this.presentLoading();\n      this.uId = localStorage.getItem('UserID');\n      this.eventId = localStorage.getItem('EventId');\n      this.dataServices.getBalanceFromReceiptApi(this.uId, this.eventId).then((result: any) => {\n        this.balanceData = result.data;\n        console.log('Balance : ' + this.balanceData);\n        localStorage.setItem('balance', result.data)\n        this.loadingController.dismiss();\n      }, error => {\n        this.loadingController.dismiss();\n        if (error.status == 401) {\n          // this.dataServices.DeleteSqliteDB_Tables()\n          this.displayUnauthoriesdAlert();\n        }\n      })\n    } else {\n      this.loadingController.dismiss();\n      this.balanceData = localStorage.getItem('balance')\n      // alert('No internet connection.')\n    }\n  }\n\n  acceptReceipt(section, index) {\n    console.log('Section: ', section)\n    console.log('Index: ', index)\n    console.log('acceptReceipt: ' + JSON.stringify(this.approvedReceiptData[section].receiptListArray[index]))\n    this.router.navigate(['approved-receipt', { type: 'receipt', item: JSON.stringify(this.approvedReceiptData[section].receiptListArray[index]) }]);\n  }\n\n  payoutClicked(section) {\n    console.log('Section of payout: ', section)\n    this.router.navigate(['approved-receipt', { type: 'payout', item: JSON.stringify(this.approvedReceiptData[section].payoutData) }]);\n  }\n\n  declineReceipt(section, index) {\n    console.log('Section: ', section)\n    console.log('Index: ', index)\n    this.router.navigate(['declinedreceipt', { item: JSON.stringify(this.auditReceiptData[section].data[index]) }]);\n  }\n\n  async presentAlert() {\n    const alert = await this.alertController.create({\n      header: '',\n      subHeader: '',\n      message: 'The details listed and the balance are only for your active event.  Note that each client during a deployment is considered to be a separate event. To see balances from other events, please go to your portal using this app.  Receipts must be approved by the Finance/Admin Section for you to be reimbursed. Review declined receipts and resubmit if you disagree with the decision as you will not be reimbursed for declined receipts.',\n      buttons: ['OK']\n    });\n    await alert.present();\n  }\n\n  async presentLoading() {\n    const loading = await this.loadingController.create({\n      message: 'Please wait...',\n      spinner: null\n    });\n    await loading.present();\n    setTimeout(() => {\n      loading.dismiss();\n    }, 2000);\n    const { role, data } = await loading.onDidDismiss();\n    console.log('Loading dismissed!');\n  }\n\n  async displayUnauthoriesdAlert() {\n    const alert = await this.alertController.create({\n      header: 'Unauthorized',\n      subHeader: '',\n      buttons: [{\n        text: 'OK',\n        handler: () => {\n          this.router.navigate(['/login']);\n        }\n      }]\n    });\n    await alert.present();\n  }\n\n  readonly() {\n    return true;\n  }\n\n  syncReceipts() {\n    if (this.networkProvider.getNetworkStatus() == 'Online') {\n      this.presentLoading()\n    }\n    this.sqlite.create({\n      name: 'Commander.db',\n      location: 'default'\n    }).then((db: SQLiteObject) => {\n      db.executeSql('SELECT * FROM receipts WHERE server_id=0', [])\n        .then(res => {\n          console.log(\"Task log:-\", JSON.stringify(res))\n          console.log(\"Task log length:-\", JSON.stringify(res.rows.length))\n          if (res.rows.length > 0) {\n            for (let i = 0; i < res.rows.length; i++) {\n              this.receiptsInDB.push(res.rows.item(i));\n            }\n          }\n          console.log(\"DATA ARRAY:-\", this.receiptsInDB);\n          this.i = 0\n          this.postReceipt()\n          this.receiptGeoLocation = JSON.parse(localStorage.getItem('receiptGeoLocation'))\n      if (this.receiptGeoLocation.length != 0) {\n        this.geoCounter = 0\n        this.postReceiptGeoLocation()\n      }\n        })\n        .catch(e => console.log(e));\n    }).catch(e => console.log(e));\n  }\n\n  postReceiptGeoLocation() {\n    this.dataServices.postGeoLocation(this.receiptGeoLocation[this.geoCounter].split(',')[0], this.receiptGeoLocation[this.geoCounter].split(',')[1], this.receiptGeoLocation[this.geoCounter].split(',')[2], this.receiptGeoLocation[this.geoCounter].split(',')[3], this.receiptGeoLocation[this.geoCounter].split(',')[4], this.receiptGeoLocation[this.geoCounter].split(',')[5])\n      .then(result => {\n        console.log('Location post successfully on add task logs: ' + JSON.stringify(result))\n        if (this.geoCounter < this.receiptGeoLocation.length) {\n          this.geoCounter +=1\n          this.postReceiptGeoLocation()\n        } else {\n          localStorage.removeItem('receiptGeoLocation')\n        }\n      }, error => {\n        console.log('Error in post location: ' + JSON.stringify(error))\n      })\n  }\n\n  postReceipt() {\n    if (this.receiptsInDB.length > this.i) {\n      if (this.networkProvider.getNetworkStatus() == 'Online') {\n        // local_id: any, eventId: any, date: any, yard: any, entityID: any, category: any, amount: any, comments: any, billable: any,checknum: any,audit: any,receiptFileNname: any, ccid: any\n        if (this.receiptsInDB[this.i].RLICardinfo.split('.')[0].length != 0) {\n          if (this.receiptsInDB[this.i].RLICardinfo.split('.')[0].length == 4) {\n            // GET CREDIT CARD DETAILS API CALL\n            this.dataServices.getCreditCardDetailApi(this.receiptsInDB[this.i].RLICardinfo.split('.')[0]).then((result) => {\n              this.responseData = result\n              console.log(\"Credit Card\", this.responseData)\n              let creditIdStatus = this.responseData.status;\n              if (creditIdStatus == 'success') {\n                //Update RLICardinfo number to credit_id\n                this.sqlite.create({\n                  name: 'Commander.db',\n                  location: 'default'\n                }).then((db: SQLiteObject) => {\n                  db.executeSql('UPDATE receipts SET RLICardinfo= ? WHERE ID= ?', [this.responseData.credit_id, this.receiptsInDB[this.i].ID])\n                    .then(res => {\n                      console.log(res);\n\n                    }).catch(e => console.log(e));\n                }).catch(e => console.log(e));\n\n                //Retrieve same row for post \n                this.sqlite.create({\n                  name: 'Commander.db',\n                  location: 'default'\n                }).then((db: SQLiteObject) => {\n                  db.executeSql('SELECT * FROM receipts WHERE ID=?', [this.receiptsInDB[this.i].ID])\n                    .then(res => {\n                      console.log(\"Task log:-\", JSON.stringify(res))\n                      console.log(\"Task log length:-\", JSON.stringify(res.rows.length))\n                      if (res.rows.length > 0) {\n                        this.receiptsofflineInDB = []\n                        for (let i = 0; i < res.rows.length; i++) {\n                          this.receiptsofflineInDB.push(res.rows.item(i));\n                        }\n                      }\n                      console.log(\"DATA ARRAY:-\", this.receiptsofflineInDB);\n                      console.log('Credit Card No:-', this.receiptsofflineInDB[0].RLICardinfo)\n                      this.dataServices.postReceiptData(this.receiptsofflineInDB[0].ID, this.receiptsofflineInDB[0].eventID, this.receiptsofflineInDB[0].date, this.receiptsofflineInDB[0].yardName, this.receiptsofflineInDB[0].userID, this.receiptsofflineInDB[0].categoryID, this.receiptsofflineInDB[0].amount, this.receiptsofflineInDB[0].comment, 1, '', 1, this.receiptsofflineInDB[0].image, this.receiptsofflineInDB[0].imageName, this.receiptsofflineInDB[0].RLICardinfo).then((result: any) => {\n                        console.log(\"Sucess Status: \", result)\n                        console.log(\"Response Data\", result.success)\n                        if (result.success == true) {\n                          this.sqlite.create({\n                            name: 'Commander.db',\n                            location: 'default'\n                          }).then((db: SQLiteObject) => {\n                            db.executeSql('UPDATE receipts SET transactionID=?, server_id=? WHERE ID=?', [result.server_id, result.server_id, result.local_id])\n                              .then(res => {\n                                console.log(res);\n                                this.i++\n                                if (this.receiptsInDB.length == this.i) {\n                                  this.receiptsInDB = []\n                                  this.loadingController.dismiss()\n                                  // this.TaskLogSaved(\"Task Log Saved Successfully\")\n                                } else {\n                                  this.loadingController.dismiss()\n                                  this.postReceipt()\n                                }\n                              }).catch(e => console.log(e));\n                          }).catch(e => console.log(e));\n\n                        } else {\n                          this.i++\n                          if (this.receiptsInDB.length == this.i) {\n                            this.receiptsInDB = []\n                            this.loadingController.dismiss()\n                            // this.taskLogSaved(\"Task Log Saved Successfully\")\n                          } else {\n                            this.loadingController.dismiss()\n                            this.postReceipt()\n                          }\n                        }\n                      });\n                    }).catch(e => console.log(e));\n                }).catch(e => console.log(e));\n\n              } else {\n                // If Credit card no. is invalid. \n                this.sqlite.create({\n                  name: 'Commander.db',\n                  location: 'default'\n                }).then((db: SQLiteObject) => {\n                  db.executeSql('UPDATE receipts SET auditStatus= ? WHERE ID= ?', ['Declined', this.receiptsInDB[this.i].ID])\n                    .then(res => {\n                      console.log(res);\n                      this.i++\n                      if (this.receiptsInDB.length == this.i) {\n                        this.receiptsInDB = []\n                        this.loadingController.dismiss()\n                        // this.taskLogSaved(\"Task Log Saved Successfully\")\n                      } else {\n                        this.loadingController.dismiss()\n                        this.postReceipt()\n                      }\n                    }).catch(e => console.log(e));\n                }).catch(e => console.log(e));\n\n              }\n            }, error => {\n              this.loadingController.dismiss();\n              if (error.status == 401) {\n                // this.dataServices.DeleteSqliteDB_Tables()\n                this.displayUnauthoriesdAlert();\n              }\n            })\n\n          }\n\n        } else {\n          // Without credit card \n          this.dataServices.postReceiptData(this.receiptsInDB[this.i].ID, this.receiptsInDB[this.i].eventID, this.receiptsInDB[this.i].date, this.receiptsInDB[this.i].yardName, this.receiptsInDB[this.i].userID, this.receiptsInDB[this.i].categoryID, this.receiptsInDB[this.i].amount, this.receiptsInDB[this.i].comment, 1, '', 1, this.receiptsInDB[this.i].image, this.receiptsInDB[this.i].imageName, this.receiptsInDB[this.i].RLICardinfo).then((result: any) => {\n            console.log(\"Sucess Status: \", result)\n            console.log(\"Response Data\", result.success)\n            if (result.success == true) {\n              this.sqlite.create({\n                name: 'Commander.db',\n                location: 'default'\n              }).then((db: SQLiteObject) => {\n                db.executeSql('UPDATE receipts SET transactionID=?, server_id=? WHERE ID=?', [result.server_id, result.server_id, result.local_id])\n                  .then(res => {\n                    console.log(res);\n                  }).catch(e => console.log(e));\n              }).catch(e => console.log(e));\n              this.i++\n              if (this.receiptsInDB.length == this.i) {\n                this.receiptsInDB = []\n                // this.TaskLogSaved(\"Task Log Saved Successfully\")\n              } else {\n                this.postReceipt()\n              }\n            } else {\n              this.i++\n              if (this.receiptsInDB.length == this.i) {\n                this.receiptsInDB = []\n                this.loadingController.dismiss()\n                // this.taskLogSaved(\"Task Log Saved Successfully\")\n              } else {\n                this.postReceipt()\n              }\n            }\n          });\n\n        }\n      } else {\n        this.loadingController.dismiss();\n        // alert('No internet connection.')\n      }\n    } else {\n      this.loadingController.dismiss()\n    }\n  }\n\n  displayReceiptFromDB() {\n    this.sqlite.create({\n      name: 'Commander.db',\n      location: 'default'\n    }).then((db: SQLiteObject) => {\n      db.executeSql('SELECT * FROM receipts GROUP BY date ORDER BY date DESC', [])\n        .then(res => {\n          console.log(\"Task log:-\", JSON.stringify(res))\n          console.log(\"Task log length:-\", JSON.stringify(res.rows.length))\n          if (res.rows.length > 0) {\n            this.approvedReceiptDataFromDB = []\n            this.nonApprovedReceiptDataFromDB = []\n            for (let i = 0; i < res.rows.length; i++) {\n              //Audit Required\n              db.executeSql('SELECT * FROM receipts WHERE date = ?', [res.rows.item(i).date]).then(res1 => {\n                console.log('Data of Date: ' + res1)\n                if (res1.rows.length > 0) {\n                  let taskLogArr = []\n                  // let totalHrs = 0.0\n                  for (let j = 0; j < res1.rows.length; j++) {\n                    let taskLogDataObj: any\n                    taskLogDataObj = {\n                      \"event_id\": res1.rows.item(j).eventID,\n                      \"userId\": res1.rows.item(j).userID,\n                      \"yard_id\": res1.rows.item(j).yardID,\n                      \"receiptDate\": res1.rows.item(j).date,\n                      \"category_name\": res1.rows.item(j).category,\n                      \"category_id\": res1.rows.item(j).categoryID,\n                      \"amount\": res1.rows.item(j).amount,\n                      \"transaction_id\": res1.rows.item(j).transactionID,\n                      \"comments\": res1.rows.item(j).comment,\n                      \"yard_name\": res1.rows.item(j).yardName,\n                      \"receiptFile\": res1.rows.item(j).image,\n                      \"checknum\": \"\",\n                      \"rliOfficeUpdateArray\": {\n                        \"audit_status\": res1.rows.item(j).auditStatus,\n                        \"date\": \"0000-00-00 00:00:00\",\n                        \"transaction_id\": res1.rows.item(j).transactionID,\n                        \"status\": res1.rows.item(j).status,\n                        \"reason\": res1.rows.item(j).reason\n                      }\n                    }\n                    taskLogArr.push(taskLogDataObj)\n                    // totalHrs += parseFloat((res1.rows.item(j).hours).replace(':', '.')) //res1.rows.item(j).hours\n                  }\n                  // console.log(res.rows.item(i).date + ': ' + taskLogArr.length + ' totalHrs: ' + totalHrs)\n                  let taskLog: any\n                  taskLog = {\n                    \"date\": res.rows.item(i).date,\n                    // \"totalHrs\": totalHrs,\n                    \"data\": taskLogArr\n                  }\n                  this.nonApprovedReceiptDataFromDB.push(taskLog)\n                }\n                console.log('nonApprovedReceiptDataFromDB: ' + JSON.stringify(this.nonApprovedReceiptDataFromDB))\n                this.auditReceiptData = this.nonApprovedReceiptDataFromDB\n                if (this.auditReceiptData.length > 0) {\n                  this.isAuditdataBlank = 'Data'\n                } else {\n                  this.isAuditdataBlank = 'Blank'\n                }\n              }).catch(e => console.log('Error in Date DB: ' + e));\n            }\n          }\n        }).catch(e => console.log(e));\n    }).catch(e => console.log(e));\n  }\n\n}\n"],"sourceRoot":""}