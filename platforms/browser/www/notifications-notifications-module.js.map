{"version":3,"sources":["webpack:///./src/app/notifications/notifications.module.ts","webpack:///./src/app/notifications/notifications.page.html","webpack:///./src/app/notifications/notifications.page.scss","webpack:///./src/app/notifications/notifications.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEY;AAEzD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qEAAiB;KAC7B;CACF,CAAC;AAWF;IAAA;IAAsC,CAAC;IAA1B,uBAAuB;QATnC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,qEAAiB,CAAC;SAClC,CAAC;OACW,uBAAuB,CAAG;IAAD,8BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBpC,osBAAosB,mMAAmM,oNAAoN,0MAA0M,kF;;;;;;;;;;;ACAryC,wCAAwC,8BAA8B,0EAA0E,+EAA+E,oCAAoC,4DAA4D,wEAAwE,0FAA0F,gCAAgC,6BAA6B,2BAA2B,iBAAiB,qBAAqB,EAAE,mBAAmB,eAAe,EAAE,+CAA+C,m/C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAloB;AACkB;AACiB;AAC5C;AAOzC;IAKE,2BACS,iBAAoC,EACpC,YAAgC,EAChC,eAAgC,EAC/B,MAAc;QAHf,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,iBAAY,GAAZ,YAAY,CAAoB;QAChC,oBAAe,GAAf,eAAe,CAAiB;QAC/B,WAAM,GAAN,MAAM,CAAQ;QAPxB,eAAU,GAAQ,MAAM;IAQpB,CAAC;IAEL,oCAAQ,GAAR;IACA,CAAC;IAED,sCAAU,GAAV,UAAW,IAAS;QAClB,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,MAAM,EAAE;YAC/B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;YACzB,IAAI,CAAC,oBAAoB,EAAE,CAAC;SAC7B;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;YAC3B,IAAI,CAAC,sBAAsB,EAAE,CAAC;SAC/B;IACH,CAAC;IAEK,0CAAc,GAApB;;;;;4BACkB,qBAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;4BAClD,OAAO,EAAE,gBAAgB;4BACzB,OAAO,EAAE,IAAI;yBACd,CAAC;;wBAHI,OAAO,GAAG,SAGd;wBACF,qBAAM,OAAO,CAAC,OAAO,EAAE;;wBAAvB,SAAuB,CAAC;wBACD,qBAAM,OAAO,CAAC,YAAY,EAAE;;wBAA7C,KAAiB,SAA4B,EAA3C,IAAI,YAAE,IAAI;wBAElB,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;;;;;KACnC;IAED,kDAAsB,GAAtB;QAAA,iBAYC;QAXC,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,YAAY,CAAC,yBAAyB,EAAE,CAAC,IAAI,CAAC,UAAC,MAAM;YACxD,KAAI,CAAC,UAAU,GAAG,MAAM;YACxB,OAAO,CAAC,GAAG,CAAC,uBAAuB,GAAG,KAAI,CAAC,UAAU,CAAC;YACtD,KAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;QACnC,CAAC,EAAE,eAAK;YACN,IAAI,KAAK,CAAC,MAAM,IAAI,GAAG,EAAE;gBACvB,KAAI,CAAC,wBAAwB,EAAE,CAAC;gBAChC,KAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;aAClC;QACH,CAAC,CAAC;IACJ,CAAC;IAED,gDAAoB,GAApB;QAAA,iBAYC;QAXC,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,YAAY,CAAC,uBAAuB,EAAE,CAAC,IAAI,CAAC,UAAC,MAAM;YACtD,KAAI,CAAC,UAAU,GAAG,MAAM;YACxB,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,KAAI,CAAC,UAAU,CAAC;YACrD,KAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;QACnC,CAAC,EAAE,eAAK;YACN,IAAI,KAAK,CAAC,MAAM,IAAI,GAAG,EAAE;gBACvB,KAAI,CAAC,wBAAwB,EAAE,CAAC;gBAChC,KAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;aAClC;QACH,CAAC,CAAC;IACJ,CAAC;IAGK,oDAAwB,GAA9B;;;;;;4BACgB,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;4BAC9C,MAAM,EAAE,cAAc;4BACtB,SAAS,EAAE,EAAE;4BACb,OAAO,EAAE,CAAC;oCACR,IAAI,EAAE,IAAI;oCACV,OAAO,EAAE;wCACP,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oCACnC,CAAC;iCACF,CAAC;yBACH,CAAC;;wBATI,KAAK,GAAG,SASZ;wBAEF,qBAAM,KAAK,CAAC,OAAO,EAAE;;wBAArB,SAAqB,CAAC;;;;;KACvB;IAED,4DAAgC,GAAhC;QAAA,iBAWC;QAVC,IAAI,cAAc,GAAG,EAAE;QACvB,IAAI,CAAC,YAAY,CAAC,gCAAgC,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,kBAAQ;YAC9E,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC;QAEtC,CAAC,EAAE,eAAK;YACN,IAAI,KAAK,CAAC,MAAM,IAAI,GAAG,EAAE;gBACvB,KAAI,CAAC,wBAAwB,EAAE,CAAC;gBAChC,KAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;aAClC;QACH,CAAC,CAAC;IACJ,CAAC;IA3FU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,iHAAwC;;SAEzC,CAAC;yCAO4B,gEAAiB;YACtB,gGAAkB;YACf,8DAAe;YACvB,sDAAM;OATb,iBAAiB,CA4F7B;IAAD,wBAAC;CAAA;AA5F6B","file":"notifications-notifications-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NotificationsPage } from './notifications.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NotificationsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [NotificationsPage]\n})\nexport class NotificationsPageModule {}\n","module.exports = \"<!--<ion-header color=\\\"medium\\\">-->\\n<ion-toolbar color=\\\"medium\\\">\\n    <ion-buttons slot=\\\"start\\\" style=\\\"color: black\\\">\\n        <!-- <ion-back-button text=\\\"\\\" defaultHref=\\\"home\\\" class=\\\"menubutton\\\">\\n        </ion-back-button> -->\\n        <ion-menu-button class=\\\"menubutton\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"titleall\\\">Notifications</ion-title>\\n</ion-toolbar>\\n<!--</ion-header>-->\\n\\n<ion-content>\\n    <ion-segment style=\\\"margin-top: 5px\\\" (ionChange)=\\\"tabChanged($event)\\\" scrollable>\\n        <ion-segment-button value=\\\"Read\\\" checked layout=\\\"icon-end\\\" class=\\\"segmentwidth\\\">\\n            <ion-label style=\\\"text-transform: capitalize;font-size: 14px\\\">Read</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"Unread\\\" class=\\\"segmentwidth\\\">\\n            <ion-label style=\\\"text-transform: capitalize;font-size: 14px\\\">Unread</ion-label>\\n        </ion-segment-button>\\n    </ion-segment>\\n\\n    <div *ngIf=\\\"isSelected=='Read'\\\" align=\\\"center\\\" margin-top=\\\"8px\\\">\\n\\n        <ion-label style=\\\"font-size: 16px;font-weight: bold\\\">You Don't Have Any Notification Yet</ion-label>\\n    </div>\\n    <div *ngIf=\\\"isSelected=='Unread'\\\" align=\\\"center\\\" margin-top=\\\"8px\\\">\\n        <ion-label style=\\\"font-size: 16px;font-weight: bold\\\">No New Notification</ion-label>\\n    </div>\\n\\n</ion-content>\"","module.exports = \".sc-ion-segment-md-h {\\n  --background: transparent;\\n  --background-hover: rgba(var(--ion-color-primary-rgb,56,128,255),0.1);\\n  --background-activated: rgba(var(--ion-color-primary-rgb,56,128,255),0.16);\\n  --background-checked: #3880ff00;\\n  --color-checked: var(--ion-color-primary-contrast,#fff);\\n  --color-disabled: rgba(var(--ion-color-primary-rgb,56,128,255),0.3);\\n  --color-checked-disabled: rgba(var(--ion-color-primary-contrast-rgb,255,255,255),0.3);\\n  --border-color: transparent;\\n  --indicator-color: black;\\n  background-color: gray;\\n  height: 50px;\\n  --color: #000000; }\\n\\n.segmentwidth {\\n  width: 50%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbmNhZG1pbi9Eb2N1bWVudHMvZ2l0bGFiL3JsaS1jb21tYW5kZXItYW5kcm9pZC1pb25pYzQvc3JjL2FwcC9ub3RpZmljYXRpb25zL25vdGlmaWNhdGlvbnMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUUseUJBQWE7RUFDYixxRUFBbUI7RUFDbkIsMEVBQXVCO0VBQ3ZCLCtCQUFxQjtFQUVyQix1REFBZ0I7RUFDaEIsbUVBQWlCO0VBQ2pCLHFGQUF5QjtFQUN6QiwyQkFBZTtFQUNmLHdCQUFrQjtFQUNsQixzQkFBc0I7RUFDdEIsWUFBWTtFQUNaLGdCQUFRLEVBQUE7O0FBR1Y7RUFDRSxVQUFVLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9ub3RpZmljYXRpb25zL25vdGlmaWNhdGlvbnMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNjLWlvbi1zZWdtZW50LW1kLWgge1xuICAvLy5zYy1pb24tc2VnbWVudC1pb3MtaCB7XG4gIC0tYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIC0tYmFja2dyb3VuZC1ob3ZlcjogcmdiYSh2YXIoLS1pb24tY29sb3ItcHJpbWFyeS1yZ2IsNTYsMTI4LDI1NSksMC4xKTtcbiAgLS1iYWNrZ3JvdW5kLWFjdGl2YXRlZDogcmdiYSh2YXIoLS1pb24tY29sb3ItcHJpbWFyeS1yZ2IsNTYsMTI4LDI1NSksMC4xNik7XG4gIC0tYmFja2dyb3VuZC1jaGVja2VkOiAjMzg4MGZmMDA7XG4gIC8vIC0tY29sb3I6IHZhcigtLWlvbi1jb2xvci1wcmltYXJ5LCMwMDAwMDApICFpbXBvcnRhbnQ7XG4gIC0tY29sb3ItY2hlY2tlZDogdmFyKC0taW9uLWNvbG9yLXByaW1hcnktY29udHJhc3QsI2ZmZik7XG4gIC0tY29sb3ItZGlzYWJsZWQ6IHJnYmEodmFyKC0taW9uLWNvbG9yLXByaW1hcnktcmdiLDU2LDEyOCwyNTUpLDAuMyk7XG4gIC0tY29sb3ItY2hlY2tlZC1kaXNhYmxlZDogcmdiYSh2YXIoLS1pb24tY29sb3ItcHJpbWFyeS1jb250cmFzdC1yZ2IsMjU1LDI1NSwyNTUpLDAuMyk7XG4gIC0tYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgLS1pbmRpY2F0b3ItY29sb3I6IGJsYWNrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBncmF5O1xuICBoZWlnaHQ6IDUwcHg7XG4gIC0tY29sb3I6ICMwMDAwMDA7XG59XG5cbi5zZWdtZW50d2lkdGh7XG4gIHdpZHRoOiA1MCU7XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { LoadingController, AlertController } from '@ionic/angular';\nimport { DataSevicesService } from '../providers/Data-Services/data-sevices.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.page.html',\n  styleUrls: ['./notifications.page.scss'],\n})\nexport class NotificationsPage implements OnInit {\n\n  isSelected: any = 'Read'\n  resultData:any\n\n  constructor(\n    public loadingController: LoadingController,\n    public dataServices: DataSevicesService,\n    public alertController: AlertController,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  tabChanged(data: any) {\n    if (data.detail.value == 'Read') {\n      this.isSelected = 'Read';\n      this.getReadNotifications();\n    } else {\n      this.isSelected = 'Unread';\n      this.getUnreadNotifications();\n    }\n  }\n\n  async presentLoading() {\n    const loading = await this.loadingController.create({\n      message: 'Please wait...',\n      spinner: null\n    });\n    await loading.present();\n    const { role, data } = await loading.onDidDismiss();\n\n    console.log('Loading dismissed!');\n  }\n\n  getUnreadNotifications() {\n    this.presentLoading();\n    this.dataServices.getUnreadNotificationsApi().then((result) => {\n      this.resultData = result\n      console.log('unreadNotification : ' + this.resultData)\n      this.loadingController.dismiss();\n    }, error => {\n      if (error.status == 401) {\n        this.displayUnauthoriesdAlert();\n        this.loadingController.dismiss();\n      }\n    })\n  }\n\n  getReadNotifications(){\n    this.presentLoading();\n    this.dataServices.getReadNotificationsApi().then((result) => {\n      this.resultData = result\n      console.log('readNotifications : ' + this.resultData)\n      this.loadingController.dismiss();\n    }, error => {\n      if (error.status == 401) {\n        this.displayUnauthoriesdAlert();\n        this.loadingController.dismiss();\n      }\n    })\n  }\n\n\n  async displayUnauthoriesdAlert() {\n    const alert = await this.alertController.create({\n      header: 'Unauthorized',\n      subHeader: '',\n      buttons: [{\n        text: 'ok',\n        handler: () => {\n          this.router.navigate(['/login']);\n        }\n      }]\n    });\n\n    await alert.present();\n  }\n\n  postConfirmedUnreadNotifications() {\n    let notificationID = ''\n    this.dataServices.postConfirmedUnreadNotifications(notificationID).then(response => {\n      console.log('response: ' + response)\n\n    }, error => {\n      if (error.status == 401) {\n        this.displayUnauthoriesdAlert();\n        this.loadingController.dismiss();\n      }\n    })\n  }\n}\n"],"sourceRoot":""}