{"version":3,"sources":["webpack:///./node_modules/@ionic-native/file-transfer/ngx/index.js","webpack:///./node_modules/@ionic-native/file/ngx/index.js","webpack:///./src/app/newreceipts/newreceipts.module.ts","webpack:///./src/app/newreceipts/newreceipts.page.html","webpack:///./src/app/newreceipts/newreceipts.page.scss","webpack:///./src/app/newreceipts/newreceipts.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AAC2C;AACsE;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gEAAU;AAClB;AACA,SAAS;AACT;AACA;AACA,CAAC,CAAC,oEAAiB;AACK;AACxB;AACA;AACA,YAAY,4EAAiB;AAC7B;AACA;AACA;AACA,2FAA2F,QAAQ,0EAAe,kBAAkB,qCAAqC,aAAa;AACtL,+FAA+F,QAAQ,0EAAe,oBAAoB,qCAAqC,aAAa;AAC5L;AACA;AACA;AACA,gBAAgB,+EAAoB;AACpC;AACA;AACA,SAAS;AACT;AACA,sDAAsD,QAAQ,0EAAe,iBAAiB,eAAe,aAAa;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC6B;AAC9B,2CAA2C,utY;;;;;;;;;;;;AC5F3C;AAAA;AAAA;AAAA;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AAC2C;AACmF;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4EAAiB;AACjC,uBAAuB,qEAAU;AACjC;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,4EAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,4EAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,4EAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,gBAAgB;AAC7E,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,4EAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,gBAAgB;AAC7E,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,4EAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,gBAAgB;AAC7E,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,4EAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,4EAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,gBAAgB;AAC7E,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,4EAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,4EAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,4EAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,gBAAgB;AACzE,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA,gBAAgB,4EAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB,eAAe,4BAA4B;AAC3C,eAAe,cAAc;AAC7B,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,+BAA+B,WAAW,EAAE;AAC5C;AACA;AACA;AACA;AACA,gBAAgB,4EAAiB;AACjC,8DAA8D,gBAAgB;AAC9E;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,4EAAiB;AACjC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,4EAAiB;AACjC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,4EAAiB;AACjC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,4EAAiB;AACjC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,4EAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,gBAAgB;AACzE,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,4EAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,gBAAgB;AACzE,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,gBAAgB,4EAAiB;AACjC,uBAAuB,qEAAU;AACjC;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,4EAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,4EAAiB;AACjC;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,4EAAiB;AACjC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,gBAAgB;AACxE,SAAS;AACT;AACA;AACA,mBAAmB,qEAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,8CAA8C;AAC9E;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAiC;AAC1D,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAiC;AAC1D,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qEAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,0BAA0B,QAAQ,6EAAkB,+BAA+B,EAAE;AACrF,+BAA+B,CAAC,6EAAkB,sCAAsC,EAAE;AAC1F;AACA;AACA,KAAK;AACL;AACA,0BAA0B,QAAQ,6EAAkB,sCAAsC,EAAE;AAC5F,+BAA+B,CAAC,6EAAkB,6CAA6C,EAAE;AACjG;AACA;AACA,KAAK;AACL;AACA,0BAA0B,QAAQ,6EAAkB,wBAAwB,EAAE;AAC9E,+BAA+B,CAAC,6EAAkB,+BAA+B,EAAE;AACnF;AACA;AACA,KAAK;AACL;AACA,0BAA0B,QAAQ,6EAAkB,yBAAyB,EAAE;AAC/E,+BAA+B,CAAC,6EAAkB,gCAAgC,EAAE;AACpF;AACA;AACA,KAAK;AACL;AACA,0BAA0B,QAAQ,6EAAkB,8CAA8C,EAAE;AACpG,+BAA+B,CAAC,6EAAkB,qDAAqD,EAAE;AACzG;AACA;AACA,KAAK;AACL;AACA,0BAA0B,QAAQ,6EAAkB,gCAAgC,EAAE;AACtF,+BAA+B,CAAC,6EAAkB,uCAAuC,EAAE;AAC3F;AAC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","file":"newreceipts-newreceipts-module.js","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { IonicNativePlugin, instanceAvailability, cordovaInstance, checkAvailability } from '@ionic-native/core';\nvar FileTransfer = /** @class */ (function (_super) {\n    __extends(FileTransfer, _super);\n    function FileTransfer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Error code rejected from upload with FileTransferError\n         * Defined in FileTransferError.\n         *      FILE_NOT_FOUND_ERR: 1   Return when file was not found\n         *      INVALID_URL_ERR: 2,     Return when url was invalid\n         *      CONNECTION_ERR: 3,      Return on connection error\n         *      ABORT_ERR: 4,           Return on aborting\n         *      NOT_MODIFIED_ERR: 5     Return on '304 Not Modified' HTTP response\n         * @enum {number}\n         */\n        _this.FileTransferErrorCode = {\n            FILE_NOT_FOUND_ERR: 1,\n            INVALID_URL_ERR: 2,\n            CONNECTION_ERR: 3,\n            ABORT_ERR: 4,\n            NOT_MODIFIED_ERR: 5\n        };\n        return _this;\n    }\n    /**\n     * Creates a new FileTransfer object\n     * @return {FileTransferObject}\n     */\n    FileTransfer.prototype.create = function () {\n        return new FileTransferObject();\n    };\n    FileTransfer.pluginName = \"FileTransfer\";\n    FileTransfer.plugin = \"cordova-plugin-file-transfer\";\n    FileTransfer.pluginRef = \"FileTransfer\";\n    FileTransfer.repo = \"https://github.com/apache/cordova-plugin-file-transfer\";\n    FileTransfer.platforms = [\"Amazon Fire OS\", \"Android\", \"Browser\", \"iOS\", \"Ubuntu\", \"Windows\", \"Windows Phone\"];\n    FileTransfer = __decorate([\n        Injectable({\n            providedIn: 'root'\n        })\n    ], FileTransfer);\n    return FileTransfer;\n}(IonicNativePlugin));\nexport { FileTransfer };\nvar FileTransferObject = /** @class */ (function () {\n    function FileTransferObject() {\n        if (checkAvailability(FileTransfer.getPluginRef(), null, FileTransfer.getPluginName()) === true) {\n            this._objectInstance = new (FileTransfer.getPlugin())();\n        }\n    }\n    FileTransferObject.prototype.upload = function (fileUrl, url, options, trustAllHosts) { return cordovaInstance(this, \"upload\", { \"successIndex\": 2, \"errorIndex\": 3 }, arguments); };\n    FileTransferObject.prototype.download = function (source, target, trustAllHosts, options) { return cordovaInstance(this, \"download\", { \"successIndex\": 2, \"errorIndex\": 3 }, arguments); };\n    FileTransferObject.prototype.onProgress = function (listener) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                _this._objectInstance.onprogress = listener;\n            }\n        })();\n    };\n    FileTransferObject.prototype.abort = function () { return cordovaInstance(this, \"abort\", { \"sync\": true }, arguments); };\n    FileTransferObject.plugin = \"cordova-plugin-file-transfer\";\n    FileTransferObject.pluginName = \"FileTransfer\";\n    FileTransferObject = __decorate([\n        __metadata(\"design:paramtypes\", [])\n    ], FileTransferObject);\n    return FileTransferObject;\n}());\nexport { FileTransferObject };\n//# sourceMappingURL=data:application/json;base64,","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injectable } from '@angular/core';\nimport { IonicNativePlugin, checkAvailability, cordovaPropertyGet, cordovaPropertySet, getPromise } from '@ionic-native/core';\nvar File = /** @class */ (function (_super) {\n    __extends(File, _super);\n    function File() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.cordovaFileError = {\n            1: 'NOT_FOUND_ERR',\n            2: 'SECURITY_ERR',\n            3: 'ABORT_ERR',\n            4: 'NOT_READABLE_ERR',\n            5: 'ENCODING_ERR',\n            6: 'NO_MODIFICATION_ALLOWED_ERR',\n            7: 'INVALID_STATE_ERR',\n            8: 'SYNTAX_ERR',\n            9: 'INVALID_MODIFICATION_ERR',\n            10: 'QUOTA_EXCEEDED_ERR',\n            11: 'TYPE_MISMATCH_ERR',\n            12: 'PATH_EXISTS_ERR',\n            13: 'WRONG_ENTRY_TYPE',\n            14: 'DIR_READ_ERR'\n        };\n        return _this;\n    }\n    File.prototype.getFreeDiskSpace = function () {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    cordova.exec(resolve, reject, 'File', 'getFreeDiskSpace', []);\n                });\n            }\n        })();\n    };\n    File.prototype.checkDir = function (path, dir) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                if (/^\\//.test(dir)) {\n                    var err = new FileError(5);\n                    err.message = 'directory cannot start with /';\n                    return Promise.reject(err);\n                }\n                var fullPath = path + dir;\n                return _this.resolveDirectoryUrl(fullPath).then(function () {\n                    return true;\n                });\n            }\n        })();\n    };\n    File.prototype.createDir = function (path, dirName, replace) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                if (/^\\//.test(dirName)) {\n                    var err = new FileError(5);\n                    err.message = 'directory cannot start with /';\n                    return Promise.reject(err);\n                }\n                var options = {\n                    create: true\n                };\n                if (!replace) {\n                    options.exclusive = true;\n                }\n                return _this.resolveDirectoryUrl(path).then(function (fse) {\n                    return _this.getDirectory(fse, dirName, options);\n                });\n            }\n        })();\n    };\n    File.prototype.removeDir = function (path, dirName) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                if (/^\\//.test(dirName)) {\n                    var err = new FileError(5);\n                    err.message = 'directory cannot start with /';\n                    return Promise.reject(err);\n                }\n                return _this.resolveDirectoryUrl(path)\n                    .then(function (fse) {\n                    return _this.getDirectory(fse, dirName, { create: false });\n                })\n                    .then(function (de) {\n                    return _this.remove(de);\n                });\n            }\n        })();\n    };\n    File.prototype.moveDir = function (path, dirName, newPath, newDirName) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                newDirName = newDirName || dirName;\n                if (/^\\//.test(newDirName)) {\n                    var err = new FileError(5);\n                    err.message = 'directory cannot start with /';\n                    return Promise.reject(err);\n                }\n                return _this.resolveDirectoryUrl(path)\n                    .then(function (fse) {\n                    return _this.getDirectory(fse, dirName, { create: false });\n                })\n                    .then(function (srcde) {\n                    return _this.resolveDirectoryUrl(newPath).then(function (destenation) {\n                        return _this.move(srcde, destenation, newDirName);\n                    });\n                });\n            }\n        })();\n    };\n    File.prototype.copyDir = function (path, dirName, newPath, newDirName) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                if (/^\\//.test(newDirName)) {\n                    var err = new FileError(5);\n                    err.message = 'directory cannot start with /';\n                    return Promise.reject(err);\n                }\n                return _this.resolveDirectoryUrl(path)\n                    .then(function (fse) {\n                    return _this.getDirectory(fse, dirName, { create: false });\n                })\n                    .then(function (srcde) {\n                    return _this.resolveDirectoryUrl(newPath).then(function (deste) {\n                        return _this.copy(srcde, deste, newDirName);\n                    });\n                });\n            }\n        })();\n    };\n    File.prototype.listDir = function (path, dirName) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                if (/^\\//.test(dirName)) {\n                    var err = new FileError(5);\n                    err.message = 'directory cannot start with /';\n                    return Promise.reject(err);\n                }\n                return _this.resolveDirectoryUrl(path)\n                    .then(function (fse) {\n                    return _this.getDirectory(fse, dirName, {\n                        create: false,\n                        exclusive: false\n                    });\n                })\n                    .then(function (de) {\n                    var reader = de.createReader();\n                    return _this.readEntries(reader);\n                });\n            }\n        })();\n    };\n    File.prototype.removeRecursively = function (path, dirName) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                if (/^\\//.test(dirName)) {\n                    var err = new FileError(5);\n                    err.message = 'directory cannot start with /';\n                    return Promise.reject(err);\n                }\n                return _this.resolveDirectoryUrl(path)\n                    .then(function (fse) {\n                    return _this.getDirectory(fse, dirName, { create: false });\n                })\n                    .then(function (de) {\n                    return _this.rimraf(de);\n                });\n            }\n        })();\n    };\n    File.prototype.checkFile = function (path, file) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                if (/^\\//.test(file)) {\n                    var err = new FileError(5);\n                    err.message = 'file cannot start with /';\n                    return Promise.reject(err);\n                }\n                return _this.resolveLocalFilesystemUrl(path + file).then(function (fse) {\n                    if (fse.isFile) {\n                        return true;\n                    }\n                    else {\n                        var err = new FileError(13);\n                        err.message = 'input is not a file';\n                        return Promise.reject(err);\n                    }\n                });\n            }\n        })();\n    };\n    File.prototype.createFile = function (path, fileName, replace) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                if (/^\\//.test(fileName)) {\n                    var err = new FileError(5);\n                    err.message = 'file-name cannot start with /';\n                    return Promise.reject(err);\n                }\n                var options = {\n                    create: true\n                };\n                if (!replace) {\n                    options.exclusive = true;\n                }\n                return _this.resolveDirectoryUrl(path).then(function (fse) {\n                    return _this.getFile(fse, fileName, options);\n                });\n            }\n        })();\n    };\n    File.prototype.removeFile = function (path, fileName) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                if (/^\\//.test(fileName)) {\n                    var err = new FileError(5);\n                    err.message = 'file-name cannot start with /';\n                    return Promise.reject(err);\n                }\n                return _this.resolveDirectoryUrl(path)\n                    .then(function (fse) {\n                    return _this.getFile(fse, fileName, { create: false });\n                })\n                    .then(function (fe) {\n                    return _this.remove(fe);\n                });\n            }\n        })();\n    };\n    File.prototype.writeFile = function (path, fileName, text, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                if (/^\\//.test(fileName)) {\n                    var err = new FileError(5);\n                    err.message = 'file-name cannot start with /';\n                    return Promise.reject(err);\n                }\n                var getFileOpts = {\n                    create: !options.append,\n                    exclusive: !options.replace\n                };\n                return _this.resolveDirectoryUrl(path)\n                    .then(function (directoryEntry) {\n                    return _this.getFile(directoryEntry, fileName, getFileOpts);\n                })\n                    .then(function (fileEntry) {\n                    return _this.writeFileEntry(fileEntry, text, options);\n                });\n            }\n        })();\n    };\n    /**\n     * Write content to FileEntry.\n     * @hidden\n     * Write to an existing file.\n     * @param {FileEntry} fe file entry object\n     * @param {string | Blob | ArrayBuffer} text text content or blob to write\n     * @param {IWriteOptions} options replace file if set to true. See WriteOptions for more information.\n     * @returns {Promise<FileEntry>}  Returns a Promise that resolves to updated file entry or rejects with an error.\n     */\n    File.prototype.writeFileEntry = function (fe, text, options) {\n        var _this = this;\n        return this.createWriter(fe)\n            .then(function (writer) {\n            if (options.append) {\n                writer.seek(writer.length);\n            }\n            if (options.truncate) {\n                writer.truncate(options.truncate);\n            }\n            return _this.write(writer, text);\n        })\n            .then(function () { return fe; });\n    };\n    File.prototype.writeExistingFile = function (path, fileName, text) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                return _this.writeFile(path, fileName, text, { replace: true });\n            }\n        })();\n    };\n    File.prototype.readAsText = function (path, file) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                return _this.readFile(path, file, 'Text');\n            }\n        })();\n    };\n    File.prototype.readAsDataURL = function (path, file) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                return _this.readFile(path, file, 'DataURL');\n            }\n        })();\n    };\n    File.prototype.readAsBinaryString = function (path, file) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                return _this.readFile(path, file, 'BinaryString');\n            }\n        })();\n    };\n    File.prototype.readAsArrayBuffer = function (path, file) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                return _this.readFile(path, file, 'ArrayBuffer');\n            }\n        })();\n    };\n    File.prototype.moveFile = function (path, fileName, newPath, newFileName) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                newFileName = newFileName || fileName;\n                if (/^\\//.test(newFileName)) {\n                    var err = new FileError(5);\n                    err.message = 'file name cannot start with /';\n                    return Promise.reject(err);\n                }\n                return _this.resolveDirectoryUrl(path)\n                    .then(function (fse) {\n                    return _this.getFile(fse, fileName, { create: false });\n                })\n                    .then(function (srcfe) {\n                    return _this.resolveDirectoryUrl(newPath).then(function (deste) {\n                        return _this.move(srcfe, deste, newFileName);\n                    });\n                });\n            }\n        })();\n    };\n    File.prototype.copyFile = function (path, fileName, newPath, newFileName) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                newFileName = newFileName || fileName;\n                if (/^\\//.test(newFileName)) {\n                    var err = new FileError(5);\n                    err.message = 'file name cannot start with /';\n                    return Promise.reject(err);\n                }\n                return _this.resolveDirectoryUrl(path)\n                    .then(function (fse) {\n                    return _this.getFile(fse, fileName, { create: false });\n                })\n                    .then(function (srcfe) {\n                    return _this.resolveDirectoryUrl(newPath).then(function (deste) {\n                        return _this.copy(srcfe, deste, newFileName);\n                    });\n                });\n            }\n        })();\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.fillErrorMessage = function (err) {\n        try {\n            err.message = this.cordovaFileError[err.code];\n        }\n        catch (e) { }\n    };\n    File.prototype.resolveLocalFilesystemUrl = function (fileUrl) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    try {\n                        window.resolveLocalFileSystemURL(fileUrl, function (entry) {\n                            resolve(entry);\n                        }, function (err) {\n                            _this.fillErrorMessage(err);\n                            reject(err);\n                        });\n                    }\n                    catch (xc) {\n                        _this.fillErrorMessage(xc);\n                        reject(xc);\n                    }\n                });\n            }\n        })();\n    };\n    File.prototype.resolveDirectoryUrl = function (directoryUrl) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                return _this.resolveLocalFilesystemUrl(directoryUrl).then(function (de) {\n                    if (de.isDirectory) {\n                        return de;\n                    }\n                    else {\n                        var err = new FileError(13);\n                        err.message = 'input is not a directory';\n                        return Promise.reject(err);\n                    }\n                });\n            }\n        })();\n    };\n    File.prototype.getDirectory = function (directoryEntry, directoryName, flags) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                return new Promise(function (resolve, reject) {\n                    try {\n                        directoryEntry.getDirectory(directoryName, flags, function (de) {\n                            resolve(de);\n                        }, function (err) {\n                            _this.fillErrorMessage(err);\n                            reject(err);\n                        });\n                    }\n                    catch (xc) {\n                        _this.fillErrorMessage(xc);\n                        reject(xc);\n                    }\n                });\n            }\n        })();\n    };\n    File.prototype.getFile = function (directoryEntry, fileName, flags) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                return new Promise(function (resolve, reject) {\n                    try {\n                        directoryEntry.getFile(fileName, flags, resolve, function (err) {\n                            _this.fillErrorMessage(err);\n                            reject(err);\n                        });\n                    }\n                    catch (xc) {\n                        _this.fillErrorMessage(xc);\n                        reject(xc);\n                    }\n                });\n            }\n        })();\n    };\n    File.prototype.readFile = function (path, file, readAs) {\n        var _this = this;\n        if (/^\\//.test(file)) {\n            var err = new FileError(5);\n            err.message = 'file-name cannot start with /';\n            return Promise.reject(err);\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (directoryEntry) {\n            return _this.getFile(directoryEntry, file, { create: false });\n        })\n            .then(function (fileEntry) {\n            var reader = new FileReader();\n            return getPromise(function (resolve, reject) {\n                reader.onloadend = function () {\n                    if (reader.result !== undefined || reader.result !== null) {\n                        resolve(reader.result);\n                    }\n                    else if (reader.error !== undefined || reader.error !== null) {\n                        reject(reader.error);\n                    }\n                    else {\n                        reject({ code: null, message: 'READER_ONLOADEND_ERR' });\n                    }\n                };\n                fileEntry.file(function (file) {\n                    reader[\"readAs\" + readAs].call(reader, file);\n                }, function (error) {\n                    reject(error);\n                });\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.remove = function (fe) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            fe.remove(function () {\n                resolve({ success: true, fileRemoved: fe });\n            }, function (err) {\n                _this.fillErrorMessage(err);\n                reject(err);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.move = function (srce, destdir, newName) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            srce.moveTo(destdir, newName, function (deste) {\n                resolve(deste);\n            }, function (err) {\n                _this.fillErrorMessage(err);\n                reject(err);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.copy = function (srce, destdir, newName) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            srce.copyTo(destdir, newName, function (deste) {\n                resolve(deste);\n            }, function (err) {\n                _this.fillErrorMessage(err);\n                reject(err);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.readEntries = function (dr) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            dr.readEntries(function (entries) {\n                resolve(entries);\n            }, function (err) {\n                _this.fillErrorMessage(err);\n                reject(err);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.rimraf = function (de) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            de.removeRecursively(function () {\n                resolve({ success: true, fileRemoved: de });\n            }, function (err) {\n                _this.fillErrorMessage(err);\n                reject(err);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.createWriter = function (fe) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            fe.createWriter(function (writer) {\n                resolve(writer);\n            }, function (err) {\n                _this.fillErrorMessage(err);\n                reject(err);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.write = function (writer, gu) {\n        if (gu instanceof Blob) {\n            return this.writeFileInChunks(writer, gu);\n        }\n        return new Promise(function (resolve, reject) {\n            writer.onwriteend = function (evt) {\n                if (writer.error) {\n                    reject(writer.error);\n                }\n                else {\n                    resolve(evt);\n                }\n            };\n            writer.write(gu);\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.writeFileInChunks = function (writer, file) {\n        var BLOCK_SIZE = 1024 * 1024;\n        var writtenSize = 0;\n        function writeNextChunk() {\n            var size = Math.min(BLOCK_SIZE, file.size - writtenSize);\n            var chunk = file.slice(writtenSize, writtenSize + size);\n            writtenSize += size;\n            writer.write(chunk);\n        }\n        return getPromise(function (resolve, reject) {\n            writer.onerror = reject;\n            writer.onwrite = function () {\n                if (writtenSize < file.size) {\n                    writeNextChunk();\n                }\n                else {\n                    resolve();\n                }\n            };\n            writeNextChunk();\n        });\n    };\n    Object.defineProperty(File.prototype, \"applicationDirectory\", {\n        get: function () { return cordovaPropertyGet(this, \"applicationDirectory\"); },\n        set: function (value) { cordovaPropertySet(this, \"applicationDirectory\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"applicationStorageDirectory\", {\n        get: function () { return cordovaPropertyGet(this, \"applicationStorageDirectory\"); },\n        set: function (value) { cordovaPropertySet(this, \"applicationStorageDirectory\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"dataDirectory\", {\n        get: function () { return cordovaPropertyGet(this, \"dataDirectory\"); },\n        set: function (value) { cordovaPropertySet(this, \"dataDirectory\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"cacheDirectory\", {\n        get: function () { return cordovaPropertyGet(this, \"cacheDirectory\"); },\n        set: function (value) { cordovaPropertySet(this, \"cacheDirectory\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"externalApplicationStorageDirectory\", {\n        get: function () { return cordovaPropertyGet(this, \"externalApplicationStorageDirectory\"); },\n        set: function (value) { cordovaPropertySet(this, \"externalApplicationStorageDirectory\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"externalDataDirectory\", {\n        get: function () { return cordovaPropertyGet(this, \"externalDataDirectory\"); },\n        set: function (value) { cordovaPropertySet(this, \"externalDataDirectory\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"externalCacheDirectory\", {\n        get: function () { return cordovaPropertyGet(this, \"externalCacheDirectory\"); },\n        set: function (value) { cordovaPropertySet(this, \"externalCacheDirectory\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"externalRootDirectory\", {\n        get: function () { return cordovaPropertyGet(this, \"externalRootDirectory\"); },\n        set: function (value) { cordovaPropertySet(this, \"externalRootDirectory\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"tempDirectory\", {\n        get: function () { return cordovaPropertyGet(this, \"tempDirectory\"); },\n        set: function (value) { cordovaPropertySet(this, \"tempDirectory\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"syncedDataDirectory\", {\n        get: function () { return cordovaPropertyGet(this, \"syncedDataDirectory\"); },\n        set: function (value) { cordovaPropertySet(this, \"syncedDataDirectory\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"documentsDirectory\", {\n        get: function () { return cordovaPropertyGet(this, \"documentsDirectory\"); },\n        set: function (value) { cordovaPropertySet(this, \"documentsDirectory\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"sharedDirectory\", {\n        get: function () { return cordovaPropertyGet(this, \"sharedDirectory\"); },\n        set: function (value) { cordovaPropertySet(this, \"sharedDirectory\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    File.pluginName = \"File\";\n    File.plugin = \"cordova-plugin-file\";\n    File.pluginRef = \"cordova.file\";\n    File.repo = \"https://github.com/apache/cordova-plugin-file\";\n    File.platforms = [\"Android\", \"Browser\", \"iOS\", \"macOS\", \"Windows\"];\n    File = __decorate([\n        Injectable({\n            providedIn: 'root'\n        })\n    ], File);\n    return File;\n}(IonicNativePlugin));\nexport { File };\n//# sourceMappingURL=data:application/json;base64,","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NewreceiptsPage } from './newreceipts.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewreceiptsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [NewreceiptsPage]\n})\nexport class NewreceiptsPageModule {}\n","module.exports = \"<!--<ion-header color=\\\"medium\\\">-->\\n<ion-toolbar color=\\\"medium\\\">\\n  <ion-buttons slot=\\\"start\\\" style=\\\"color: black\\\">\\n    <ion-back-button text=\\\"\\\" defaultHref=\\\"home\\\" class=\\\"menubutton\\\">\\n    </ion-back-button>\\n    <ion-menu-button class=\\\"menubutton space\\\"></ion-menu-button>\\n  </ion-buttons>\\n  <ion-title align=\\\"start\\\" class=\\\"titleall\\\">Enter Receipt</ion-title>\\n  <ion-icon style=\\\"width: 30px;height: 30px;color: black\\\" slot=\\\"end\\\" name=\\\"help-circle-outline\\\"\\n    (click)=\\\"presentAlert()\\\"></ion-icon>\\n</ion-toolbar>\\n<!--</ion-header>-->\\n\\n<ion-content>\\n\\n  <ion-list>\\n    <form #form=\\\"ngForm\\\" novalidate>\\n\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col size=\\\"4\\\">\\n            <ion-label class=\\\"h3-text\\\" type=\\\"text\\\">Event:</ion-label>\\n          </ion-col>\\n          <ion-col size=\\\"8\\\">\\n            <ion-select class=\\\"bordertask selector\\\" placeholder=\\\"{{eventPlaceholder}}\\\" interface=\\\"popover\\\"\\n              (ionChange)=\\\"onEventSelect($event)\\\">\\n              <ion-select-option *ngFor=\\\"let title of eventArray;let idx = index\\\" selected=\\\"{{(idx==0).toString()}}\\\"\\n                [value]=\\\"title\\\">{{title}}</ion-select-option>\\n            </ion-select>\\n          </ion-col>\\n        </ion-row>\\n\\n        <ion-row>\\n          <ion-col size=\\\"4\\\">\\n            <ion-label class=\\\"h3-text\\\" type=\\\"text\\\">Yard:</ion-label>\\n          </ion-col>\\n          <ion-col size=\\\"8\\\">\\n            <ion-select class=\\\"bordertask selector\\\" interface=\\\"popover\\\" (ionChange)=\\\"onYardSelect($event)\\\">\\n              <ion-select-option *ngFor=\\\"let item of yardArray; let i = index\\\" [selected]=\\\"i == selectedIndex\\\"\\n                [value]=\\\"item\\\">{{item.name}}</ion-select-option>\\n            </ion-select>\\n          </ion-col>\\n\\n        </ion-row>\\n        <ion-row>\\n          <ion-col size=\\\"4\\\">\\n            <ion-label class=\\\"h3-text\\\" type=\\\"text\\\">RLI Credit Card:</ion-label>\\n          </ion-col>\\n          <ion-col size=\\\"8\\\">\\n            <ion-radio-group>\\n              <ion-list class=\\\"bordertask selector\\\">\\n                <ion-item>\\n                  <ion-label>Yes</ion-label>\\n                  <ion-radio slot=\\\"end\\\" value=\\\"yes\\\" (click)=\\\"ngIfCtrl()\\\"></ion-radio>\\n                </ion-item>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>No</ion-label>\\n                  <ion-radio slot=\\\"end\\\" value=\\\"no\\\" (click)=\\\"hideContact()\\\" checked></ion-radio>\\n                </ion-item>\\n              </ion-list>\\n            </ion-radio-group>\\n          </ion-col>\\n        </ion-row>\\n\\n        <ion-row *ngIf=\\\"show\\\">\\n          <ion-col size=\\\"4\\\">\\n            <ion-label class=\\\"h3-text\\\" type=\\\"text\\\">Credit Card No.:</ion-label>\\n          </ion-col>\\n          <ion-col size=\\\"8\\\">\\n            <ion-input type=\\\"number\\\" style=\\\"height: 30px;padding:10px\\\" class=\\\"bordertask selector\\\"\\n              placeholder=\\\"Last 4 digits\\\" maxlength=\\\"4\\\" [(ngModel)]=\\\"number\\\" name=\\\"number\\\" required pattern=\\\"0-9{4}\\\">\\n            </ion-input>\\n\\n          </ion-col>\\n        </ion-row>\\n\\n\\n        <ion-row>\\n          <ion-col size=\\\"4\\\">\\n            <ion-label class=\\\"h3-text\\\" type=\\\"text\\\">Date:</ion-label>\\n          </ion-col>\\n          <ion-col size=\\\"6\\\">\\n            <ion-datetime #myPicker style=\\\"height: 30px\\\" class=\\\"bordertask selector\\\" align=\\\"start\\\"\\n              displayFormat=\\\"DD-MM-YYYY\\\" name=\\\"currentdate\\\" [(ngModel)]=\\\"currentdate\\\" [min]=\\\"currentdate\\\">\\n            </ion-datetime>\\n            <!-- <ion-input style=\\\"height: 30px\\\" type=\\\"date\\\" name=\\\"currentdate\\\" [(ngModel)]=\\\"currentdate\\\" class=\\\"bordertask selector\\\"></ion-input> -->\\n          </ion-col>\\n          <ion-col size=\\\"2\\\">\\n            <ion-icon style=\\\"height: 30px; width: 30px\\\" (click)=\\\"iconOpenCalendar()\\\" name=\\\"calendar\\\"></ion-icon>\\n          </ion-col>\\n        </ion-row>\\n\\n\\n        <ion-row>\\n          <ion-col size=\\\"4\\\">\\n            <ion-label class=\\\"h3-text\\\" type=\\\"text\\\">Category:</ion-label>\\n          </ion-col>\\n          <ion-col size=\\\"8\\\">\\n            <ion-select class=\\\"bordertask selector\\\" placeholder=\\\"{{categoryPlaceholder}}\\\" interface=\\\"popover\\\"\\n              (ionChange)=\\\"onCategorySelect($event, i)\\\">\\n              <ion-select-option *ngFor=\\\"let title of categoryValues; let i= index\\\" [value]=\\\"title\\\">{{title}}\\n              </ion-select-option>\\n              <!-- <ion-select-option *ngFor=\\\"let title of categoryValues;\\\">{{title}}</ion-select-option> -->\\n              <!-- <ion-select-option *ngFor=\\\"let title of categoryArray;let idx = index\\\" [value]=\\\"title.Value\\\" selected=\\\"{{(idx==-1).toString()}}\\\">{{title}}</ion-select-option> -->\\n            </ion-select>\\n          </ion-col>\\n        </ion-row>\\n\\n        <ion-row>\\n          <ion-col size=\\\"4\\\">\\n            <ion-label class=\\\"h3-text\\\" type=\\\"text\\\">Amount($):</ion-label>\\n          </ion-col>\\n          <ion-col size=\\\"8\\\">\\n            <!-- <ion-input type=\\\"number\\\" ng-pattern=\\\"^\\\\d*(\\\\.\\\\d{0,2})?$\\\" step=\\\"0.01\\\"\\n            [(ngModel)]=\\\"amount\\\" name=\\\"amount\\\" class=\\\"bordertask selector\\\" placeholder=\\\"E.g.50.00\\\"></ion-input> -->\\n\\n            <ion-input style=\\\"height: 30px;padding:10px\\\" type=\\\"number\\\" name=\\\"amount\\\" [(ngModel)]=\\\"amount\\\"\\n              class=\\\"bordertask selector\\\" placeholder=\\\"E.g.50.00\\\" required pattern=\\\"[0-9]{2,}\\\">\\n            </ion-input>\\n          </ion-col>\\n        </ion-row>\\n\\n\\n        <ion-row>\\n          <ion-col>\\n            <ion-label class=\\\"h3-text\\\" type=\\\"text\\\">Comment:</ion-label>\\n            <ion-row>\\n              <ion-textarea class=\\\"border\\\" name=\\\"comment\\\" [(ngModel)]=\\\"comment\\\"\\n                placeholder=\\\"E.g.I paid this bill from my account\\\"></ion-textarea>\\n            </ion-row>\\n          </ion-col>\\n\\n\\n        </ion-row>\\n        <button class=\\\"uploadImageBtn\\\" align=\\\"center\\\" padding=\\\"2px\\\" (click)=\\\"presentActionSheet()\\\">Upload Image</button>\\n        <img style=\\\"margin-top: 10px\\\" src=\\\"{{photos}}\\\" />\\n        <!--</ion-thumbnail>-->\\n        <ion-button class=\\\"submitBtn\\\" (click)=\\\"validateReceiptForm()\\\" expand=\\\"full\\\">Submit</ion-button>\\n      </ion-grid>\\n    </form>\\n\\n  </ion-list>\\n</ion-content>\"","module.exports = \".input-padding {\\n  margin: 10px 0px !important; }\\n\\n.title-div {\\n  width: 35%; }\\n\\n.h4-text {\\n  font-size: 15px;\\n  text-align: left;\\n  padding-left: 10px; }\\n\\n.input-div {\\n  width: 65%; }\\n\\n.input-date-div {\\n  width: 45%; }\\n\\n.padding-to-input {\\n  padding-right: 10px; }\\n\\n.textarea {\\n  margin-top: 10px; }\\n\\n.border {\\n  border: 0.5px solid black;\\n  border-radius: 1px;\\n  margin-top: 5px;\\n  padding: 5px !important; }\\n\\n.uploadImageBtn {\\n  background-color: #E3A214;\\n  cursor: pointer;\\n  border: none;\\n  width: 50%;\\n  margin-left: 25%; }\\n\\n.submitBtn {\\n  background-color: #E3A214;\\n  margin-top: 15px;\\n  text-transform: capitalize; }\\n\\n.menubutton {\\n  color: black !important; }\\n\\n.action-sheet-button-inner.sc-ion-action-sheet-md {\\n  justify-content: center !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbmNhZG1pbi9Eb2N1bWVudHMvZ2l0bGFiL3JsaS1jb21tYW5kZXItYW5kcm9pZC1pb25pYzQvc3JjL2FwcC9uZXdyZWNlaXB0cy9uZXdyZWNlaXB0cy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSwyQkFBMkIsRUFBQTs7QUFHN0I7RUFDRSxVQUFVLEVBQUE7O0FBRVo7RUFDRSxlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLGtCQUFrQixFQUFBOztBQUVwQjtFQUNFLFVBQVUsRUFBQTs7QUFHWjtFQUNFLFVBQVUsRUFBQTs7QUFHWjtFQUNFLG1CQUFtQixFQUFBOztBQUVyQjtFQUNFLGdCQUFnQixFQUFBOztBQUtsQjtFQUNFLHlCQUF5QjtFQUN6QixrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLHVCQUF1QixFQUFBOztBQUt6QjtFQUNFLHlCQUF5QjtFQUN6QixlQUFjO0VBQ2QsWUFBWTtFQUNaLFVBQVU7RUFDVixnQkFBZ0IsRUFBQTs7QUFHbEI7RUFDRSx5QkFBeUI7RUFDekIsZ0JBQWdCO0VBQ2hCLDBCQUEwQixFQUFBOztBQUc1QjtFQUNFLHVCQUF1QixFQUFBOztBQVF6QjtFQUVFLGtDQUFrQyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvbmV3cmVjZWlwdHMvbmV3cmVjZWlwdHMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmlucHV0LXBhZGRpbmd7XG4gIG1hcmdpbjogMTBweCAwcHggIWltcG9ydGFudDtcbn1cblxuLnRpdGxlLWRpdntcbiAgd2lkdGg6IDM1JTtcbn1cbi5oNC10ZXh0e1xuICBmb250LXNpemU6IDE1cHg7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIHBhZGRpbmctbGVmdDogMTBweDtcbn1cbi5pbnB1dC1kaXZ7XG4gIHdpZHRoOiA2NSU7XG59XG5cbi5pbnB1dC1kYXRlLWRpdntcbiAgd2lkdGg6IDQ1JTtcbn1cblxuLnBhZGRpbmctdG8taW5wdXR7XG4gIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG59XG4udGV4dGFyZWF7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG4gIC8vd2lkdGg6IDkwJTtcbiAgLy9oZWlnaHQ6IDEwMCU7XG5cbn1cbi5ib3JkZXJ7XG4gIGJvcmRlcjogMC41cHggc29saWQgYmxhY2s7XG4gIGJvcmRlci1yYWRpdXM6IDFweDtcbiAgbWFyZ2luLXRvcDogNXB4O1xuICBwYWRkaW5nOiA1cHggIWltcG9ydGFudDtcbiAgLy9taW4taGVpZ2h0OiA0MHB4O1xuICAvL3dpZHRoOiAxMDAlO1xufVxuXG4udXBsb2FkSW1hZ2VCdG57XG4gIGJhY2tncm91bmQtY29sb3I6ICNFM0EyMTQ7XG4gIGN1cnNvcjpwb2ludGVyO1xuICBib3JkZXI6IG5vbmU7XG4gIHdpZHRoOiA1MCU7XG4gIG1hcmdpbi1sZWZ0OiAyNSU7XG59XG5cbi5zdWJtaXRCdG57XG4gIGJhY2tncm91bmQtY29sb3I6ICNFM0EyMTQ7XG4gIG1hcmdpbi10b3A6IDE1cHg7XG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xufVxuXG4ubWVudWJ1dHRvbntcbiAgY29sb3I6IGJsYWNrICFpbXBvcnRhbnQ7XG59XG4vLy50aXRsZWFsbHtcbi8vICBtYXJnaW4tdG9wOiA3cHg7XG4vLyAgLy9mb250LXNpemU6IDE1cHg7XG4vLyAgLy9hbGlnbi1jb250ZW50OiBzdGFydDtcbi8vfVxuXG4uYWN0aW9uLXNoZWV0LWJ1dHRvbi1pbm5lci5zYy1pb24tYWN0aW9uLXNoZWV0LW1kIHtcbiAgLW1zLWZsZXgtcGFjazogY2VudGVyICFpbXBvcnRhbnQ7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyICFpbXBvcnRhbnQ7XG59XG4iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActionSheetController, AlertController, LoadingController } from '@ionic/angular';\nimport { Camera, CameraOptions } from '@ionic-native/camera/ngx';\nimport { ImagePicker, ImagePickerOptions } from '@ionic-native/image-picker/ngx';\nimport { strings } from '@angular-devkit/core';\nimport { DataSevicesService } from '../providers/Data-Services/data-sevices.service';\nimport { Router } from '@angular/router';\nimport { NetworkProviderService } from '../providers/NetworkProvider/network-provider.service';\nimport { FileTransfer, FileUploadOptions, FileTransferObject } from '@ionic-native/file-transfer/ngx';\nimport { File } from '@ionic-native/file/ngx';\n\n@Component({\n  selector: 'app-newreceipts',\n  templateUrl: './newreceipts.page.html',\n  styleUrls: ['./newreceipts.page.scss'],\n\n})\nexport class NewreceiptsPage implements OnInit {\n\n  eventArray: any = []\n  @ViewChild('myPicker') startTime;\n  yardReceiptArray: any = ['Apex-IT', 'RLI 2019 Credit Cards', 'RLI 2019 Cards', 'RLI 2019 Credit Cards', 'RLI 2019', 'RLI 2019 Credit Cards', 'RLI 2019 Credit Cards', 'RLI 2019 Credit Cards', 'RLI 2019 Credit Cards', 'RLI 2019 Credit Cards', 'RLI 2019 Credit Cards', 'RLI 2019 Credit Cards', 'RLI 2019 Credit Cards', 'RLI 2019 Credit Cards'];\n  categoryKeys: any = []\n  categoryValues: any = []\n  responseData: any\n  eventPlaceholder: any\n  yardPlaceholder: any\n  yardArray: any\n  yardarrayParse: any\n  categoryPlaceholder: any\n  activeEventName: any\n  private options: ImagePickerOptions;\n  private base64Image: string;\n  private photos: any;\n  show = false;\n  number: string = \"\"\n  yardName: any\n  eventname: any\n  selectedIndex: any\n  myDate: any\n  image: any\n  myTime: any\n  selectedcategoryIndex = 0\n  categoryIndex: any\n  categoryInitial: any\n  amount: any\n  comment: any\n  currentdate: any\n  creditIdLength: any\n  dateformat: any\n  // receiptInfo = { eventTitle: \"\", yardTitle: \"\", RLIcard: \"\", credit_id: \"\", date: \"\", category: \"\", Amount: \"\", comment: \"\", image: \"\" };\n  receiptInfo = { eventTitle: \"\", workorder: \"\", date: \"\", category: \"\", amount: \"\", comment: \"\", image: \"\", categoryID: \"\", eventID: \"\", RLIcard: \"\", yardTitle: \"\", yardID: \"\", credit_id: \"\" };\n\n  constructor(\n    public alertController: AlertController,\n    public actionSheetController: ActionSheetController,\n    private imagePicker: ImagePicker,\n    private camera: Camera,\n    private router: Router,\n    private dataServices: DataSevicesService,\n    public loadingController: LoadingController,\n    public networkProvider: NetworkProviderService,\n    private transfer: FileTransfer,\n    private file: File,\n  ) {\n    this.getReceiptArray();\n    this.receiptInfo.category = \"-- Select Expense Type --\"\n    this.receiptInfo.amount = this.amount\n    this.currentdate = new Date().toISOString();\n    console.log('date : ' + this.myDate)\n    this.getCategories();\n    this.dateformat = new Date().toLocaleDateString().split(\"/\")\n    this.receiptInfo.date = this.dateformat[0] + \"-\" + this.dateformat[1] + \"-\" + this.dateformat[2]\n  }\n\n  ngOnInit() { }\n\n  getReceiptArray() {\n    //get Event array from dashboard\n    this.activeEventName = localStorage.getItem('EventName');\n    this.eventArray = [this.activeEventName];\n    //get activeYardName\n    this.receiptInfo.yardTitle = localStorage.getItem('YardName');\n    //yard array\n    this.yardArray = JSON.parse(localStorage.getItem('YardArray'));\n    //position of yardName\n    console.log('Size : ' + this.yardArray.length)\n    for (let i = 0; this.yardArray.length > i; i++) {\n      console.log('print : ' + JSON.stringify(this.yardArray[0]))\n      if (this.yardArray[i].name == this.receiptInfo.yardTitle) {\n        this.selectedIndex = i\n        console.log('Index of yardName : ' + i)\n      }\n    }\n\n    //placeholder names\n    this.eventPlaceholder = this.eventArray[0]\n    this.receiptInfo.eventTitle = this.eventArray[0]\n    this.yardPlaceholder = this.receiptInfo.yardTitle\n  }\n\n  async validationAlert(message: string) {\n    const alert = await this.alertController.create({\n      header: '',\n      subHeader: '',\n      message: message,\n      buttons: ['OK']\n    });\n    await alert.present();\n  }\n\n  // async presentAlert() {\n  //   const alert = await this.alertController.create({\n  //     header: '',\n  //     subHeader: '',\n  //     message: 'Add receipts immediately after the purchase.  Receipts that are not for fuel or food must have an explanation in the comment section, including who authorized the purchase or they will be declined.  The credit card section is only for those who have a credit card issued by RLI.',\n  //     buttons: ['OK']\n  //   });\n  //   await alert.present();\n  // }\n\n  passdate(data: any) {\n    console.log('Selected date', data);\n    this.myTime = data;\n  }\n\n  onEventSelect(item: any) {\n    console.log('onEventSelect: ' + item);\n    this.receiptInfo.eventTitle = item.detail.value;\n    console.log('this.receiptInfo.eventTitle : ' + this.receiptInfo.eventTitle);\n  }\n\n  onCategorySelect(item: any, i: any) {\n    console.log('onCategorySelect: ' + item.detail.value + '\\ni: ' + i);\n    this.receiptInfo.category = item.detail.value;\n    this.receiptInfo.categoryID = this.categoryKeys[this.categoryValues.indexOf(this.receiptInfo.category)]\n    console.log('this.receiptInfo.category : ' + this.receiptInfo.category + ' ' + this.receiptInfo.categoryID);\n  }\n\n  onYardSelect(item: any) {\n    this.receiptInfo.yardTitle = JSON.stringify(item.detail.value.name);\n    console.log('this.receiptInfo.yardTitle  : ' + this.receiptInfo.yardTitle);\n  }\n\n  getCategories() {\n    if (this.networkProvider.getNetworkStatus() == 'Online') {\n      this.presentLoading();\n      this.dataServices.getCategories().then((result) => {\n        this.responseData = result\n        if (this.responseData.status == 200) {\n          let categoryArray = JSON.parse(this.responseData.data)\n          this.categoryKeys = Object.keys(categoryArray)\n          this.categoryValues = Object.values(categoryArray)\n          this.categoryPlaceholder = this.categoryValues[0]\n          // this.categoryInitial = this.categoryArray[0]\n        }\n        this.loadingController.dismiss();\n      }, error => {\n        this.loadingController.dismiss();\n        if (error.status == 401) {\n          this.displayUnauthoriesdAlert();\n        }\n      })\n    } else {\n      alert('No internet connection.')\n    }\n  }\n\n  getCreditCardDetail() {\n    if (this.networkProvider.getNetworkStatus() == 'Online') {\n      this.presentLoading();\n      this.dataServices.getCreditCardDetailApi(this.number).then((result) => {\n        this.responseData = result\n        console.log(\"Credit Card\", this.responseData)\n        let creditIdStatus = this.responseData.status;\n        if (creditIdStatus == 'success') {\n          let creditCardId = this.responseData.credit_id;\n          console.log('creditIdNumber : ' + creditCardId);\n        }\n        else {\n          this.showCreditCardFailedMsg();\n        }\n        this.loadingController.dismiss();\n      }, error => {\n        this.loadingController.dismiss();\n        if (error.status == 401) {\n          this.displayUnauthoriesdAlert();\n        }\n      })\n    } else {\n      alert('No internet connection.')\n    }\n  }\n\n  async displayUnauthoriesdAlert() {\n    const alert = await this.alertController.create({\n      header: 'Unauthorized',\n      subHeader: '',\n      buttons: [{\n        text: 'ok',\n        handler: () => {\n          this.router.navigate(['/login']);\n        }\n      }]\n    });\n\n    await alert.present();\n  }\n\n  async showCreditCardFailedMsg() {\n    const alert = await this.alertController.create({\n      header: '',\n      subHeader: '',\n      message: 'The last four digits you entered do not match any credit card in the system. Please contact RLI Admin regarding this problem.',\n      buttons: ['OK']\n    });\n    await alert.present();\n  }\n\n  takePhoto(sourceType: number) {\n    const options: CameraOptions = {\n      quality: 50,\n      destinationType: this.camera.DestinationType.DATA_URL,\n      encodingType: this.camera.EncodingType.JPEG,\n      mediaType: this.camera.MediaType.PICTURE,\n      correctOrientation: true,\n      sourceType: sourceType,\n    };\n    // this.photos  = string;\n    this.camera.getPicture(options).then((imageData) => {\n      const base64Image = 'data:image/jpeg;base64,' + imageData;\n      // alert(base64Image)\n      this.photos = base64Image;\n      this.receiptInfo.image = base64Image\n\n    }, (err) => {\n      // Handle error\n    });\n  }\n\n  async presentActionSheet() {\n    const actionSheet = await this.actionSheetController.create({\n      header: 'Choose Your Action',\n      buttons: [{\n        text: 'Camera',\n        handler: () => {\n          // this.openCamera();\n          this.takePhoto(1);\n        }\n      }, {\n        text: 'Gallery',\n        handler: () => {\n          // this.OpenGallery();\n          this.takePhoto(0);\n        }\n      }, {\n        text: 'Cancel',\n        role: 'destructive',\n        // role: 'cancel',\n        handler: () => {\n          console.log('Cancel clicked');\n        }\n      }]\n    });\n    await actionSheet.present();\n  }\n\n  ngIfCtrl() {\n    this.show = true;\n  }\n\n  iconOpenCalendar() {\n    this.startTime.open();\n  }\n\n  hideContact() {\n    this.show = false;\n  }\n\n  validateReceiptForm() {\n    // this.receiptInfo.date = this.currentdate\n    this.receiptInfo.comment = this.comment\n    // this.receiptInfo.credit_id = this.number\n    this.receiptInfo.amount = this.amount\n    this.receiptInfo.yardID = localStorage.getItem('YardId')\n    this.receiptInfo.eventID = localStorage.getItem('EventId')\n\n    console.log('receiptInfo: ' + this.receiptInfo)\n\n    if (this.receiptInfo.eventTitle == \"\") {\n      this.receiptInfo.eventTitle = this.eventArray[0]\n      console.log('eventName1 : ' + this.receiptInfo.eventTitle)\n      return\n    }\n    if (this.receiptInfo.date == \"\" || this.receiptInfo.date == undefined || this.receiptInfo.date == null) {\n      this.validationAlert(\"Please Select Date\");\n      return\n    }\n\n    if (this.receiptInfo.eventTitle == \"\" || this.receiptInfo.eventTitle == undefined || this.receiptInfo.eventTitle == null) {\n      this.validationAlert(\"Please Select Event\");\n      return\n    }\n\n    if (this.show) {\n      this.receiptInfo.credit_id = this.number\n\n      if (this.receiptInfo.credit_id == \"\" || this.receiptInfo.credit_id == undefined || this.receiptInfo.credit_id == null) {\n        this.validationAlert(\"Please Enter Valid Card Number\");\n        return\n      }\n      else {\n        console.log('creditIdNumberLength : ' + this.number.toString().length)\n        this.creditIdLength = this.number.toString().length\n      }\n      if (this.creditIdLength == 4) {\n        this.getCreditCardDetail();\n        return\n      }\n\n      if (this.creditIdLength < 4 || this.creditIdLength > 4) {\n        this.validationAlert(\"Please Enter Valid Card Number\");\n        return\n      }\n      return\n    }\n\n    if (this.receiptInfo.category == \"-- Select Expense Type --\" || this.receiptInfo.category == \"\" || this.receiptInfo.category == undefined || this.receiptInfo.category == null) {\n      console.log('categoryMsg : ' + this.receiptInfo.category)\n      this.validationAlert(\"Please Select Category\");\n      return;\n    }\n\n    if (this.amount == \"\" || this.amount == null || this.amount == undefined) {\n      console.log('amountMsg : ' + this.receiptInfo.amount)\n\n      this.validationAlert('Please Enter Amount');\n      return;\n    }\n\n    if (this.photos == undefined || this.photos == \" \" || this.photos == null) {\n      this.validationAlert('Please Upload Just One Image');\n      return\n    }\n    this.submitReceiptsDataAlert('Do You Want To Submit Your Receipt?')\n  }\n\n  async submitReceiptsDataAlert(message) {\n    const alert = await this.alertController.create({\n      header: '',\n      message: message,\n      buttons: [{\n        text: 'YES',\n        handler: () => {\n          alert.dismiss();\n          this.submitReceiptData();\n        }\n      }, {\n        text: 'NO',\n        handler: () => {\n          alert.dismiss();\n        }\n      }]\n    });\n\n    await alert.present();\n  }\n\n  submitReceiptData() {\n    var imageName = this.receiptInfo.eventID + localStorage.getItem(\"UserID\") + Math.floor(Date.now() / 1000) + \"IMG.png\"\n    // this.baseImageName = this.savedImages\n    var targetPath = this.file.dataDirectory + imageName;\n    console.log(\"targetpath:-\", targetPath)\n\n    var receiptInfo = {\n      \"local_id\": 1,\n      \"event_id\": this.receiptInfo.eventID,\n      \"date\": this.receiptInfo.date,\n      \"yard\": this.receiptInfo.yardID,\n      \"entity_id\": localStorage.getItem(\"UserID\"),\n      \"category\": this.receiptInfo.categoryID,\n      \"amount\": this.receiptInfo.amount,\n      \"comments\": this.receiptInfo.comment,\n      \"billable\": \"1\",\n      \"checknum\": \"\",\n      \"audit\": \"1\",\n      \"receipt_file_name\": imageName,\n      \"cc_id\": this.receiptInfo.credit_id\n    }\n    console.log('receiptInfo: ' + receiptInfo)\n\n    const fileTransfer: FileTransferObject = this.transfer.create();\n    let options: FileUploadOptions = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        'Authorization': localStorage.getItem(\"AuthToken\")\n      },\n      fileKey: 'images',\n      fileName: imageName,\n      chunkedMode: false,\n      httpMethod: 'post',\n      mimeType: \"image/jpeg\",\n      params: receiptInfo\n    }\n\n    fileTransfer.download(this.photos, this.file.dataDirectory + imageName, true, options).then(result => {\n      console.log('result in download: ' + JSON.stringify(result));\n      console.log('download complete: ' + result.toURL());\n\n    // this.savedImages = this.baseImageName\n    // this.submitReceiptData()\n    // alert(\"DATA DIRECTORY:-\" + this.file.dataDirectory + imageName)\n    // console.log(\"DATA DIRECTORY:-\" + this.file.dataDirectory + imageName)\n    //  this.tempstrdatadir = this.file.dataDirectory + imageName\n    //   this.tempstrdatadir = this.tempstrdatadir.toString().replace(\"file:///\",\"\")\n    // console.log(\"Trim Data Dir :- \", this.tempstrdatadir)\n    fileTransfer.upload(targetPath, encodeURI('http://cmdr-app.rlisri.com:3000/api/addReceipt'), options, true)\n      .then((data) => {\n        alert(\"Success\");\n        console.log('success in upload: ' + JSON.stringify(data))\n        // this.submitReceiptData()\n      }, (err) => {\n        console.log('error in upload: ' + JSON.stringify(err))\n      })\n    }, error => {\n      console.log('file download error: ' + JSON.stringify(error))\n    })\n\n    // this.receiptInfo.eventID = localStorage.getItem('EventId');\n    // console.log(' EventId : ' + this.receiptInfo.eventID)\n    // let local_id: any\n    // let entity_id: any\n    // let billable: any\n    // let checknum: any\n    // let audit: any\n    // let receiptFileNname: any\n    // let ccid: any\n    // if (this.networkProvider.getNetworkStatus() == 'Online') {\n    //   this.presentLoading()\n    //   this.dataServices.postReceiptData(local_id, this.receiptInfo.eventID, this.receiptInfo.date, this.receiptInfo.yardID, entity_id, this.receiptInfo.category, this.receiptInfo.amount, this.receiptInfo.comment, billable, checknum, audit, receiptFileNname, ccid).then((res1) => {\n    //     console.log(\"Sucess Status:---\", res1)\n    //     this.loadingController.dismiss()\n    //   });\n    // } else {\n    //   alert('No internet connection.')\n    // }\n  }\n\n  async presentLoading() {\n    const loading = await this.loadingController.create({\n      message: 'Please wait...',\n      spinner: null\n    });\n    await loading.present();\n    const { role, data } = await loading.onDidDismiss();\n    console.log('Loading dismissed!');\n  }\n\n\n}\n"],"sourceRoot":""}